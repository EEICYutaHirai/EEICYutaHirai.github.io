/*! For license information please see LICENSES */
(window.webpackJsonp = window.webpackJsonp || []).push([[4], [, , , , , , , function (e, t) { var r = { clone: function (source) { var e = {}; for (var t in source) source.hasOwnProperty(t) && (e[t] = source[t]); return e }, cloneArray: function (source) { for (var e = [], i = 0; i < source.length; i++)e.push(r.clone(source[i])); return e }, cloneHashOfHash: function (source) { var e = {}; for (var t in source) source.hasOwnProperty(t) && (e[t] = r.clone(source[t])); return e }, cloneHashOfArrayOfHash: function (source) { var e = {}; for (var t in source) source.hasOwnProperty(t) && (e[t] = r.cloneArray(source[t])); return e }, gsub: function (source, pattern, e) { return source.split(pattern).join(e) }, strip: function (e) { return e.replace(/^\s+/, "").replace(/\s+$/, "") }, startsWith: function (e, pattern) { return 0 === e.indexOf(pattern) }, endsWith: function (e, pattern) { var t = e.length - pattern.length; return t >= 0 && e.lastIndexOf(pattern) === t }, each: function (e, t, r) { for (var i = 0, n = e.length; i < n; i++)t.apply(r, [e[i], i]) }, last: function (e) { return 0 === e.length ? null : e[e.length - 1] }, compact: function (e) { for (var output = [], i = 0; i < e.length; i++)e[i] && output.push(e[i]); return output }, detect: function (e, t) { for (var i = 0; i < e.length; i++)if (t(e[i])) return !0; return !1 } }; try { [Element.prototype, CharacterData.prototype, DocumentType.prototype].forEach((function (e) { e.hasOwnProperty("remove") || Object.defineProperty(e, "remove", { configurable: !0, enumerable: !0, writable: !0, value: function () { null !== this.parentNode && this.parentNode.removeChild(this) } }) })) } catch (e) { } e.exports = r }, , function (e, t) { var r = { FONTEM: 360, FONTSIZE: 30 }; r.STEP = 93 * r.FONTSIZE / 720, r.SPACE = 10, r.TOPNOTE = 15, r.STAVEHEIGHT = 100, r.INDENT = 50, e.exports = r }, , , , , , , , , , , , , function (e, t) { var r = function (e, t, r, n, o) { switch (o = o || {}, this.x = 0, this.c = e, this.dx = t, this.w = r, this.pitch = n, this.scalex = o.scalex || 1, this.scaley = o.scaley || 1, this.type = o.type || "symbol", this.pitch2 = o.pitch2, this.linewidth = o.linewidth, this.klass = o.klass, this.top = n, void 0 !== this.pitch2 && this.pitch2 > this.top && (this.top = this.pitch2), this.bottom = n, void 0 !== this.pitch2 && this.pitch2 < this.bottom && (this.bottom = this.pitch2), o.thickness && (this.top += o.thickness / 2, this.bottom -= o.thickness / 2), o.stemHeight && (o.stemHeight > 0 ? this.top += o.stemHeight : this.bottom += o.stemHeight), o.dim && (this.dim = o.dim), o.position && (this.position = o.position), this.height = o.height ? o.height : 4, o.top && (this.top = o.top), o.bottom && (this.bottom = o.bottom), o.realWidth ? this.realWidth = o.realWidth : this.realWidth = this.w, this.centerVertically = !1, this.type) { case "debug": this.chordHeightAbove = this.height; break; case "lyric": o.position && "below" === o.position ? this.lyricHeightBelow = this.height : this.lyricHeightAbove = this.height; break; case "chord": o.position && "below" === o.position ? this.chordHeightBelow = this.height : this.chordHeightAbove = this.height; break; case "text": void 0 === this.pitch ? o.position && "below" === o.position ? this.chordHeightBelow = this.height : this.chordHeightAbove = this.height : this.centerVertically = !0; break; case "part": this.partHeightAbove = this.height } }; r.prototype.getChordDim = function () { if ("debug" === this.type) return null; if (!this.chordHeightAbove && !this.chordHeightBelow) return null; var e = this.dim.font.size / 4; 1 === this.c.length && (e /= 2); var t = "chord" === this.type ? this.realWidth / 2 : 0, r = this.x - t - e; return { left: r, right: r + this.realWidth + e } }, r.prototype.invertLane = function (e) { void 0 === this.lane && (this.lane = 0), this.lane = e - this.lane - 1 }, r.prototype.putChordInLane = function (i) { this.lane = i, this.chordHeightAbove ? this.chordHeightAbove = 1.25 * this.height * this.lane : this.chordHeightBelow = 1.25 * this.height * this.lane }, r.prototype.getLane = function () { return void 0 === this.lane ? 0 : this.lane }, r.prototype.setX = function (e) { this.x = e + this.dx }, e.exports = r }, function (e, t) { e.exports = function (e) { return parseFloat(e.toFixed(2)) } }, , , , , , function (e, t, r) { var n = r(9), o = { 0: { d: [["M", 4.83, -14.97], ["c", .33, -.03, 1.11, 0, 1.47, .06], ["c", 1.68, .36, 2.97, 1.59, 3.78, 3.6], ["c", 1.2, 2.97, .81, 6.96, -.9, 9.27], ["c", -.78, 1.08, -1.71, 1.71, -2.91, 1.95], ["c", -.45, .09, -1.32, .09, -1.77, 0], ["c", -.81, -.18, -1.47, -.51, -2.07, -1.02], ["c", -2.34, -2.07, -3.15, -6.72, -1.74, -10.2], ["c", .87, -2.16, 2.28, -3.42, 4.14, -3.66], ["z"], ["m", 1.11, .87], ["c", -.21, -.06, -.69, -.09, -.87, -.06], ["c", -.54, .12, -.87, .42, -1.17, .99], ["c", -.36, .66, -.51, 1.56, -.6, 3], ["c", -.03, .75, -.03, 4.59, 0, 5.31], ["c", .09, 1.5, .27, 2.4, .6, 3.06], ["c", .24, .48, .57, .78, .96, .9], ["c", .27, .09, .78, .09, 1.05, 0], ["c", .39, -.12, .72, -.42, .96, -.9], ["c", .33, -.66, .51, -1.56, .6, -3.06], ["c", .03, -.72, .03, -4.56, 0, -5.31], ["c", -.09, -1.47, -.27, -2.37, -.6, -3.03], ["c", -.24, -.48, -.54, -.78, -.93, -.9], ["z"]], w: 10.78, h: 14.959 }, 1: { d: [["M", 3.3, -15.06], ["c", .06, -.06, .21, -.03, .66, .15], ["c", .81, .39, 1.08, .39, 1.83, .03], ["c", .21, -.09, .39, -.15, .42, -.15], ["c", .12, 0, .21, .09, .27, .21], ["c", .06, .12, .06, .33, .06, 5.94], ["c", 0, 3.93, 0, 5.85, .03, 6.03], ["c", .06, .36, .15, .69, .27, .96], ["c", .36, .75, .93, 1.17, 1.68, 1.26], ["c", .3, .03, .39, .09, .39, .3], ["c", 0, .15, -.03, .18, -.09, .24], ["c", -.06, .06, -.09, .06, -.48, .06], ["c", -.42, 0, -.69, -.03, -2.1, -.24], ["c", -.9, -.15, -1.77, -.15, -2.67, 0], ["c", -1.41, .21, -1.68, .24, -2.1, .24], ["c", -.39, 0, -.42, 0, -.48, -.06], ["c", -.06, -.06, -.06, -.09, -.06, -.24], ["c", 0, -.21, .06, -.27, .36, -.3], ["c", .75, -.09, 1.32, -.51, 1.68, -1.26], ["c", .12, -.27, .21, -.6, .27, -.96], ["c", .03, -.18, .03, -1.59, .03, -4.29], ["c", 0, -3.87, 0, -4.05, -.06, -4.14], ["c", -.09, -.15, -.18, -.24, -.39, -.24], ["c", -.12, 0, -.15, .03, -.21, .06], ["c", -.03, .06, -.45, .99, -.96, 2.13], ["c", -.48, 1.14, -.9, 2.1, -.93, 2.16], ["c", -.06, .15, -.21, .24, -.33, .24], ["c", -.24, 0, -.42, -.18, -.42, -.39], ["c", 0, -.06, 3.27, -7.62, 3.33, -7.74], ["z"]], w: 8.94, h: 15.058 }, 2: { d: [["M", 4.23, -14.97], ["c", .57, -.06, 1.68, 0, 2.34, .18], ["c", .69, .18, 1.5, .54, 2.01, .9], ["c", 1.35, .96, 1.95, 2.25, 1.77, 3.81], ["c", -.15, 1.35, -.66, 2.34, -1.68, 3.15], ["c", -.6, .48, -1.44, .93, -3.12, 1.65], ["c", -1.32, .57, -1.8, .81, -2.37, 1.14], ["c", -.57, .33, -.57, .33, -.24, .27], ["c", .39, -.09, 1.26, -.09, 1.68, 0], ["c", .72, .15, 1.41, .45, 2.1, .9], ["c", .99, .63, 1.86, .87, 2.55, .75], ["c", .24, -.06, .42, -.15, .57, -.3], ["c", .12, -.09, .3, -.42, .3, -.51], ["c", 0, -.09, .12, -.21, .24, -.24], ["c", .18, -.03, .39, .12, .39, .3], ["c", 0, .12, -.15, .57, -.3, .87], ["c", -.54, 1.02, -1.56, 1.74, -2.79, 2.01], ["c", -.42, .09, -1.23, .09, -1.62, .03], ["c", -.81, -.18, -1.32, -.45, -2.01, -1.11], ["c", -.45, -.45, -.63, -.57, -.96, -.69], ["c", -.84, -.27, -1.89, .12, -2.25, .9], ["c", -.12, .21, -.21, .54, -.21, .72], ["c", 0, .12, -.12, .21, -.27, .24], ["c", -.15, 0, -.27, -.03, -.33, -.15], ["c", -.09, -.21, .09, -1.08, .33, -1.71], ["c", .24, -.66, .66, -1.26, 1.29, -1.89], ["c", .45, -.45, .9, -.81, 1.92, -1.56], ["c", 1.29, -.93, 1.89, -1.44, 2.34, -1.98], ["c", .87, -1.05, 1.26, -2.19, 1.2, -3.63], ["c", -.06, -1.29, -.39, -2.31, -.96, -2.91], ["c", -.36, -.33, -.72, -.51, -1.17, -.54], ["c", -.84, -.03, -1.53, .42, -1.59, 1.05], ["c", -.03, .33, .12, .6, .57, 1.14], ["c", .45, .54, .54, .87, .42, 1.41], ["c", -.15, .63, -.54, 1.11, -1.08, 1.38], ["c", -.63, .33, -1.2, .33, -1.83, 0], ["c", -.24, -.12, -.33, -.18, -.54, -.39], ["c", -.18, -.18, -.27, -.3, -.36, -.51], ["c", -.24, -.45, -.27, -.84, -.21, -1.38], ["c", .12, -.75, .45, -1.41, 1.02, -1.98], ["c", .72, -.72, 1.74, -1.17, 2.85, -1.32], ["z"]], w: 10.764, h: 14.97 }, 3: { d: [["M", 3.78, -14.97], ["c", .3, -.03, 1.41, 0, 1.83, .06], ["c", 2.22, .3, 3.51, 1.32, 3.72, 2.91], ["c", .03, .33, .03, 1.26, -.03, 1.65], ["c", -.12, .84, -.48, 1.47, -1.05, 1.77], ["c", -.27, .15, -.36, .24, -.45, .39], ["c", -.09, .21, -.09, .36, 0, .57], ["c", .09, .15, .18, .24, .51, .39], ["c", .75, .42, 1.23, 1.14, 1.41, 2.13], ["c", .06, .42, .06, 1.35, 0, 1.71], ["c", -.18, .81, -.48, 1.38, -1.02, 1.95], ["c", -.75, .72, -1.8, 1.2, -3.18, 1.38], ["c", -.42, .06, -1.56, .06, -1.95, 0], ["c", -1.89, -.33, -3.18, -1.29, -3.51, -2.64], ["c", -.03, -.12, -.03, -.33, -.03, -.6], ["c", 0, -.36, 0, -.42, .06, -.63], ["c", .12, -.3, .27, -.51, .51, -.75], ["c", .24, -.24, .45, -.39, .75, -.51], ["c", .21, -.06, .27, -.06, .6, -.06], ["c", .33, 0, .39, 0, .6, .06], ["c", .3, .12, .51, .27, .75, .51], ["c", .36, .33, .57, .75, .6, 1.2], ["c", 0, .21, 0, .27, -.06, .42], ["c", -.09, .18, -.12, .24, -.54, .54], ["c", -.51, .36, -.63, .54, -.6, .87], ["c", .06, .54, .54, .9, 1.38, .99], ["c", .36, .06, .72, .03, .96, -.06], ["c", .81, -.27, 1.29, -1.23, 1.44, -2.79], ["c", .03, -.45, .03, -1.95, -.03, -2.37], ["c", -.09, -.75, -.33, -1.23, -.75, -1.44], ["c", -.33, -.18, -.45, -.18, -1.98, -.18], ["c", -1.35, 0, -1.41, 0, -1.5, -.06], ["c", -.18, -.12, -.24, -.39, -.12, -.6], ["c", .12, -.15, .15, -.15, 1.68, -.15], ["c", 1.5, 0, 1.62, 0, 1.89, -.15], ["c", .18, -.09, .42, -.36, .54, -.57], ["c", .18, -.42, .27, -.9, .3, -1.95], ["c", .03, -1.2, -.06, -1.8, -.36, -2.37], ["c", -.24, -.48, -.63, -.81, -1.14, -.96], ["c", -.3, -.06, -1.08, -.06, -1.38, .03], ["c", -.6, .15, -.9, .42, -.96, .84], ["c", -.03, .3, .06, .45, .63, .84], ["c", .33, .24, .42, .39, .45, .63], ["c", .03, .72, -.57, 1.5, -1.32, 1.65], ["c", -1.05, .27, -2.1, -.57, -2.1, -1.65], ["c", 0, -.45, .15, -.96, .39, -1.38], ["c", .12, -.21, .54, -.63, .81, -.81], ["c", .57, -.42, 1.38, -.69, 2.25, -.81], ["z"]], w: 9.735, h: 14.967 }, 4: { d: [["M", 8.64, -14.94], ["c", .27, -.09, .42, -.12, .54, -.03], ["c", .09, .06, .15, .21, .15, .3], ["c", -.03, .06, -1.92, 2.31, -4.23, 5.04], ["c", -2.31, 2.73, -4.23, 4.98, -4.26, 5.01], ["c", -.03, .06, .12, .06, 2.55, .06], ["l", 2.61, 0], ["l", 0, -2.37], ["c", 0, -2.19, .03, -2.37, .06, -2.46], ["c", .03, -.06, .21, -.18, .57, -.42], ["c", 1.08, -.72, 1.38, -1.08, 1.86, -2.16], ["c", .12, -.3, .24, -.54, .27, -.57], ["c", .12, -.12, .39, -.06, .45, .12], ["c", .06, .09, .06, .57, .06, 3.96], ["l", 0, 3.9], ["l", 1.08, 0], ["c", 1.05, 0, 1.11, 0, 1.2, .06], ["c", .24, .15, .24, .54, 0, .69], ["c", -.09, .06, -.15, .06, -1.2, .06], ["l", -1.08, 0], ["l", 0, .33], ["c", 0, .57, .09, 1.11, .3, 1.53], ["c", .36, .75, .93, 1.17, 1.68, 1.26], ["c", .3, .03, .39, .09, .39, .3], ["c", 0, .15, -.03, .18, -.09, .24], ["c", -.06, .06, -.09, .06, -.48, .06], ["c", -.42, 0, -.69, -.03, -2.1, -.24], ["c", -.9, -.15, -1.77, -.15, -2.67, 0], ["c", -1.41, .21, -1.68, .24, -2.1, .24], ["c", -.39, 0, -.42, 0, -.48, -.06], ["c", -.06, -.06, -.06, -.09, -.06, -.24], ["c", 0, -.21, .06, -.27, .36, -.3], ["c", .75, -.09, 1.32, -.51, 1.68, -1.26], ["c", .21, -.42, .3, -.96, .3, -1.53], ["l", 0, -.33], ["l", -2.7, 0], ["c", -2.91, 0, -2.85, 0, -3.09, -.15], ["c", -.18, -.12, -.3, -.39, -.27, -.54], ["c", .03, -.06, .18, -.24, .33, -.45], ["c", .75, -.9, 1.59, -2.07, 2.13, -3.03], ["c", .33, -.54, .84, -1.62, 1.05, -2.16], ["c", .57, -1.41, .84, -2.64, .9, -4.05], ["c", .03, -.63, .06, -.72, .24, -.81], ["l", .12, -.06], ["l", .45, .12], ["c", .66, .18, 1.02, .24, 1.47, .27], ["c", .6, .03, 1.23, -.09, 2.01, -.33], ["z"]], w: 11.795, h: 14.994 }, 5: { d: [["M", 1.02, -14.94], ["c", .12, -.09, .03, -.09, 1.08, .06], ["c", 2.49, .36, 4.35, .36, 6.96, -.06], ["c", .57, -.09, .66, -.06, .81, .06], ["c", .15, .18, .12, .24, -.15, .51], ["c", -1.29, 1.26, -3.24, 2.04, -5.58, 2.31], ["c", -.6, .09, -1.2, .12, -1.71, .12], ["c", -.39, 0, -.45, 0, -.57, .06], ["c", -.09, .06, -.15, .12, -.21, .21], ["l", -.06, .12], ["l", 0, 1.65], ["l", 0, 1.65], ["l", .21, -.21], ["c", .66, -.57, 1.41, -.96, 2.19, -1.14], ["c", .33, -.06, 1.41, -.06, 1.95, 0], ["c", 2.61, .36, 4.02, 1.74, 4.26, 4.14], ["c", .03, .45, .03, 1.08, -.03, 1.44], ["c", -.18, 1.02, -.78, 2.01, -1.59, 2.7], ["c", -.72, .57, -1.62, 1.02, -2.49, 1.2], ["c", -1.38, .27, -3.03, .06, -4.2, -.54], ["c", -1.08, -.54, -1.71, -1.32, -1.86, -2.28], ["c", -.09, -.69, .09, -1.29, .57, -1.74], ["c", .24, -.24, .45, -.39, .75, -.51], ["c", .21, -.06, .27, -.06, .6, -.06], ["c", .33, 0, .39, 0, .6, .06], ["c", .3, .12, .51, .27, .75, .51], ["c", .36, .33, .57, .75, .6, 1.2], ["c", 0, .21, 0, .27, -.06, .42], ["c", -.09, .18, -.12, .24, -.54, .54], ["c", -.18, .12, -.36, .3, -.42, .33], ["c", -.36, .42, -.18, .99, .36, 1.26], ["c", .51, .27, 1.47, .36, 2.01, .27], ["c", .93, -.21, 1.47, -1.17, 1.65, -2.91], ["c", .06, -.45, .06, -1.89, 0, -2.31], ["c", -.15, -1.2, -.51, -2.1, -1.05, -2.55], ["c", -.21, -.18, -.54, -.36, -.81, -.39], ["c", -.3, -.06, -.84, -.03, -1.26, .06], ["c", -.93, .18, -1.65, .6, -2.16, 1.2], ["c", -.15, .21, -.27, .3, -.39, .3], ["c", -.15, 0, -.3, -.09, -.36, -.18], ["c", -.06, -.09, -.06, -.15, -.06, -3.66], ["c", 0, -3.39, 0, -3.57, .06, -3.66], ["c", .03, -.06, .09, -.15, .15, -.18], ["z"]], w: 10.212, h: 14.997 }, 6: { d: [["M", 4.98, -14.97], ["c", .36, -.03, 1.2, 0, 1.59, .06], ["c", .9, .15, 1.68, .51, 2.25, 1.05], ["c", .57, .51, .87, 1.23, .84, 1.98], ["c", -.03, .51, -.21, .9, -.6, 1.26], ["c", -.24, .24, -.45, .39, -.75, .51], ["c", -.21, .06, -.27, .06, -.6, .06], ["c", -.33, 0, -.39, 0, -.6, -.06], ["c", -.3, -.12, -.51, -.27, -.75, -.51], ["c", -.39, -.36, -.57, -.78, -.57, -1.26], ["c", 0, -.27, 0, -.3, .09, -.42], ["c", .03, -.09, .18, -.21, .3, -.3], ["c", .12, -.09, .3, -.21, .39, -.27], ["c", .09, -.06, .21, -.18, .27, -.24], ["c", .06, -.12, .09, -.15, .09, -.33], ["c", 0, -.18, -.03, -.24, -.09, -.36], ["c", -.24, -.39, -.75, -.6, -1.38, -.57], ["c", -.54, .03, -.9, .18, -1.23, .48], ["c", -.81, .72, -1.08, 2.16, -.96, 5.37], ["l", 0, .63], ["l", .3, -.12], ["c", .78, -.27, 1.29, -.33, 2.1, -.27], ["c", 1.47, .12, 2.49, .54, 3.27, 1.29], ["c", .48, .51, .81, 1.11, .96, 1.89], ["c", .06, .27, .06, .42, .06, .93], ["c", 0, .54, 0, .69, -.06, .96], ["c", -.15, .78, -.48, 1.38, -.96, 1.89], ["c", -.54, .51, -1.17, .87, -1.98, 1.08], ["c", -1.14, .3, -2.4, .33, -3.24, .03], ["c", -1.5, -.48, -2.64, -1.89, -3.27, -4.02], ["c", -.36, -1.23, -.51, -2.82, -.42, -4.08], ["c", .3, -3.66, 2.28, -6.3, 4.95, -6.66], ["z"], ["m", .66, 7.41], ["c", -.27, -.09, -.81, -.12, -1.08, -.06], ["c", -.72, .18, -1.08, .69, -1.23, 1.71], ["c", -.06, .54, -.06, 3, 0, 3.54], ["c", .18, 1.26, .72, 1.77, 1.8, 1.74], ["c", .39, -.03, .63, -.09, .9, -.27], ["c", .66, -.42, .9, -1.32, .9, -3.24], ["c", 0, -2.22, -.36, -3.12, -1.29, -3.42], ["z"]], w: 9.956, h: 14.982 }, 7: { d: [["M", .21, -14.97], ["c", .21, -.06, .45, 0, .54, .15], ["c", .06, .09, .06, .15, .06, .39], ["c", 0, .24, 0, .33, .06, .42], ["c", .06, .12, .21, .24, .27, .24], ["c", .03, 0, .12, -.12, .24, -.21], ["c", .96, -1.2, 2.58, -1.35, 3.99, -.42], ["c", .15, .12, .42, .3, .54, .45], ["c", .48, .39, .81, .57, 1.29, .6], ["c", .69, .03, 1.5, -.3, 2.13, -.87], ["c", .09, -.09, .27, -.3, .39, -.45], ["c", .12, -.15, .24, -.27, .3, -.3], ["c", .18, -.06, .39, .03, .51, .21], ["c", .06, .18, .06, .24, -.27, .72], ["c", -.18, .24, -.54, .78, -.78, 1.17], ["c", -2.37, 3.54, -3.54, 6.27, -3.87, 9], ["c", -.03, .33, -.03, .66, -.03, 1.26], ["c", 0, .9, 0, 1.08, .15, 1.89], ["c", .06, .45, .06, .48, .03, .6], ["c", -.06, .09, -.21, .21, -.3, .21], ["c", -.03, 0, -.27, -.06, -.54, -.15], ["c", -.84, -.27, -1.11, -.3, -1.65, -.3], ["c", -.57, 0, -.84, .03, -1.56, .27], ["c", -.6, .18, -.69, .21, -.81, .15], ["c", -.12, -.06, -.21, -.18, -.21, -.3], ["c", 0, -.15, .6, -1.44, 1.2, -2.61], ["c", 1.14, -2.22, 2.73, -4.68, 5.1, -8.01], ["c", .21, -.27, .36, -.48, .33, -.48], ["c", 0, 0, -.12, .06, -.27, .12], ["c", -.54, .3, -.99, .39, -1.56, .39], ["c", -.75, .03, -1.2, -.18, -1.83, -.75], ["c", -.99, -.9, -1.83, -1.17, -2.31, -.72], ["c", -.18, .15, -.36, .51, -.45, .84], ["c", -.06, .24, -.06, .33, -.09, 1.98], ["c", 0, 1.62, -.03, 1.74, -.06, 1.8], ["c", -.15, .24, -.54, .24, -.69, 0], ["c", -.06, -.09, -.06, -.15, -.06, -3.57], ["c", 0, -3.42, 0, -3.48, .06, -3.57], ["c", .03, -.06, .09, -.12, .15, -.15], ["z"]], w: 10.561, h: 15.093 }, 8: { d: [["M", 4.98, -14.97], ["c", .33, -.03, 1.02, -.03, 1.32, 0], ["c", 1.32, .12, 2.49, .6, 3.21, 1.32], ["c", .39, .39, .66, .81, .78, 1.29], ["c", .09, .36, .09, 1.08, 0, 1.44], ["c", -.21, .84, -.66, 1.59, -1.59, 2.55], ["l", -.3, .3], ["l", .27, .18], ["c", 1.47, .93, 2.31, 2.31, 2.25, 3.75], ["c", -.03, .75, -.24, 1.35, -.63, 1.95], ["c", -.45, .66, -1.02, 1.14, -1.83, 1.53], ["c", -1.8, .87, -4.2, .87, -6, .03], ["c", -1.62, -.78, -2.52, -2.16, -2.46, -3.66], ["c", .06, -.99, .54, -1.77, 1.8, -2.97], ["c", .54, -.51, .54, -.54, .48, -.57], ["c", -.39, -.27, -.96, -.78, -1.2, -1.14], ["c", -.75, -1.11, -.87, -2.4, -.3, -3.6], ["c", .69, -1.35, 2.25, -2.25, 4.2, -2.4], ["z"], ["m", 1.53, .69], ["c", -.42, -.09, -1.11, -.12, -1.38, -.06], ["c", -.3, .06, -.6, .18, -.81, .3], ["c", -.21, .12, -.6, .51, -.72, .72], ["c", -.51, .87, -.42, 1.89, .21, 2.52], ["c", .21, .21, .36, .3, 1.95, 1.23], ["c", .96, .54, 1.74, .99, 1.77, 1.02], ["c", .09, 0, .63, -.6, .99, -1.11], ["c", .21, -.36, .48, -.87, .57, -1.23], ["c", .06, -.24, .06, -.36, .06, -.72], ["c", 0, -.45, -.03, -.66, -.15, -.99], ["c", -.39, -.81, -1.29, -1.44, -2.49, -1.68], ["z"], ["m", -1.44, 8.07], ["l", -1.89, -1.08], ["c", -.03, 0, -.18, .15, -.39, .33], ["c", -1.2, 1.08, -1.65, 1.95, -1.59, 3], ["c", .09, 1.59, 1.35, 2.85, 3.21, 3.24], ["c", .33, .06, .45, .06, .93, .06], ["c", .63, 0, .81, -.03, 1.29, -.27], ["c", .9, -.42, 1.47, -1.41, 1.41, -2.4], ["c", -.06, -.66, -.39, -1.29, -.9, -1.65], ["c", -.12, -.09, -1.05, -.63, -2.07, -1.23], ["z"]], w: 10.926, h: 14.989 }, 9: { d: [["M", 4.23, -14.97], ["c", .42, -.03, 1.29, 0, 1.62, .06], ["c", .51, .12, .93, .3, 1.38, .57], ["c", 1.53, 1.02, 2.52, 3.24, 2.73, 5.94], ["c", .18, 2.55, -.48, 4.98, -1.83, 6.57], ["c", -1.05, 1.26, -2.4, 1.89, -3.93, 1.83], ["c", -1.23, -.06, -2.31, -.45, -3.03, -1.14], ["c", -.57, -.51, -.87, -1.23, -.84, -1.98], ["c", .03, -.51, .21, -.9, .6, -1.26], ["c", .24, -.24, .45, -.39, .75, -.51], ["c", .21, -.06, .27, -.06, .6, -.06], ["c", .33, 0, .39, 0, .6, .06], ["c", .3, .12, .51, .27, .75, .51], ["c", .39, .36, .57, .78, .57, 1.26], ["c", 0, .27, 0, .3, -.09, .42], ["c", -.03, .09, -.18, .21, -.3, .3], ["c", -.12, .09, -.3, .21, -.39, .27], ["c", -.09, .06, -.21, .18, -.27, .24], ["c", -.06, .12, -.06, .15, -.06, .33], ["c", 0, .18, 0, .24, .06, .36], ["c", .24, .39, .75, .6, 1.38, .57], ["c", .54, -.03, .9, -.18, 1.23, -.48], ["c", .81, -.72, 1.08, -2.16, .96, -5.37], ["l", 0, -.63], ["l", -.3, .12], ["c", -.78, .27, -1.29, .33, -2.1, .27], ["c", -1.47, -.12, -2.49, -.54, -3.27, -1.29], ["c", -.48, -.51, -.81, -1.11, -.96, -1.89], ["c", -.06, -.27, -.06, -.42, -.06, -.96], ["c", 0, -.51, 0, -.66, .06, -.93], ["c", .15, -.78, .48, -1.38, .96, -1.89], ["c", .15, -.12, .33, -.27, .42, -.36], ["c", .69, -.51, 1.62, -.81, 2.76, -.93], ["z"], ["m", 1.17, .66], ["c", -.21, -.06, -.57, -.06, -.81, -.03], ["c", -.78, .12, -1.26, .69, -1.41, 1.74], ["c", -.12, .63, -.15, 1.95, -.09, 2.79], ["c", .12, 1.71, .63, 2.4, 1.77, 2.46], ["c", 1.08, .03, 1.62, -.48, 1.8, -1.74], ["c", .06, -.54, .06, -3, 0, -3.54], ["c", -.15, -1.05, -.51, -1.53, -1.26, -1.68], ["z"]], w: 9.959, h: 14.986 }, "rests.multimeasure": { d: [["M", 0, -4], ["l", 0, 16], ["l", 1, 0], ["l", 0, -5], ["l", 40, 0], ["l", 0, 5], ["l", 1, 0], ["l", 0, -16], ["l", -1, 0], ["l", 0, 5], ["l", -40, 0], ["l", 0, -5], ["z"]], w: 42, h: 18 }, "rests.whole": { d: [["M", .06, .03], ["l", .09, -.06], ["l", 5.46, 0], ["l", 5.49, 0], ["l", .09, .06], ["l", .06, .09], ["l", 0, 2.19], ["l", 0, 2.19], ["l", -.06, .09], ["l", -.09, .06], ["l", -5.49, 0], ["l", -5.46, 0], ["l", -.09, -.06], ["l", -.06, -.09], ["l", 0, -2.19], ["l", 0, -2.19], ["z"]], w: 11.25, h: 4.68 }, "rests.half": { d: [["M", .06, -4.62], ["l", .09, -.06], ["l", 5.46, 0], ["l", 5.49, 0], ["l", .09, .06], ["l", .06, .09], ["l", 0, 2.19], ["l", 0, 2.19], ["l", -.06, .09], ["l", -.09, .06], ["l", -5.49, 0], ["l", -5.46, 0], ["l", -.09, -.06], ["l", -.06, -.09], ["l", 0, -2.19], ["l", 0, -2.19], ["z"]], w: 11.25, h: 4.68 }, "rests.quarter": { d: [["M", 1.89, -11.82], ["c", .12, -.06, .24, -.06, .36, -.03], ["c", .09, .06, 4.74, 5.58, 4.86, 5.82], ["c", .21, .39, .15, .78, -.15, 1.26], ["c", -.24, .33, -.72, .81, -1.62, 1.56], ["c", -.45, .36, -.87, .75, -.96, .84], ["c", -.93, .99, -1.14, 2.49, -.6, 3.63], ["c", .18, .39, .27, .48, 1.32, 1.68], ["c", 1.92, 2.25, 1.83, 2.16, 1.83, 2.34], ["c", 0, .18, -.18, .36, -.36, .39], ["c", -.15, 0, -.27, -.06, -.48, -.27], ["c", -.75, -.75, -2.46, -1.29, -3.39, -1.08], ["c", -.45, .09, -.69, .27, -.9, .69], ["c", -.12, .3, -.21, .66, -.24, 1.14], ["c", -.03, .66, .09, 1.35, .3, 2.01], ["c", .15, .42, .24, .66, .45, .96], ["c", .18, .24, .18, .33, .03, .42], ["c", -.12, .06, -.18, .03, -.45, -.3], ["c", -1.08, -1.38, -2.07, -3.36, -2.4, -4.83], ["c", -.27, -1.05, -.15, -1.77, .27, -2.07], ["c", .21, -.12, .42, -.15, .87, -.15], ["c", .87, .06, 2.1, .39, 3.3, .9], ["l", .39, .18], ["l", -1.65, -1.95], ["c", -2.52, -2.97, -2.61, -3.09, -2.7, -3.27], ["c", -.09, -.24, -.12, -.48, -.03, -.75], ["c", .15, -.48, .57, -.96, 1.83, -2.01], ["c", .45, -.36, .84, -.72, .93, -.78], ["c", .69, -.75, 1.02, -1.8, .9, -2.79], ["c", -.06, -.33, -.21, -.84, -.39, -1.11], ["c", -.09, -.15, -.45, -.6, -.81, -1.05], ["c", -.36, -.42, -.69, -.81, -.72, -.87], ["c", -.09, -.18, 0, -.42, .21, -.51], ["z"]], w: 7.888, h: 21.435 }, "rests.8th": { d: [["M", 1.68, -6.12], ["c", .66, -.09, 1.23, .09, 1.68, .51], ["c", .27, .3, .39, .54, .57, 1.26], ["c", .09, .33, .18, .66, .21, .72], ["c", .12, .27, .33, .45, .6, .48], ["c", .12, 0, .18, 0, .33, -.09], ["c", .39, -.18, 1.32, -1.29, 1.68, -1.98], ["c", .09, -.21, .24, -.3, .39, -.3], ["c", .12, 0, .27, .09, .33, .18], ["c", .03, .06, -.27, 1.11, -1.86, 6.42], ["c", -1.02, 3.48, -1.89, 6.39, -1.92, 6.42], ["c", 0, .03, -.12, .12, -.24, .15], ["c", -.18, .09, -.21, .09, -.45, .09], ["c", -.24, 0, -.3, 0, -.48, -.06], ["c", -.09, -.06, -.21, -.12, -.21, -.15], ["c", -.06, -.03, .15, -.57, 1.68, -4.92], ["c", .96, -2.67, 1.74, -4.89, 1.71, -4.89], ["l", -.51, .15], ["c", -1.08, .36, -1.74, .48, -2.55, .48], ["c", -.66, 0, -.84, -.03, -1.32, -.27], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .33, -.45, .84, -.81, 1.38, -.9], ["z"]], w: 7.534, h: 13.883 }, "rests.16th": { d: [["M", 3.33, -6.12], ["c", .66, -.09, 1.23, .09, 1.68, .51], ["c", .27, .3, .39, .54, .57, 1.26], ["c", .09, .33, .18, .66, .21, .72], ["c", .15, .39, .57, .57, .87, .42], ["c", .39, -.18, 1.2, -1.23, 1.62, -2.07], ["c", .06, -.15, .24, -.24, .36, -.24], ["c", .12, 0, .27, .09, .33, .18], ["c", .03, .06, -.45, 1.86, -2.67, 10.17], ["c", -1.5, 5.55, -2.73, 10.14, -2.76, 10.17], ["c", -.03, .03, -.12, .12, -.24, .15], ["c", -.18, .09, -.21, .09, -.45, .09], ["c", -.24, 0, -.3, 0, -.48, -.06], ["c", -.09, -.06, -.21, -.12, -.21, -.15], ["c", -.06, -.03, .12, -.57, 1.44, -4.92], ["c", .81, -2.67, 1.47, -4.86, 1.47, -4.89], ["c", -.03, 0, -.27, .06, -.54, .15], ["c", -1.08, .36, -1.77, .48, -2.58, .48], ["c", -.66, 0, -.84, -.03, -1.32, -.27], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .72, -1.05, 2.22, -1.23, 3.06, -.42], ["c", .3, .33, .42, .6, .6, 1.38], ["c", .09, .45, .21, .78, .33, .9], ["c", .09, .09, .27, .18, .45, .21], ["c", .12, 0, .18, 0, .33, -.09], ["c", .33, -.15, 1.02, -.93, 1.41, -1.59], ["c", .12, -.21, .18, -.39, .39, -1.08], ["c", .66, -2.1, 1.17, -3.84, 1.17, -3.87], ["c", 0, 0, -.21, .06, -.42, .15], ["c", -.51, .15, -1.2, .33, -1.68, .42], ["c", -.33, .06, -.51, .06, -.96, .06], ["c", -.66, 0, -.84, -.03, -1.32, -.27], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .33, -.45, .84, -.81, 1.38, -.9], ["z"]], w: 9.724, h: 21.383 }, "rests.32nd": { d: [["M", 4.23, -13.62], ["c", .66, -.09, 1.23, .09, 1.68, .51], ["c", .27, .3, .39, .54, .57, 1.26], ["c", .09, .33, .18, .66, .21, .72], ["c", .12, .27, .33, .45, .6, .48], ["c", .12, 0, .18, 0, .27, -.06], ["c", .33, -.21, .99, -1.11, 1.44, -1.98], ["c", .09, -.24, .21, -.33, .39, -.33], ["c", .12, 0, .27, .09, .33, .18], ["c", .03, .06, -.57, 2.67, -3.21, 13.89], ["c", -1.8, 7.62, -3.3, 13.89, -3.3, 13.92], ["c", -.03, .06, -.12, .12, -.24, .18], ["c", -.21, .09, -.24, .09, -.48, .09], ["c", -.24, 0, -.3, 0, -.48, -.06], ["c", -.09, -.06, -.21, -.12, -.21, -.15], ["c", -.06, -.03, .09, -.57, 1.23, -4.92], ["c", .69, -2.67, 1.26, -4.86, 1.29, -4.89], ["c", 0, -.03, -.12, -.03, -.48, .12], ["c", -1.17, .39, -2.22, .57, -3, .54], ["c", -.42, -.03, -.75, -.12, -1.11, -.3], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .72, -1.05, 2.22, -1.23, 3.06, -.42], ["c", .3, .33, .42, .6, .6, 1.38], ["c", .09, .45, .21, .78, .33, .9], ["c", .12, .09, .3, .18, .48, .21], ["c", .12, 0, .18, 0, .3, -.09], ["c", .42, -.21, 1.29, -1.29, 1.56, -1.89], ["c", .03, -.12, 1.23, -4.59, 1.23, -4.65], ["c", 0, -.03, -.18, .03, -.39, .12], ["c", -.63, .18, -1.2, .36, -1.74, .45], ["c", -.39, .06, -.54, .06, -1.02, .06], ["c", -.66, 0, -.84, -.03, -1.32, -.27], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .72, -1.05, 2.22, -1.23, 3.06, -.42], ["c", .3, .33, .42, .6, .6, 1.38], ["c", .09, .45, .21, .78, .33, .9], ["c", .18, .18, .51, .27, .72, .15], ["c", .3, -.12, .69, -.57, 1.08, -1.17], ["c", .42, -.6, .39, -.51, 1.05, -3.03], ["c", .33, -1.26, .6, -2.31, .6, -2.34], ["c", 0, 0, -.21, .03, -.45, .12], ["c", -.57, .18, -1.14, .33, -1.62, .42], ["c", -.33, .06, -.51, .06, -.96, .06], ["c", -.66, 0, -.84, -.03, -1.32, -.27], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .33, -.45, .84, -.81, 1.38, -.9], ["z"]], w: 11.373, h: 28.883 }, "rests.64th": { d: [["M", 5.13, -13.62], ["c", .66, -.09, 1.23, .09, 1.68, .51], ["c", .27, .3, .39, .54, .57, 1.26], ["c", .15, .63, .21, .81, .33, .96], ["c", .18, .21, .54, .3, .75, .18], ["c", .24, -.12, .63, -.66, 1.08, -1.56], ["c", .33, -.66, .39, -.72, .6, -.72], ["c", .12, 0, .27, .09, .33, .18], ["c", .03, .06, -.69, 3.66, -3.54, 17.64], ["c", -1.95, 9.66, -3.57, 17.61, -3.57, 17.64], ["c", -.03, .06, -.12, .12, -.24, .18], ["c", -.21, .09, -.24, .09, -.48, .09], ["c", -.24, 0, -.3, 0, -.48, -.06], ["c", -.09, -.06, -.21, -.12, -.21, -.15], ["c", -.06, -.03, .06, -.57, 1.05, -4.95], ["c", .6, -2.7, 1.08, -4.89, 1.08, -4.92], ["c", 0, 0, -.24, .06, -.51, .15], ["c", -.66, .24, -1.2, .36, -1.77, .48], ["c", -.42, .06, -.57, .06, -1.05, .06], ["c", -.69, 0, -.87, -.03, -1.35, -.27], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .72, -1.05, 2.22, -1.23, 3.06, -.42], ["c", .3, .33, .42, .6, .6, 1.38], ["c", .09, .45, .21, .78, .33, .9], ["c", .09, .09, .27, .18, .45, .21], ["c", .21, .03, .39, -.09, .72, -.42], ["c", .45, -.45, 1.02, -1.26, 1.17, -1.65], ["c", .03, -.09, .27, -1.14, .54, -2.34], ["c", .27, -1.2, .48, -2.19, .51, -2.22], ["c", 0, -.03, -.09, -.03, -.48, .12], ["c", -1.17, .39, -2.22, .57, -3, .54], ["c", -.42, -.03, -.75, -.12, -1.11, -.3], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .36, -.54, .96, -.87, 1.65, -.93], ["c", .54, -.03, 1.02, .15, 1.41, .54], ["c", .27, .3, .39, .54, .57, 1.26], ["c", .09, .33, .18, .66, .21, .72], ["c", .15, .39, .57, .57, .9, .42], ["c", .36, -.18, 1.2, -1.26, 1.47, -1.89], ["c", .03, -.09, .3, -1.2, .57, -2.43], ["l", .51, -2.28], ["l", -.54, .18], ["c", -1.11, .36, -1.8, .48, -2.61, .48], ["c", -.66, 0, -.84, -.03, -1.32, -.27], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .36, -.54, .96, -.87, 1.65, -.93], ["c", .54, -.03, 1.02, .15, 1.41, .54], ["c", .27, .3, .39, .54, .57, 1.26], ["c", .15, .63, .21, .81, .33, .96], ["c", .21, .21, .54, .3, .75, .18], ["c", .36, -.18, .93, -.93, 1.29, -1.68], ["c", .12, -.24, .18, -.48, .63, -2.55], ["l", .51, -2.31], ["c", 0, -.03, -.18, .03, -.39, .12], ["c", -1.14, .36, -2.1, .54, -2.82, .51], ["c", -.42, -.03, -.75, -.12, -1.11, -.3], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .33, -.45, .84, -.81, 1.38, -.9], ["z"]], w: 12.453, h: 36.383 }, "rests.128th": { d: [["M", 6.03, -21.12], ["c", .66, -.09, 1.23, .09, 1.68, .51], ["c", .27, .3, .39, .54, .57, 1.26], ["c", .09, .33, .18, .66, .21, .72], ["c", .12, .27, .33, .45, .6, .48], ["c", .21, 0, .33, -.06, .54, -.36], ["c", .15, -.21, .54, -.93, .78, -1.47], ["c", .15, -.33, .18, -.39, .3, -.48], ["c", .18, -.09, .45, 0, .51, .15], ["c", .03, .09, -7.11, 42.75, -7.17, 42.84], ["c", -.03, .03, -.15, .09, -.24, .15], ["c", -.18, .06, -.24, .06, -.45, .06], ["c", -.24, 0, -.3, 0, -.48, -.06], ["c", -.09, -.06, -.21, -.12, -.21, -.15], ["c", -.06, -.03, .03, -.57, .84, -4.98], ["c", .51, -2.7, .93, -4.92, .9, -4.92], ["c", 0, 0, -.15, .06, -.36, .12], ["c", -.78, .27, -1.62, .48, -2.31, .57], ["c", -.15, .03, -.54, .03, -.81, .03], ["c", -.66, 0, -.84, -.03, -1.32, -.27], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .36, -.54, .96, -.87, 1.65, -.93], ["c", .54, -.03, 1.02, .15, 1.41, .54], ["c", .27, .3, .39, .54, .57, 1.26], ["c", .09, .33, .18, .66, .21, .72], ["c", .12, .27, .33, .45, .63, .48], ["c", .12, 0, .18, 0, .3, -.09], ["c", .42, -.21, 1.14, -1.11, 1.5, -1.83], ["c", .12, -.27, .12, -.27, .54, -2.52], ["c", .24, -1.23, .42, -2.25, .39, -2.25], ["c", 0, 0, -.24, .06, -.51, .18], ["c", -1.26, .39, -2.25, .57, -3.06, .54], ["c", -.42, -.03, -.75, -.12, -1.11, -.3], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .36, -.54, .96, -.87, 1.65, -.93], ["c", .54, -.03, 1.02, .15, 1.41, .54], ["c", .27, .3, .39, .54, .57, 1.26], ["c", .15, .63, .21, .81, .33, .96], ["c", .18, .21, .51, .3, .75, .18], ["c", .36, -.15, 1.05, -.99, 1.41, -1.77], ["l", .15, -.3], ["l", .42, -2.25], ["c", .21, -1.26, .42, -2.28, .39, -2.28], ["l", -.51, .15], ["c", -1.11, .39, -1.89, .51, -2.7, .51], ["c", -.66, 0, -.84, -.03, -1.32, -.27], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .36, -.54, .96, -.87, 1.65, -.93], ["c", .54, -.03, 1.02, .15, 1.41, .54], ["c", .27, .3, .39, .54, .57, 1.26], ["c", .15, .63, .21, .81, .33, .96], ["c", .18, .18, .48, .27, .72, .21], ["c", .33, -.12, 1.14, -1.26, 1.41, -1.95], ["c", 0, -.09, .21, -1.11, .45, -2.34], ["c", .21, -1.2, .39, -2.22, .39, -2.28], ["c", .03, -.03, 0, -.03, -.45, .12], ["c", -.57, .18, -1.2, .33, -1.71, .42], ["c", -.3, .06, -.51, .06, -.93, .06], ["c", -.66, 0, -.84, -.03, -1.32, -.27], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .36, -.54, .96, -.87, 1.65, -.93], ["c", .54, -.03, 1.02, .15, 1.41, .54], ["c", .27, .3, .39, .54, .57, 1.26], ["c", .09, .33, .18, .66, .21, .72], ["c", .12, .27, .33, .45, .6, .48], ["c", .18, 0, .36, -.09, .57, -.33], ["c", .33, -.36, .78, -1.14, .93, -1.56], ["c", .03, -.12, .24, -1.2, .45, -2.4], ["c", .24, -1.2, .42, -2.22, .42, -2.28], ["c", .03, -.03, 0, -.03, -.39, .09], ["c", -1.05, .36, -1.8, .48, -2.58, .48], ["c", -.63, 0, -.84, -.03, -1.29, -.27], ["c", -1.32, -.63, -1.77, -2.16, -1.02, -3.3], ["c", .33, -.45, .84, -.81, 1.38, -.9], ["z"]], w: 12.992, h: 43.883 }, "accidentals.sharp": { d: [["M", 5.73, -11.19], ["c", .21, -.12, .54, -.03, .66, .24], ["c", .06, .12, .06, .21, .06, 2.31], ["c", 0, 1.23, 0, 2.22, .03, 2.22], ["c", 0, 0, .27, -.12, .6, -.24], ["c", .69, -.27, .78, -.3, .96, -.15], ["c", .21, .15, .21, .18, .21, 1.38], ["c", 0, 1.02, 0, 1.11, -.06, 1.2], ["c", -.03, .06, -.09, .12, -.12, .15], ["c", -.06, .03, -.42, .21, -.84, .36], ["l", -.75, .33], ["l", -.03, 2.43], ["c", 0, 1.32, 0, 2.43, .03, 2.43], ["c", 0, 0, .27, -.12, .6, -.24], ["c", .69, -.27, .78, -.3, .96, -.15], ["c", .21, .15, .21, .18, .21, 1.38], ["c", 0, 1.02, 0, 1.11, -.06, 1.2], ["c", -.03, .06, -.09, .12, -.12, .15], ["c", -.06, .03, -.42, .21, -.84, .36], ["l", -.75, .33], ["l", -.03, 2.52], ["c", 0, 2.28, -.03, 2.55, -.06, 2.64], ["c", -.21, .36, -.72, .36, -.93, 0], ["c", -.03, -.09, -.06, -.33, -.06, -2.43], ["l", 0, -2.31], ["l", -1.29, .51], ["l", -1.26, .51], ["l", 0, 2.43], ["c", 0, 2.58, 0, 2.52, -.15, 2.67], ["c", -.06, .09, -.27, .18, -.36, .18], ["c", -.12, 0, -.33, -.09, -.39, -.18], ["c", -.15, -.15, -.15, -.09, -.15, -2.43], ["c", 0, -1.23, 0, -2.22, -.03, -2.22], ["c", 0, 0, -.27, .12, -.6, .24], ["c", -.69, .27, -.78, .3, -.96, .15], ["c", -.21, -.15, -.21, -.18, -.21, -1.38], ["c", 0, -1.02, 0, -1.11, .06, -1.2], ["c", .03, -.06, .09, -.12, .12, -.15], ["c", .06, -.03, .42, -.21, .84, -.36], ["l", .78, -.33], ["l", 0, -2.43], ["c", 0, -1.32, 0, -2.43, -.03, -2.43], ["c", 0, 0, -.27, .12, -.6, .24], ["c", -.69, .27, -.78, .3, -.96, .15], ["c", -.21, -.15, -.21, -.18, -.21, -1.38], ["c", 0, -1.02, 0, -1.11, .06, -1.2], ["c", .03, -.06, .09, -.12, .12, -.15], ["c", .06, -.03, .42, -.21, .84, -.36], ["l", .78, -.33], ["l", 0, -2.52], ["c", 0, -2.28, .03, -2.55, .06, -2.64], ["c", .21, -.36, .72, -.36, .93, 0], ["c", .03, .09, .06, .33, .06, 2.43], ["l", .03, 2.31], ["l", 1.26, -.51], ["l", 1.26, -.51], ["l", 0, -2.43], ["c", 0, -2.28, 0, -2.43, .06, -2.55], ["c", .06, -.12, .12, -.18, .27, -.24], ["z"], ["m", -.33, 10.65], ["l", 0, -2.43], ["l", -1.29, .51], ["l", -1.26, .51], ["l", 0, 2.46], ["l", 0, 2.43], ["l", .09, -.03], ["c", .06, -.03, .63, -.27, 1.29, -.51], ["l", 1.17, -.48], ["l", 0, -2.46], ["z"]], w: 8.25, h: 22.462 }, "accidentals.halfsharp": { d: [["M", 2.43, -10.05], ["c", .21, -.12, .54, -.03, .66, .24], ["c", .06, .12, .06, .21, .06, 2.01], ["c", 0, 1.05, 0, 1.89, .03, 1.89], ["l", .72, -.48], ["c", .69, -.48, .69, -.51, .87, -.51], ["c", .15, 0, .18, .03, .27, .09], ["c", .21, .15, .21, .18, .21, 1.41], ["c", 0, 1.11, -.03, 1.14, -.09, 1.23], ["c", -.03, .03, -.48, .39, -1.02, .75], ["l", -.99, .66], ["l", 0, 2.37], ["c", 0, 1.32, 0, 2.37, .03, 2.37], ["l", .72, -.48], ["c", .69, -.48, .69, -.51, .87, -.51], ["c", .15, 0, .18, .03, .27, .09], ["c", .21, .15, .21, .18, .21, 1.41], ["c", 0, 1.11, -.03, 1.14, -.09, 1.23], ["c", -.03, .03, -.48, .39, -1.02, .75], ["l", -.99, .66], ["l", 0, 2.25], ["c", 0, 1.95, 0, 2.28, -.06, 2.37], ["c", -.06, .12, -.12, .21, -.24, .27], ["c", -.27, .12, -.54, .03, -.69, -.24], ["c", -.06, -.12, -.06, -.21, -.06, -2.01], ["c", 0, -1.05, 0, -1.89, -.03, -1.89], ["l", -.72, .48], ["c", -.69, .48, -.69, .48, -.87, .48], ["c", -.15, 0, -.18, 0, -.27, -.06], ["c", -.21, -.15, -.21, -.18, -.21, -1.41], ["c", 0, -1.11, .03, -1.14, .09, -1.23], ["c", .03, -.03, .48, -.39, 1.02, -.75], ["l", .99, -.66], ["l", 0, -2.37], ["c", 0, -1.32, 0, -2.37, -.03, -2.37], ["l", -.72, .48], ["c", -.69, .48, -.69, .48, -.87, .48], ["c", -.15, 0, -.18, 0, -.27, -.06], ["c", -.21, -.15, -.21, -.18, -.21, -1.41], ["c", 0, -1.11, .03, -1.14, .09, -1.23], ["c", .03, -.03, .48, -.39, 1.02, -.75], ["l", .99, -.66], ["l", 0, -2.25], ["c", 0, -2.13, 0, -2.28, .06, -2.4], ["c", .06, -.12, .12, -.18, .27, -.24], ["z"]], w: 5.25, h: 20.174 }, "accidentals.nat": { d: [["M", .21, -11.4], ["c", .24, -.06, .78, 0, .99, .15], ["c", .03, .03, .03, .48, 0, 2.61], ["c", -.03, 1.44, -.03, 2.61, -.03, 2.61], ["c", 0, .03, .75, -.09, 1.68, -.24], ["c", .96, -.18, 1.71, -.27, 1.74, -.27], ["c", .15, .03, .27, .15, .36, .3], ["l", .06, .12], ["l", .09, 8.67], ["c", .09, 6.96, .12, 8.67, .09, 8.67], ["c", -.03, .03, -.12, .06, -.21, .09], ["c", -.24, .09, -.72, .09, -.96, 0], ["c", -.09, -.03, -.18, -.06, -.21, -.09], ["c", -.03, -.03, -.03, -.48, 0, -2.61], ["c", .03, -1.44, .03, -2.61, .03, -2.61], ["c", 0, -.03, -.75, .09, -1.68, .24], ["c", -.96, .18, -1.71, .27, -1.74, .27], ["c", -.15, -.03, -.27, -.15, -.36, -.3], ["l", -.06, -.15], ["l", -.09, -7.53], ["c", -.06, -4.14, -.09, -8.04, -.12, -8.67], ["l", 0, -1.11], ["l", .15, -.06], ["c", .09, -.03, .21, -.06, .27, -.09], ["z"], ["m", 3.75, 8.4], ["c", 0, -.33, 0, -.42, -.03, -.42], ["c", -.12, 0, -2.79, .45, -2.79, .48], ["c", -.03, 0, -.09, 6.3, -.09, 6.33], ["c", .03, 0, 2.79, -.45, 2.82, -.48], ["c", 0, 0, .09, -4.53, .09, -5.91], ["z"]], w: 5.4, h: 22.8 }, "accidentals.flat": { d: [["M", -.36, -14.07], ["c", .33, -.06, .87, 0, 1.08, .15], ["c", .06, .03, .06, .36, -.03, 5.25], ["c", -.06, 2.85, -.09, 5.19, -.09, 5.19], ["c", 0, .03, .12, -.03, .24, -.12], ["c", .63, -.42, 1.41, -.66, 2.19, -.72], ["c", .81, -.03, 1.47, .21, 2.04, .78], ["c", .57, .54, .87, 1.26, .93, 2.04], ["c", .03, .57, -.09, 1.08, -.36, 1.62], ["c", -.42, .81, -1.02, 1.38, -2.82, 2.61], ["c", -1.14, .78, -1.44, 1.02, -1.8, 1.44], ["c", -.18, .18, -.39, .39, -.45, .42], ["c", -.27, .18, -.57, .15, -.81, -.06], ["c", -.06, -.09, -.12, -.18, -.15, -.27], ["c", -.03, -.06, -.09, -3.27, -.18, -8.34], ["c", -.09, -4.53, -.15, -8.58, -.18, -9.03], ["l", 0, -.78], ["l", .12, -.06], ["c", .06, -.03, .18, -.09, .27, -.12], ["z"], ["m", 3.18, 11.01], ["c", -.21, -.12, -.54, -.15, -.81, -.06], ["c", -.54, .15, -.99, .63, -1.17, 1.26], ["c", -.06, .3, -.12, 2.88, -.06, 3.87], ["c", .03, .42, .03, .81, .06, .9], ["l", .03, .12], ["l", .45, -.39], ["c", .63, -.54, 1.26, -1.17, 1.56, -1.59], ["c", .3, -.42, .6, -.99, .72, -1.41], ["c", .18, -.69, .09, -1.47, -.18, -2.07], ["c", -.15, -.3, -.33, -.51, -.6, -.63], ["z"]], w: 6.75, h: 18.801 }, "accidentals.halfflat": { d: [["M", 4.83, -14.07], ["c", .33, -.06, .87, 0, 1.08, .15], ["c", .06, .03, .06, .6, -.12, 9.06], ["c", -.09, 5.55, -.15, 9.06, -.18, 9.12], ["c", -.03, .09, -.09, .18, -.15, .27], ["c", -.24, .21, -.54, .24, -.81, .06], ["c", -.06, -.03, -.27, -.24, -.45, -.42], ["c", -.36, -.42, -.66, -.66, -1.8, -1.44], ["c", -1.23, -.84, -1.83, -1.32, -2.25, -1.77], ["c", -.66, -.78, -.96, -1.56, -.93, -2.46], ["c", .09, -1.41, 1.11, -2.58, 2.4, -2.79], ["c", .3, -.06, .84, -.03, 1.23, .06], ["c", .54, .12, 1.08, .33, 1.53, .63], ["c", .12, .09, .24, .15, .24, .12], ["c", 0, 0, -.12, -8.37, -.18, -9.75], ["l", 0, -.66], ["l", .12, -.06], ["c", .06, -.03, .18, -.09, .27, -.12], ["z"], ["m", -1.65, 10.95], ["c", -.6, -.18, -1.08, .09, -1.38, .69], ["c", -.27, .6, -.36, 1.38, -.18, 2.07], ["c", .12, .42, .42, .99, .72, 1.41], ["c", .3, .42, .93, 1.05, 1.56, 1.59], ["l", .48, .39], ["l", 0, -.12], ["c", .03, -.09, .03, -.48, .06, -.9], ["c", .03, -.57, .03, -1.08, 0, -2.22], ["c", -.03, -1.62, -.03, -1.62, -.24, -2.07], ["c", -.21, -.42, -.6, -.75, -1.02, -.84], ["z"]], w: 6.728, h: 18.801 }, "accidentals.dblflat": { d: [["M", -.36, -14.07], ["c", .33, -.06, .87, 0, 1.08, .15], ["c", .06, .03, .06, .36, -.03, 5.25], ["c", -.06, 2.85, -.09, 5.19, -.09, 5.19], ["c", 0, .03, .12, -.03, .24, -.12], ["c", .63, -.42, 1.41, -.66, 2.19, -.72], ["c", .81, -.03, 1.47, .21, 2.04, .78], ["c", .57, .54, .87, 1.26, .93, 2.04], ["c", .03, .57, -.09, 1.08, -.36, 1.62], ["c", -.42, .81, -1.02, 1.38, -2.82, 2.61], ["c", -1.14, .78, -1.44, 1.02, -1.8, 1.44], ["c", -.18, .18, -.39, .39, -.45, .42], ["c", -.27, .18, -.57, .15, -.81, -.06], ["c", -.06, -.09, -.12, -.18, -.15, -.27], ["c", -.03, -.06, -.09, -3.27, -.18, -8.34], ["c", -.09, -4.53, -.15, -8.58, -.18, -9.03], ["l", 0, -.78], ["l", .12, -.06], ["c", .06, -.03, .18, -.09, .27, -.12], ["z"], ["m", 3.18, 11.01], ["c", -.21, -.12, -.54, -.15, -.81, -.06], ["c", -.54, .15, -.99, .63, -1.17, 1.26], ["c", -.06, .3, -.12, 2.88, -.06, 3.87], ["c", .03, .42, .03, .81, .06, .9], ["l", .03, .12], ["l", .45, -.39], ["c", .63, -.54, 1.26, -1.17, 1.56, -1.59], ["c", .3, -.42, .6, -.99, .72, -1.41], ["c", .18, -.69, .09, -1.47, -.18, -2.07], ["c", -.15, -.3, -.33, -.51, -.6, -.63], ["z"], ["m", 3, -11], ["c", .33, -.06, .87, 0, 1.08, .15], ["c", .06, .03, .06, .36, -.03, 5.25], ["c", -.06, 2.85, -.09, 5.19, -.09, 5.19], ["c", 0, .03, .12, -.03, .24, -.12], ["c", .63, -.42, 1.41, -.66, 2.19, -.72], ["c", .81, -.03, 1.47, .21, 2.04, .78], ["c", .57, .54, .87, 1.26, .93, 2.04], ["c", .03, .57, -.09, 1.08, -.36, 1.62], ["c", -.42, .81, -1.02, 1.38, -2.82, 2.61], ["c", -1.14, .78, -1.44, 1.02, -1.8, 1.44], ["c", -.18, .18, -.39, .39, -.45, .42], ["c", -.27, .18, -.57, .15, -.81, -.06], ["c", -.06, -.09, -.12, -.18, -.15, -.27], ["c", -.03, -.06, -.09, -3.27, -.18, -8.34], ["c", -.09, -4.53, -.15, -8.58, -.18, -9.03], ["l", 0, -.78], ["l", .12, -.06], ["c", .06, -.03, .18, -.09, .27, -.12], ["z"], ["m", 3.18, 11.01], ["c", -.21, -.12, -.54, -.15, -.81, -.06], ["c", -.54, .15, -.99, .63, -1.17, 1.26], ["c", -.06, .3, -.12, 2.88, -.06, 3.87], ["c", .03, .42, .03, .81, .06, .9], ["l", .03, .12], ["l", .45, -.39], ["c", .63, -.54, 1.26, -1.17, 1.56, -1.59], ["c", .3, -.42, .6, -.99, .72, -1.41], ["c", .18, -.69, .09, -1.47, -.18, -2.07], ["c", -.15, -.3, -.33, -.51, -.6, -.63], ["z"]], w: 12.1, h: 18.804 }, "accidentals.dblsharp": { d: [["M", -.18, -3.96], ["c", .06, -.03, .12, -.06, .15, -.06], ["c", .09, 0, 2.76, .27, 2.79, .3], ["c", .12, .03, .15, .12, .15, .51], ["c", .06, .96, .24, 1.59, .57, 2.1], ["c", .06, .09, .15, .21, .18, .24], ["l", .09, .06], ["l", .09, -.06], ["c", .03, -.03, .12, -.15, .18, -.24], ["c", .33, -.51, .51, -1.14, .57, -2.1], ["c", 0, -.39, .03, -.45, .12, -.51], ["c", .03, 0, .66, -.09, 1.44, -.15], ["c", 1.47, -.15, 1.5, -.15, 1.56, -.03], ["c", .03, .06, 0, .42, -.09, 1.44], ["c", -.09, .72, -.15, 1.35, -.15, 1.38], ["c", 0, .03, -.03, .09, -.06, .12], ["c", -.06, .06, -.12, .09, -.51, .09], ["c", -1.08, .06, -1.8, .3, -2.28, .75], ["l", -.12, .09], ["l", .09, .09], ["c", .12, .15, .39, .33, .63, .45], ["c", .42, .18, .96, .27, 1.68, .33], ["c", .39, 0, .45, .03, .51, .09], ["c", .03, .03, .06, .09, .06, .12], ["c", 0, .03, .06, .66, .15, 1.38], ["c", .09, 1.02, .12, 1.38, .09, 1.44], ["c", -.06, .12, -.09, .12, -1.56, -.03], ["c", -.78, -.06, -1.41, -.15, -1.44, -.15], ["c", -.09, -.06, -.12, -.12, -.12, -.54], ["c", -.06, -.93, -.24, -1.56, -.57, -2.07], ["c", -.06, -.09, -.15, -.21, -.18, -.24], ["l", -.09, -.06], ["l", -.09, .06], ["c", -.03, .03, -.12, .15, -.18, .24], ["c", -.33, .51, -.51, 1.14, -.57, 2.07], ["c", 0, .42, -.03, .48, -.12, .54], ["c", -.03, 0, -.66, .09, -1.44, .15], ["c", -1.47, .15, -1.5, .15, -1.56, .03], ["c", -.03, -.06, 0, -.42, .09, -1.44], ["c", .09, -.72, .15, -1.35, .15, -1.38], ["c", 0, -.03, .03, -.09, .06, -.12], ["c", .06, -.06, .12, -.09, .51, -.09], ["c", .72, -.06, 1.26, -.15, 1.68, -.33], ["c", .24, -.12, .51, -.3, .63, -.45], ["l", .09, -.09], ["l", -.12, -.09], ["c", -.48, -.45, -1.2, -.69, -2.28, -.75], ["c", -.39, 0, -.45, -.03, -.51, -.09], ["c", -.03, -.03, -.06, -.09, -.06, -.12], ["c", 0, -.03, -.06, -.63, -.12, -1.38], ["c", -.09, -.72, -.15, -1.35, -.15, -1.38], ["z"]], w: 7.95, h: 7.977 }, "dots.dot": { d: [["M", 1.32, -1.68], ["c", .09, -.03, .27, -.06, .39, -.06], ["c", .96, 0, 1.74, .78, 1.74, 1.71], ["c", 0, .96, -.78, 1.74, -1.71, 1.74], ["c", -.96, 0, -1.74, -.78, -1.74, -1.71], ["c", 0, -.78, .54, -1.5, 1.32, -1.68], ["z"]], w: 3.45, h: 3.45 }, "noteheads.dbl": { d: [["M", -.69, -4.02], ["c", .18, -.09, .36, -.09, .54, 0], ["c", .18, .09, .24, .15, .33, .3], ["c", .06, .15, .06, .18, .06, 1.41], ["l", 0, 1.23], ["l", .12, -.18], ["c", .72, -1.26, 2.64, -2.31, 4.86, -2.64], ["c", .81, -.15, 1.11, -.15, 2.13, -.15], ["c", .99, 0, 1.29, 0, 2.1, .15], ["c", .75, .12, 1.38, .27, 2.04, .54], ["c", 1.35, .51, 2.34, 1.26, 2.82, 2.1], ["l", .12, .18], ["l", 0, -1.23], ["c", 0, -1.2, 0, -1.26, .06, -1.38], ["c", .09, -.18, .15, -.24, .33, -.33], ["c", .18, -.09, .36, -.09, .54, 0], ["c", .18, .09, .24, .15, .33, .3], ["l", .06, .15], ["l", 0, 3.54], ["l", 0, 3.54], ["l", -.06, .15], ["c", -.09, .18, -.15, .24, -.33, .33], ["c", -.18, .09, -.36, .09, -.54, 0], ["c", -.18, -.09, -.24, -.15, -.33, -.33], ["c", -.06, -.12, -.06, -.18, -.06, -1.38], ["l", 0, -1.23], ["l", -.12, .18], ["c", -.48, .84, -1.47, 1.59, -2.82, 2.1], ["c", -.84, .33, -1.71, .54, -2.85, .66], ["c", -.45, .06, -2.16, .06, -2.61, 0], ["c", -1.14, -.12, -2.01, -.33, -2.85, -.66], ["c", -1.35, -.51, -2.34, -1.26, -2.82, -2.1], ["l", -.12, -.18], ["l", 0, 1.23], ["c", 0, 1.23, 0, 1.26, -.06, 1.38], ["c", -.09, .18, -.15, .24, -.33, .33], ["c", -.18, .09, -.36, .09, -.54, 0], ["c", -.18, -.09, -.24, -.15, -.33, -.33], ["l", -.06, -.15], ["l", 0, -3.54], ["c", 0, -3.48, 0, -3.54, .06, -3.66], ["c", .09, -.18, .15, -.24, .33, -.33], ["z"], ["m", 7.71, .63], ["c", -.36, -.06, -.9, -.06, -1.14, 0], ["c", -.3, .03, -.66, .24, -.87, .42], ["c", -.6, .54, -.9, 1.62, -.75, 2.82], ["c", .12, .93, .51, 1.68, 1.11, 2.31], ["c", .75, .72, 1.83, 1.2, 2.85, 1.26], ["c", 1.05, .06, 1.83, -.54, 2.1, -1.65], ["c", .21, -.9, .12, -1.95, -.24, -2.82], ["c", -.36, -.81, -1.08, -1.53, -1.95, -1.95], ["c", -.3, -.15, -.78, -.3, -1.11, -.39], ["z"]], w: 16.83, h: 8.145 }, "noteheads.whole": { d: [["M", 6.51, -4.05], ["c", .51, -.03, 2.01, 0, 2.52, .03], ["c", 1.41, .18, 2.64, .51, 3.72, 1.08], ["c", 1.2, .63, 1.95, 1.41, 2.19, 2.31], ["c", .09, .33, .09, .9, 0, 1.23], ["c", -.24, .9, -.99, 1.68, -2.19, 2.31], ["c", -1.08, .57, -2.28, .9, -3.75, 1.08], ["c", -.66, .06, -2.31, .06, -2.97, 0], ["c", -1.47, -.18, -2.67, -.51, -3.75, -1.08], ["c", -1.2, -.63, -1.95, -1.41, -2.19, -2.31], ["c", -.09, -.33, -.09, -.9, 0, -1.23], ["c", .24, -.9, .99, -1.68, 2.19, -2.31], ["c", 1.2, -.63, 2.61, -.99, 4.23, -1.11], ["z"], ["m", .57, .66], ["c", -.87, -.15, -1.53, 0, -2.04, .51], ["c", -.15, .15, -.24, .27, -.33, .48], ["c", -.24, .51, -.36, 1.08, -.33, 1.77], ["c", .03, .69, .18, 1.26, .42, 1.77], ["c", .6, 1.17, 1.74, 1.98, 3.18, 2.22], ["c", 1.11, .21, 1.95, -.15, 2.34, -.99], ["c", .24, -.51, .36, -1.08, .33, -1.8], ["c", -.06, -1.11, -.45, -2.04, -1.17, -2.76], ["c", -.63, -.63, -1.47, -1.05, -2.4, -1.2], ["z"]], w: 14.985, h: 8.097 }, "noteheads.half": { d: [["M", 7.44, -4.05], ["c", .06, -.03, .27, -.03, .48, -.03], ["c", 1.05, 0, 1.71, .24, 2.1, .81], ["c", .42, .6, .45, 1.35, .18, 2.4], ["c", -.42, 1.59, -1.14, 2.73, -2.16, 3.39], ["c", -1.41, .93, -3.18, 1.44, -5.4, 1.53], ["c", -1.17, .03, -1.89, -.21, -2.28, -.81], ["c", -.42, -.6, -.45, -1.35, -.18, -2.4], ["c", .42, -1.59, 1.14, -2.73, 2.16, -3.39], ["c", .63, -.42, 1.23, -.72, 1.98, -.96], ["c", .9, -.3, 1.65, -.42, 3.12, -.54], ["z"], ["m", 1.29, .87], ["c", -.27, -.09, -.63, -.12, -.9, -.03], ["c", -.72, .24, -1.53, .69, -3.27, 1.8], ["c", -2.34, 1.5, -3.3, 2.25, -3.57, 2.79], ["c", -.36, .72, -.06, 1.5, .66, 1.77], ["c", .24, .12, .69, .09, .99, 0], ["c", .84, -.3, 1.92, -.93, 4.14, -2.37], ["c", 1.62, -1.08, 2.37, -1.71, 2.61, -2.19], ["c", .36, -.72, .06, -1.5, -.66, -1.77], ["z"]], w: 10.37, h: 8.132 }, "noteheads.quarter": { d: [["M", 6.09, -4.05], ["c", .36, -.03, 1.2, 0, 1.53, .06], ["c", 1.17, .24, 1.89, .84, 2.16, 1.83], ["c", .06, .18, .06, .3, .06, .66], ["c", 0, .45, 0, .63, -.15, 1.08], ["c", -.66, 2.04, -3.06, 3.93, -5.52, 4.38], ["c", -.54, .09, -1.44, .09, -1.83, .03], ["c", -1.23, -.27, -1.98, -.87, -2.25, -1.86], ["c", -.06, -.18, -.06, -.3, -.06, -.66], ["c", 0, -.45, 0, -.63, .15, -1.08], ["c", .24, -.78, .75, -1.53, 1.44, -2.22], ["c", 1.2, -1.2, 2.85, -2.01, 4.47, -2.22], ["z"]], w: 9.81, h: 8.094 }, "noteheads.slash.nostem": { d: [["M", 9.3, -7.77], ["c", .06, -.06, .18, -.06, 1.71, -.06], ["l", 1.65, 0], ["l", .09, .09], ["c", .06, .06, .06, .09, .06, .15], ["c", -.03, .12, -9.21, 15.24, -9.3, 15.33], ["c", -.06, .06, -.18, .06, -1.71, .06], ["l", -1.65, 0], ["l", -.09, -.09], ["c", -.06, -.06, -.06, -.09, -.06, -.15], ["c", .03, -.12, 9.21, -15.24, 9.3, -15.33], ["z"]], w: 12.81, h: 15.63 }, "noteheads.indeterminate": { d: [["M", .78, -4.05], ["c", .12, -.03, .24, -.03, .36, .03], ["c", .03, .03, .93, .72, 1.95, 1.56], ["l", 1.86, 1.5], ["l", 1.86, -1.5], ["c", 1.02, -.84, 1.92, -1.53, 1.95, -1.56], ["c", .21, -.12, .33, -.09, .75, .24], ["c", .3, .27, .36, .36, .36, .54], ["c", 0, .03, -.03, .12, -.06, .18], ["c", -.03, .06, -.9, .75, -1.89, 1.56], ["l", -1.8, 1.47], ["c", 0, .03, .81, .69, 1.8, 1.5], ["c", .99, .81, 1.86, 1.5, 1.89, 1.56], ["c", .03, .06, .06, .15, .06, .18], ["c", 0, .18, -.06, .27, -.36, .54], ["c", -.42, .33, -.54, .36, -.75, .24], ["c", -.03, -.03, -.93, -.72, -1.95, -1.56], ["l", -1.86, -1.5], ["l", -1.86, 1.5], ["c", -1.02, .84, -1.92, 1.53, -1.95, 1.56], ["c", -.21, .12, -.33, .09, -.75, -.24], ["c", -.3, -.27, -.36, -.36, -.36, -.54], ["c", 0, -.03, .03, -.12, .06, -.18], ["c", .03, -.06, .9, -.75, 1.89, -1.56], ["l", 1.8, -1.47], ["c", 0, -.03, -.81, -.69, -1.8, -1.5], ["c", -.99, -.81, -1.86, -1.5, -1.89, -1.56], ["c", -.06, -.12, -.09, -.21, -.03, -.36], ["c", .03, -.09, .57, -.57, .72, -.63], ["z"]], w: 9.843, h: 8.139 }, "scripts.ufermata": { d: [["M", -.75, -10.77], ["c", .12, 0, .45, -.03, .69, -.03], ["c", 2.91, -.03, 5.55, 1.53, 7.41, 4.35], ["c", 1.17, 1.71, 1.95, 3.72, 2.43, 6.03], ["c", .12, .51, .12, .57, .03, .69], ["c", -.12, .21, -.48, .27, -.69, .12], ["c", -.12, -.09, -.18, -.24, -.27, -.69], ["c", -.78, -3.63, -3.42, -6.54, -6.78, -7.38], ["c", -.78, -.21, -1.2, -.24, -2.07, -.24], ["c", -.63, 0, -.84, 0, -1.2, .06], ["c", -1.83, .27, -3.42, 1.08, -4.8, 2.37], ["c", -1.41, 1.35, -2.4, 3.21, -2.85, 5.19], ["c", -.09, .45, -.15, .6, -.27, .69], ["c", -.21, .15, -.57, .09, -.69, -.12], ["c", -.09, -.12, -.09, -.18, .03, -.69], ["c", .33, -1.62, .78, -3, 1.47, -4.38], ["c", 1.77, -3.54, 4.44, -5.67, 7.56, -5.97], ["z"], ["m", .33, 7.47], ["c", 1.38, -.3, 2.58, .9, 2.31, 2.25], ["c", -.15, .72, -.78, 1.35, -1.47, 1.5], ["c", -1.38, .27, -2.58, -.93, -2.31, -2.31], ["c", .15, -.69, .78, -1.29, 1.47, -1.44], ["z"]], w: 19.748, h: 11.289 }, "scripts.dfermata": { d: [["M", -9.63, -.42], ["c", .15, -.09, .36, -.06, .51, .03], ["c", .12, .09, .18, .24, .27, .66], ["c", .78, 3.66, 3.42, 6.57, 6.78, 7.41], ["c", .78, .21, 1.2, .24, 2.07, .24], ["c", .63, 0, .84, 0, 1.2, -.06], ["c", 1.83, -.27, 3.42, -1.08, 4.8, -2.37], ["c", 1.41, -1.35, 2.4, -3.21, 2.85, -5.22], ["c", .09, -.42, .15, -.57, .27, -.66], ["c", .21, -.15, .57, -.09, .69, .12], ["c", .09, .12, .09, .18, -.03, .69], ["c", -.33, 1.62, -.78, 3, -1.47, 4.38], ["c", -1.92, 3.84, -4.89, 6, -8.31, 6], ["c", -3.42, 0, -6.39, -2.16, -8.31, -6], ["c", -.48, -.96, -.84, -1.92, -1.14, -2.97], ["c", -.18, -.69, -.42, -1.74, -.42, -1.92], ["c", 0, -.12, .09, -.27, .24, -.33], ["z"], ["m", 9.21, 0], ["c", 1.2, -.27, 2.34, .63, 2.34, 1.86], ["c", 0, .9, -.66, 1.68, -1.5, 1.89], ["c", -1.38, .27, -2.58, -.93, -2.31, -2.31], ["c", .15, -.69, .78, -1.29, 1.47, -1.44], ["z"]], w: 19.744, h: 11.274 }, "scripts.sforzato": { d: [["M", -6.45, -3.69], ["c", .06, -.03, .15, -.06, .18, -.06], ["c", .06, 0, 2.85, .72, 6.24, 1.59], ["l", 6.33, 1.65], ["c", .33, .06, .45, .21, .45, .51], ["c", 0, .3, -.12, .45, -.45, .51], ["l", -6.33, 1.65], ["c", -3.39, .87, -6.18, 1.59, -6.21, 1.59], ["c", -.21, 0, -.48, -.24, -.51, -.45], ["c", 0, -.15, .06, -.36, .18, -.45], ["c", .09, -.06, .87, -.27, 3.84, -1.05], ["c", 2.04, -.54, 3.84, -.99, 4.02, -1.02], ["c", .15, -.06, 1.14, -.24, 2.22, -.42], ["c", 1.05, -.18, 1.92, -.36, 1.92, -.36], ["c", 0, 0, -.87, -.18, -1.92, -.36], ["c", -1.08, -.18, -2.07, -.36, -2.22, -.42], ["c", -.18, -.03, -1.98, -.48, -4.02, -1.02], ["c", -2.97, -.78, -3.75, -.99, -3.84, -1.05], ["c", -.12, -.09, -.18, -.3, -.18, -.45], ["c", .03, -.15, .15, -.3, .3, -.39], ["z"]], w: 13.5, h: 7.5 }, "scripts.staccato": { d: [["M", -.36, -1.47], ["c", .93, -.21, 1.86, .51, 1.86, 1.47], ["c", 0, .93, -.87, 1.65, -1.8, 1.47], ["c", -.54, -.12, -1.02, -.57, -1.14, -1.08], ["c", -.21, -.81, .27, -1.65, 1.08, -1.86], ["z"]], w: 2.989, h: 3.004 }, "scripts.tenuto": { d: [["M", -4.2, -.48], ["l", .12, -.06], ["l", 4.08, 0], ["l", 4.08, 0], ["l", .12, .06], ["c", .39, .21, .39, .75, 0, .96], ["l", -.12, .06], ["l", -4.08, 0], ["l", -4.08, 0], ["l", -.12, -.06], ["c", -.39, -.21, -.39, -.75, 0, -.96], ["z"]], w: 8.985, h: 1.08 }, "scripts.umarcato": { d: [["M", -.15, -8.19], ["c", .15, -.12, .36, -.03, .45, .15], ["c", .21, .42, 3.45, 7.65, 3.45, 7.71], ["c", 0, .12, -.12, .27, -.21, .3], ["c", -.03, .03, -.51, .03, -1.14, .03], ["c", -1.05, 0, -1.08, 0, -1.17, -.06], ["c", -.09, -.06, -.24, -.36, -1.17, -2.4], ["c", -.57, -1.29, -1.05, -2.34, -1.08, -2.34], ["c", 0, -.03, -.51, 1.02, -1.08, 2.34], ["c", -.93, 2.07, -1.08, 2.34, -1.14, 2.4], ["c", -.06, .03, -.15, .06, -.18, .06], ["c", -.15, 0, -.33, -.18, -.33, -.33], ["c", 0, -.06, 3.24, -7.32, 3.45, -7.71], ["c", .03, -.06, .09, -.15, .15, -.15], ["z"]], w: 7.5, h: 8.245 }, "scripts.dmarcato": { d: [["M", -3.57, .03], ["c", .03, 0, .57, -.03, 1.17, -.03], ["c", 1.05, 0, 1.08, 0, 1.17, .06], ["c", .09, .06, .24, .36, 1.17, 2.4], ["c", .57, 1.29, 1.05, 2.34, 1.08, 2.34], ["c", 0, .03, .51, -1.02, 1.08, -2.34], ["c", .93, -2.07, 1.08, -2.34, 1.14, -2.4], ["c", .06, -.03, .15, -.06, .18, -.06], ["c", .15, 0, .33, .18, .33, .33], ["c", 0, .09, -3.45, 7.74, -3.54, 7.83], ["c", -.12, .12, -.3, .12, -.42, 0], ["c", -.09, -.09, -3.54, -7.74, -3.54, -7.83], ["c", 0, -.09, .12, -.27, .18, -.3], ["z"]], w: 7.5, h: 8.25 }, "scripts.stopped": { d: [["M", -.27, -4.08], ["c", .18, -.09, .36, -.09, .54, 0], ["c", .18, .09, .24, .15, .33, .3], ["l", .06, .15], ["l", 0, 1.5], ["l", 0, 1.47], ["l", 1.47, 0], ["l", 1.5, 0], ["l", .15, .06], ["c", .15, .09, .21, .15, .3, .33], ["c", .09, .18, .09, .36, 0, .54], ["c", -.09, .18, -.15, .24, -.33, .33], ["c", -.12, .06, -.18, .06, -1.62, .06], ["l", -1.47, 0], ["l", 0, 1.47], ["l", 0, 1.47], ["l", -.06, .15], ["c", -.09, .18, -.15, .24, -.33, .33], ["c", -.18, .09, -.36, .09, -.54, 0], ["c", -.18, -.09, -.24, -.15, -.33, -.33], ["l", -.06, -.15], ["l", 0, -1.47], ["l", 0, -1.47], ["l", -1.47, 0], ["c", -1.44, 0, -1.5, 0, -1.62, -.06], ["c", -.18, -.09, -.24, -.15, -.33, -.33], ["c", -.09, -.18, -.09, -.36, 0, -.54], ["c", .09, -.18, .15, -.24, .33, -.33], ["l", .15, -.06], ["l", 1.47, 0], ["l", 1.47, 0], ["l", 0, -1.47], ["c", 0, -1.44, 0, -1.5, .06, -1.62], ["c", .09, -.18, .15, -.24, .33, -.33], ["z"]], w: 8.295, h: 8.295 }, "scripts.upbow": { d: [["M", -4.65, -15.54], ["c", .12, -.09, .36, -.06, .48, .03], ["c", .03, .03, .09, .09, .12, .15], ["c", .03, .06, .66, 2.13, 1.41, 4.62], ["c", 1.35, 4.41, 1.38, 4.56, 2.01, 6.96], ["l", .63, 2.46], ["l", .63, -2.46], ["c", .63, -2.4, .66, -2.55, 2.01, -6.96], ["c", .75, -2.49, 1.38, -4.56, 1.41, -4.62], ["c", .06, -.15, .18, -.21, .36, -.24], ["c", .15, 0, .3, .06, .39, .18], ["c", .15, .21, .24, -.18, -2.1, 7.56], ["c", -1.2, 3.96, -2.22, 7.32, -2.25, 7.41], ["c", 0, .12, -.06, .27, -.09, .3], ["c", -.12, .21, -.6, .21, -.72, 0], ["c", -.03, -.03, -.09, -.18, -.09, -.3], ["c", -.03, -.09, -1.05, -3.45, -2.25, -7.41], ["c", -2.34, -7.74, -2.25, -7.35, -2.1, -7.56], ["c", .03, -.03, .09, -.09, .15, -.12], ["z"]], w: 9.73, h: 15.608 }, "scripts.downbow": { d: [["M", -5.55, -9.93], ["l", .09, -.06], ["l", 5.46, 0], ["l", 5.46, 0], ["l", .09, .06], ["l", .06, .09], ["l", 0, 4.77], ["c", 0, 5.28, 0, 4.89, -.18, 5.01], ["c", -.18, .12, -.42, .06, -.54, -.12], ["c", -.06, -.09, -.06, -.18, -.06, -2.97], ["l", 0, -2.85], ["l", -4.83, 0], ["l", -4.83, 0], ["l", 0, 2.85], ["c", 0, 2.79, 0, 2.88, -.06, 2.97], ["c", -.15, .24, -.51, .24, -.66, 0], ["c", -.06, -.09, -.06, -.21, -.06, -4.89], ["l", 0, -4.77], ["z"]], w: 11.22, h: 9.992 }, "scripts.turn": { d: [["M", -4.77, -3.9], ["c", .36, -.06, 1.05, -.06, 1.44, .03], ["c", .78, .15, 1.5, .51, 2.34, 1.14], ["c", .6, .45, 1.05, .87, 2.22, 2.01], ["c", 1.11, 1.08, 1.62, 1.5, 2.22, 1.86], ["c", .6, .36, 1.32, .57, 1.92, .57], ["c", .9, 0, 1.71, -.57, 1.89, -1.35], ["c", .24, -.93, -.39, -1.89, -1.35, -2.1], ["l", -.15, -.06], ["l", -.09, .15], ["c", -.03, .09, -.15, .24, -.24, .33], ["c", -.72, .72, -2.04, .54, -2.49, -.36], ["c", -.48, -.93, .03, -1.86, 1.17, -2.19], ["c", .3, -.09, 1.02, -.09, 1.35, 0], ["c", .99, .27, 1.74, .87, 2.25, 1.83], ["c", .69, 1.41, .63, 3, -.21, 4.26], ["c", -.21, .3, -.69, .81, -.99, 1.02], ["c", -.3, .21, -.84, .45, -1.17, .54], ["c", -1.23, .36, -2.49, .15, -3.72, -.6], ["c", -.75, -.48, -1.41, -1.02, -2.85, -2.46], ["c", -1.11, -1.08, -1.62, -1.5, -2.22, -1.86], ["c", -.6, -.36, -1.32, -.57, -1.92, -.57], ["c", -.9, 0, -1.71, .57, -1.89, 1.35], ["c", -.24, .93, .39, 1.89, 1.35, 2.1], ["l", .15, .06], ["l", .09, -.15], ["c", .03, -.09, .15, -.24, .24, -.33], ["c", .72, -.72, 2.04, -.54, 2.49, .36], ["c", .48, .93, -.03, 1.86, -1.17, 2.19], ["c", -.3, .09, -1.02, .09, -1.35, 0], ["c", -.99, -.27, -1.74, -.87, -2.25, -1.83], ["c", -.69, -1.41, -.63, -3, .21, -4.26], ["c", .21, -.3, .69, -.81, .99, -1.02], ["c", .48, -.33, 1.11, -.57, 1.74, -.66], ["z"]], w: 16.366, h: 7.893 }, "scripts.trill": { d: [["M", -.51, -16.02], ["c", .12, -.09, .21, -.18, .21, -.18], ["l", -.81, 4.02], ["l", -.81, 4.02], ["c", .03, 0, .51, -.27, 1.08, -.6], ["c", .6, -.3, 1.14, -.63, 1.26, -.66], ["c", 1.14, -.54, 2.31, -.6, 3.09, -.18], ["c", .27, .15, .54, .36, .6, .51], ["l", .06, .12], ["l", .21, -.21], ["c", .9, -.81, 2.22, -.99, 3.12, -.42], ["c", .6, .42, .9, 1.14, .78, 2.07], ["c", -.15, 1.29, -1.05, 2.31, -1.95, 2.25], ["c", -.48, -.03, -.78, -.3, -.96, -.81], ["c", -.09, -.27, -.09, -.9, -.03, -1.2], ["c", .21, -.75, .81, -1.23, 1.59, -1.32], ["l", .24, -.03], ["l", -.09, -.12], ["c", -.51, -.66, -1.62, -.63, -2.31, .03], ["c", -.39, .42, -.3, .09, -1.23, 4.77], ["l", -.81, 4.14], ["c", -.03, 0, -.12, -.03, -.21, -.09], ["c", -.33, -.15, -.54, -.18, -.99, -.18], ["c", -.42, 0, -.66, .03, -1.05, .18], ["c", -.12, .06, -.21, .09, -.21, .09], ["c", 0, -.03, .36, -1.86, .81, -4.11], ["c", .9, -4.47, .87, -4.26, .69, -4.53], ["c", -.21, -.36, -.66, -.51, -1.17, -.36], ["c", -.15, .06, -2.22, 1.14, -2.58, 1.38], ["c", -.12, .09, -.12, .09, -.21, .6], ["l", -.09, .51], ["l", .21, .24], ["c", .63, .75, 1.02, 1.47, 1.2, 2.19], ["c", .06, .27, .06, .36, .06, .81], ["c", 0, .42, 0, .54, -.06, .78], ["c", -.15, .54, -.33, .93, -.63, 1.35], ["c", -.18, .24, -.57, .63, -.81, .78], ["c", -.24, .15, -.63, .36, -.84, .42], ["c", -.27, .06, -.66, .06, -.87, .03], ["c", -.81, -.18, -1.32, -1.05, -1.38, -2.46], ["c", -.03, -.6, .03, -.99, .33, -2.46], ["c", .21, -1.08, .24, -1.32, .21, -1.29], ["c", -1.2, .48, -2.4, .75, -3.21, .72], ["c", -.69, -.06, -1.17, -.3, -1.41, -.72], ["c", -.39, -.75, -.12, -1.8, .66, -2.46], ["c", .24, -.18, .69, -.42, 1.02, -.51], ["c", .69, -.18, 1.53, -.15, 2.31, .09], ["c", .3, .09, .75, .3, .99, .45], ["c", .12, .09, .15, .09, .15, .03], ["c", .03, -.03, .33, -1.59, .72, -3.45], ["c", .36, -1.86, .66, -3.42, .69, -3.45], ["c", 0, -.03, .03, -.03, .21, .03], ["c", .21, .06, .27, .06, .48, .06], ["c", .42, -.03, .78, -.18, 1.26, -.48], ["c", .15, -.12, .36, -.27, .48, -.39], ["z"], ["m", -5.73, 7.68], ["c", -.27, -.03, -.96, -.06, -1.2, -.03], ["c", -.81, .12, -1.35, .57, -1.5, 1.2], ["c", -.18, .66, .12, 1.14, .75, 1.29], ["c", .66, .12, 1.92, -.12, 3.18, -.66], ["l", .33, -.15], ["l", .09, -.39], ["c", .06, -.21, .09, -.42, .09, -.45], ["c", 0, -.03, -.45, -.3, -.75, -.45], ["c", -.27, -.15, -.66, -.27, -.99, -.36], ["z"], ["m", 4.29, 3.63], ["c", -.24, -.39, -.51, -.75, -.51, -.69], ["c", -.06, .12, -.39, 1.92, -.45, 2.28], ["c", -.09, .54, -.12, 1.14, -.06, 1.38], ["c", .06, .42, .21, .6, .51, .57], ["c", .39, -.06, .75, -.48, .93, -1.14], ["c", .09, -.33, .09, -1.05, 0, -1.38], ["c", -.09, -.39, -.24, -.69, -.42, -1.02], ["z"]], w: 17.963, h: 16.49 }, "scripts.segno": { d: [["M", -3.72, -11.22], ["c", .78, -.09, 1.59, .03, 2.31, .42], ["c", 1.2, .6, 2.01, 1.71, 2.31, 3.09], ["c", .09, .42, .09, 1.2, .03, 1.5], ["c", -.15, .45, -.39, .81, -.66, .93], ["c", -.33, .18, -.84, .21, -1.23, .15], ["c", -.81, -.18, -1.32, -.93, -1.26, -1.89], ["c", .03, -.36, .09, -.57, .24, -.9], ["c", .15, -.33, .45, -.6, .72, -.75], ["c", .12, -.06, .18, -.09, .18, -.12], ["c", 0, -.03, -.03, -.15, -.09, -.24], ["c", -.18, -.45, -.54, -.87, -.96, -1.08], ["c", -1.11, -.57, -2.34, -.18, -2.88, .9], ["c", -.24, .51, -.33, 1.11, -.24, 1.83], ["c", .27, 1.92, 1.5, 3.54, 3.93, 5.13], ["c", .48, .33, 1.26, .78, 1.29, .78], ["c", .03, 0, 1.35, -2.19, 2.94, -4.89], ["l", 2.88, -4.89], ["l", .84, 0], ["l", .87, 0], ["l", -.03, .06], ["c", -.15, .21, -6.15, 10.41, -6.15, 10.44], ["c", 0, 0, .21, .15, .48, .27], ["c", 2.61, 1.47, 4.35, 3.03, 5.13, 4.65], ["c", 1.14, 2.34, .51, 5.07, -1.44, 6.39], ["c", -.66, .42, -1.32, .63, -2.13, .69], ["c", -2.01, .09, -3.81, -1.41, -4.26, -3.54], ["c", -.09, -.42, -.09, -1.2, -.03, -1.5], ["c", .15, -.45, .39, -.81, .66, -.93], ["c", .33, -.18, .84, -.21, 1.23, -.15], ["c", .81, .18, 1.32, .93, 1.26, 1.89], ["c", -.03, .36, -.09, .57, -.24, .9], ["c", -.15, .33, -.45, .6, -.72, .75], ["c", -.12, .06, -.18, .09, -.18, .12], ["c", 0, .03, .03, .15, .09, .24], ["c", .18, .45, .54, .87, .96, 1.08], ["c", 1.11, .57, 2.34, .18, 2.88, -.9], ["c", .24, -.51, .33, -1.11, .24, -1.83], ["c", -.27, -1.92, -1.5, -3.54, -3.93, -5.13], ["c", -.48, -.33, -1.26, -.78, -1.29, -.78], ["c", -.03, 0, -1.35, 2.19, -2.91, 4.89], ["l", -2.88, 4.89], ["l", -.87, 0], ["l", -.87, 0], ["l", .03, -.06], ["c", .15, -.21, 6.15, -10.41, 6.15, -10.44], ["c", 0, 0, -.21, -.15, -.48, -.3], ["c", -2.61, -1.44, -4.35, -3, -5.13, -4.62], ["c", -.9, -1.89, -.72, -4.02, .48, -5.52], ["c", .69, -.84, 1.68, -1.41, 2.73, -1.53], ["z"], ["m", 8.76, 9.09], ["c", .03, -.03, .15, -.03, .27, -.03], ["c", .33, .03, .57, .18, .72, .48], ["c", .09, .18, .09, .57, 0, .75], ["c", -.09, .18, -.21, .3, -.36, .39], ["c", -.15, .06, -.21, .06, -.39, .06], ["c", -.21, 0, -.27, 0, -.39, -.06], ["c", -.3, -.15, -.48, -.45, -.48, -.75], ["c", 0, -.39, .24, -.72, .63, -.84], ["z"], ["m", -10.53, 2.61], ["c", .03, -.03, .15, -.03, .27, -.03], ["c", .33, .03, .57, .18, .72, .48], ["c", .09, .18, .09, .57, 0, .75], ["c", -.09, .18, -.21, .3, -.36, .39], ["c", -.15, .06, -.21, .06, -.39, .06], ["c", -.21, 0, -.27, 0, -.39, -.06], ["c", -.3, -.15, -.48, -.45, -.48, -.75], ["c", 0, -.39, .24, -.72, .63, -.84], ["z"]], w: 15, h: 22.504 }, "scripts.coda": { d: [["M", -.21, -10.47], ["c", .18, -.12, .42, -.06, .54, .12], ["c", .06, .09, .06, .18, .06, 1.5], ["l", 0, 1.38], ["l", .18, 0], ["c", .39, .06, .96, .24, 1.38, .48], ["c", 1.68, .93, 2.82, 3.24, 3.03, 6.12], ["c", .03, .24, .03, .45, .03, .45], ["c", 0, .03, .6, .03, 1.35, .03], ["c", 1.5, 0, 1.47, 0, 1.59, .18], ["c", .09, .12, .09, .3, 0, .42], ["c", -.12, .18, -.09, .18, -1.59, .18], ["c", -.75, 0, -1.35, 0, -1.35, .03], ["c", 0, 0, 0, .21, -.03, .42], ["c", -.24, 3.15, -1.53, 5.58, -3.45, 6.36], ["c", -.27, .12, -.72, .24, -.96, .27], ["l", -.18, 0], ["l", 0, 1.38], ["c", 0, 1.32, 0, 1.41, -.06, 1.5], ["c", -.15, .24, -.51, .24, -.66, 0], ["c", -.06, -.09, -.06, -.18, -.06, -1.5], ["l", 0, -1.38], ["l", -.18, 0], ["c", -.39, -.06, -.96, -.24, -1.38, -.48], ["c", -1.68, -.93, -2.82, -3.24, -3.03, -6.15], ["c", -.03, -.21, -.03, -.42, -.03, -.42], ["c", 0, -.03, -.6, -.03, -1.35, -.03], ["c", -1.5, 0, -1.47, 0, -1.59, -.18], ["c", -.09, -.12, -.09, -.3, 0, -.42], ["c", .12, -.18, .09, -.18, 1.59, -.18], ["c", .75, 0, 1.35, 0, 1.35, -.03], ["c", 0, 0, 0, -.21, .03, -.45], ["c", .24, -3.12, 1.53, -5.55, 3.45, -6.33], ["c", .27, -.12, .72, -.24, .96, -.27], ["l", .18, 0], ["l", 0, -1.38], ["c", 0, -1.53, 0, -1.5, .18, -1.62], ["z"], ["m", -.18, 6.93], ["c", 0, -2.97, 0, -3.15, -.06, -3.15], ["c", -.09, 0, -.51, .15, -.66, .21], ["c", -.87, .51, -1.38, 1.62, -1.56, 3.51], ["c", -.06, .54, -.12, 1.59, -.12, 2.16], ["l", 0, .42], ["l", 1.2, 0], ["l", 1.2, 0], ["l", 0, -3.15], ["z"], ["m", 1.17, -3.06], ["c", -.09, -.03, -.21, -.06, -.27, -.09], ["l", -.12, 0], ["l", 0, 3.15], ["l", 0, 3.15], ["l", 1.2, 0], ["l", 1.2, 0], ["l", 0, -.81], ["c", -.06, -2.4, -.33, -3.69, -.93, -4.59], ["c", -.27, -.39, -.66, -.69, -1.08, -.81], ["z"], ["m", -1.17, 10.14], ["l", 0, -3.15], ["l", -1.2, 0], ["l", -1.2, 0], ["l", 0, .81], ["c", .03, .96, .06, 1.47, .15, 2.13], ["c", .24, 2.04, .96, 3.12, 2.13, 3.36], ["l", .12, 0], ["l", 0, -3.15], ["z"], ["m", 3.18, -2.34], ["l", 0, -.81], ["l", -1.2, 0], ["l", -1.2, 0], ["l", 0, 3.15], ["l", 0, 3.15], ["l", .12, 0], ["c", 1.17, -.24, 1.89, -1.32, 2.13, -3.36], ["c", .09, -.66, .12, -1.17, .15, -2.13], ["z"]], w: 16.035, h: 21.062 }, "scripts.comma": { d: [["M", 1.14, -4.62], ["c", .3, -.12, .69, -.03, .93, .15], ["c", .12, .12, .36, .45, .51, .78], ["c", .9, 1.77, .54, 4.05, -1.08, 6.75], ["c", -.36, .63, -.87, 1.38, -.96, 1.44], ["c", -.18, .12, -.42, .06, -.54, -.12], ["c", -.09, -.18, -.09, -.3, .12, -.6], ["c", .96, -1.44, 1.44, -2.97, 1.38, -4.35], ["c", -.06, -.93, -.3, -1.68, -.78, -2.46], ["c", -.27, -.39, -.33, -.63, -.24, -.96], ["c", .09, -.27, .36, -.54, .66, -.63], ["z"]], w: 3.042, h: 9.237 }, "scripts.roll": { d: [["M", 1.95, -6], ["c", .21, -.09, .36, -.09, .57, 0], ["c", .39, .15, .63, .39, 1.47, 1.35], ["c", .66, .75, .78, .87, 1.08, 1.05], ["c", .75, .45, 1.65, .42, 2.4, -.06], ["c", .12, -.09, .27, -.27, .54, -.6], ["c", .42, -.54, .51, -.63, .69, -.63], ["c", .09, 0, .3, .12, .36, .21], ["c", .09, .12, .12, .3, .03, .42], ["c", -.06, .12, -3.15, 3.9, -3.3, 4.08], ["c", -.06, .06, -.18, .12, -.27, .18], ["c", -.27, .12, -.6, .06, -.99, -.27], ["c", -.27, -.21, -.42, -.39, -1.08, -1.14], ["c", -.63, -.72, -.81, -.9, -1.17, -1.08], ["c", -.36, -.18, -.57, -.21, -.99, -.21], ["c", -.39, 0, -.63, .03, -.93, .18], ["c", -.36, .15, -.51, .27, -.9, .81], ["c", -.24, .27, -.45, .51, -.48, .54], ["c", -.12, .09, -.27, .06, -.39, 0], ["c", -.24, -.15, -.33, -.39, -.21, -.6], ["c", .09, -.12, 3.18, -3.87, 3.33, -4.02], ["c", .06, -.06, .18, -.15, .24, -.21], ["z"]], w: 10.817, h: 6.125 }, "scripts.prall": { d: [["M", -4.38, -3.69], ["c", .06, -.03, .18, -.06, .24, -.06], ["c", .3, 0, .27, -.03, 1.89, 1.95], ["l", 1.53, 1.83], ["c", .03, 0, .57, -.84, 1.23, -1.83], ["c", 1.14, -1.68, 1.23, -1.83, 1.35, -1.89], ["c", .06, -.03, .18, -.06, .24, -.06], ["c", .3, 0, .27, -.03, 1.89, 1.95], ["l", 1.53, 1.83], ["l", .48, -.69], ["c", .51, -.78, .54, -.84, .69, -.9], ["c", .42, -.18, .87, .15, .81, .6], ["c", -.03, .12, -.3, .51, -1.5, 2.37], ["c", -1.38, 2.07, -1.5, 2.22, -1.62, 2.28], ["c", -.06, .03, -.18, .06, -.24, .06], ["c", -.3, 0, -.27, .03, -1.89, -1.95], ["l", -1.53, -1.83], ["c", -.03, 0, -.57, .84, -1.23, 1.83], ["c", -1.14, 1.68, -1.23, 1.83, -1.35, 1.89], ["c", -.06, .03, -.18, .06, -.24, .06], ["c", -.3, 0, -.27, .03, -1.89, -1.95], ["l", -1.53, -1.83], ["l", -.48, .69], ["c", -.51, .78, -.54, .84, -.69, .9], ["c", -.42, .18, -.87, -.15, -.81, -.6], ["c", .03, -.12, .3, -.51, 1.5, -2.37], ["c", 1.38, -2.07, 1.5, -2.22, 1.62, -2.28], ["z"]], w: 15.011, h: 7.5 }, "scripts.arpeggio": { d: [["M", 1.5, 0], ["c", 1.5, 2, 1.5, 3, 1.5, 3], ["s", 0, 1, -2, 1.5], ["s", -.5, 3, 1, 5.5], ["l", 1.5, 0], ["s", -1.75, -2, -1.9, -3.25], ["s", 2.15, -.6, 2.95, -1.6], ["s", .45, -1, .5, -1.25], ["s", 0, -1, -2, -3.9], ["l", -1.5, 0], ["z"]], w: 5, h: 10 }, "scripts.mordent": { d: [["M", -.21, -4.95], ["c", .27, -.15, .63, 0, .75, .27], ["c", .06, .12, .06, .24, .06, 1.44], ["l", 0, 1.29], ["l", .57, -.84], ["c", .51, -.75, .57, -.84, .69, -.9], ["c", .06, -.03, .18, -.06, .24, -.06], ["c", .3, 0, .27, -.03, 1.89, 1.95], ["l", 1.53, 1.83], ["l", .48, -.69], ["c", .51, -.78, .54, -.84, .69, -.9], ["c", .42, -.18, .87, .15, .81, .6], ["c", -.03, .12, -.3, .51, -1.5, 2.37], ["c", -1.38, 2.07, -1.5, 2.22, -1.62, 2.28], ["c", -.06, .03, -.18, .06, -.24, .06], ["c", -.3, 0, -.27, .03, -1.83, -1.89], ["c", -.81, -.99, -1.5, -1.8, -1.53, -1.86], ["c", -.06, -.03, -.06, -.03, -.12, .03], ["c", -.06, .06, -.06, .15, -.06, 2.28], ["c", 0, 1.95, 0, 2.25, -.06, 2.34], ["c", -.18, .45, -.81, .48, -1.05, .03], ["c", -.03, -.06, -.06, -.24, -.06, -1.41], ["l", 0, -1.35], ["l", -.57, .84], ["c", -.54, .78, -.6, .87, -.72, .93], ["c", -.06, .03, -.18, .06, -.24, .06], ["c", -.3, 0, -.27, .03, -1.89, -1.95], ["l", -1.53, -1.83], ["l", -.48, .69], ["c", -.51, .78, -.54, .84, -.69, .9], ["c", -.42, .18, -.87, -.15, -.81, -.6], ["c", .03, -.12, .3, -.51, 1.5, -2.37], ["c", 1.38, -2.07, 1.5, -2.22, 1.62, -2.28], ["c", .06, -.03, .18, -.06, .24, -.06], ["c", .3, 0, .27, -.03, 1.89, 1.95], ["l", 1.53, 1.83], ["c", .03, 0, .06, -.06, .09, -.09], ["c", .06, -.12, .06, -.15, .06, -2.28], ["c", 0, -1.92, 0, -2.22, .06, -2.31], ["c", .06, -.15, .15, -.24, .3, -.3], ["z"]], w: 15.011, h: 10.012 }, "flags.u8th": { d: [["M", -.42, 3.75], ["l", 0, -3.75], ["l", .21, 0], ["l", .21, 0], ["l", 0, .18], ["c", 0, .3, .06, .84, .12, 1.23], ["c", .24, 1.53, .9, 3.12, 2.13, 5.16], ["l", .99, 1.59], ["c", .87, 1.44, 1.38, 2.34, 1.77, 3.09], ["c", .81, 1.68, 1.2, 3.06, 1.26, 4.53], ["c", .03, 1.53, -.21, 3.27, -.75, 5.01], ["c", -.21, .69, -.51, 1.5, -.6, 1.59], ["c", -.09, .12, -.27, .21, -.42, .21], ["c", -.15, 0, -.42, -.12, -.51, -.21], ["c", -.15, -.18, -.18, -.42, -.09, -.66], ["c", .15, -.33, .45, -1.2, .57, -1.62], ["c", .42, -1.38, .6, -2.58, .6, -3.9], ["c", 0, -.66, 0, -.81, -.06, -1.11], ["c", -.39, -2.07, -1.8, -4.26, -4.59, -7.14], ["l", -.42, -.45], ["l", -.21, 0], ["l", -.21, 0], ["l", 0, -3.75], ["z"]], w: 6.692, h: 22.59 }, "flags.u16th": { d: [["M", -.42, 7.5], ["l", 0, -7.5], ["l", .21, 0], ["l", .21, 0], ["l", 0, .39], ["c", .06, 1.08, .39, 2.19, .99, 3.39], ["c", .45, .9, .87, 1.59, 1.95, 3.12], ["c", 1.29, 1.86, 1.77, 2.64, 2.22, 3.57], ["c", .45, .93, .72, 1.8, .87, 2.64], ["c", .06, .51, .06, 1.5, 0, 1.92], ["c", -.12, .6, -.3, 1.2, -.54, 1.71], ["l", -.09, .24], ["l", .18, .45], ["c", .51, 1.2, .72, 2.22, .69, 3.42], ["c", -.06, 1.53, -.39, 3.03, -.99, 4.53], ["c", -.3, .75, -.36, .81, -.57, .9], ["c", -.15, .09, -.33, .06, -.48, 0], ["c", -.18, -.09, -.27, -.18, -.33, -.33], ["c", -.09, -.18, -.06, -.3, .12, -.75], ["c", .66, -1.41, 1.02, -2.88, 1.08, -4.32], ["c", 0, -.6, -.03, -1.05, -.18, -1.59], ["c", -.3, -1.2, -.99, -2.4, -2.25, -3.87], ["c", -.42, -.48, -1.53, -1.62, -2.19, -2.22], ["l", -.45, -.42], ["l", -.03, 1.11], ["l", 0, 1.11], ["l", -.21, 0], ["l", -.21, 0], ["l", 0, -7.5], ["z"], ["m", 1.65, .09], ["c", -.3, -.3, -.69, -.72, -.9, -.87], ["l", -.33, -.33], ["l", 0, .15], ["c", 0, .3, .06, .81, .15, 1.26], ["c", .27, 1.29, .87, 2.61, 2.04, 4.29], ["c", .15, .24, .6, .87, .96, 1.38], ["l", 1.08, 1.53], ["l", .42, .63], ["c", .03, 0, .12, -.36, .21, -.72], ["c", .06, -.33, .06, -1.2, 0, -1.62], ["c", -.33, -1.71, -1.44, -3.48, -3.63, -5.7], ["z"]], w: 6.693, h: 26.337 }, "flags.u32nd": { d: [["M", -.42, 11.25], ["l", 0, -11.25], ["l", .21, 0], ["l", .21, 0], ["l", 0, .36], ["c", .09, 1.68, .69, 3.27, 2.07, 5.46], ["l", .87, 1.35], ["c", 1.02, 1.62, 1.47, 2.37, 1.86, 3.18], ["c", .48, 1.02, .78, 1.92, .93, 2.88], ["c", .06, .48, .06, 1.5, 0, 1.89], ["c", -.09, .42, -.21, .87, -.36, 1.26], ["l", -.12, .3], ["l", .15, .39], ["c", .69, 1.56, .84, 2.88, .54, 4.38], ["c", -.09, .45, -.27, 1.08, -.45, 1.47], ["l", -.12, .24], ["l", .18, .36], ["c", .33, .72, .57, 1.56, .69, 2.34], ["c", .12, 1.02, -.06, 2.52, -.42, 3.84], ["c", -.27, .93, -.75, 2.13, -.93, 2.31], ["c", -.18, .15, -.45, .18, -.66, .09], ["c", -.18, -.09, -.27, -.18, -.33, -.33], ["c", -.09, -.18, -.06, -.3, .06, -.6], ["c", .21, -.36, .42, -.9, .57, -1.38], ["c", .51, -1.41, .69, -3.06, .48, -4.08], ["c", -.15, -.81, -.57, -1.68, -1.2, -2.55], ["c", -.72, -.99, -1.83, -2.13, -3.3, -3.33], ["l", -.48, -.42], ["l", -.03, 1.53], ["l", 0, 1.56], ["l", -.21, 0], ["l", -.21, 0], ["l", 0, -11.25], ["z"], ["m", 1.26, -3.96], ["c", -.27, -.3, -.54, -.6, -.66, -.72], ["l", -.18, -.21], ["l", 0, .42], ["c", .06, .87, .24, 1.74, .66, 2.67], ["c", .36, .87, .96, 1.86, 1.92, 3.18], ["c", .21, .33, .63, .87, .87, 1.23], ["c", .27, .39, .6, .84, .75, 1.08], ["l", .27, .39], ["l", .03, -.12], ["c", .12, -.45, .15, -1.05, .09, -1.59], ["c", -.27, -1.86, -1.38, -3.78, -3.75, -6.33], ["z"], ["m", -.27, 6.09], ["c", -.27, -.21, -.48, -.42, -.51, -.45], ["c", -.06, -.03, -.06, -.03, -.06, .21], ["c", 0, .9, .3, 2.04, .81, 3.09], ["c", .48, 1.02, .96, 1.77, 2.37, 3.63], ["c", .6, .78, 1.05, 1.44, 1.29, 1.77], ["c", .06, .12, .15, .21, .15, .18], ["c", .03, -.03, .18, -.57, .24, -.87], ["c", .06, -.45, .06, -1.32, -.03, -1.74], ["c", -.09, -.48, -.24, -.9, -.51, -1.44], ["c", -.66, -1.35, -1.83, -2.7, -3.75, -4.38], ["z"]], w: 6.697, h: 32.145 }, "flags.u64th": { d: [["M", -.42, 15], ["l", 0, -15], ["l", .21, 0], ["l", .21, 0], ["l", 0, .36], ["c", .06, 1.2, .39, 2.37, 1.02, 3.66], ["c", .39, .81, .84, 1.56, 1.8, 3.09], ["c", .81, 1.26, 1.05, 1.68, 1.35, 2.22], ["c", .87, 1.5, 1.35, 2.79, 1.56, 4.08], ["c", .06, .54, .06, 1.56, -.03, 2.04], ["c", -.09, .48, -.21, .99, -.36, 1.35], ["l", -.12, .27], ["l", .12, .27], ["c", .09, .15, .21, .45, .27, .66], ["c", .69, 1.89, .63, 3.66, -.18, 5.46], ["l", -.18, .39], ["l", .15, .33], ["c", .3, .66, .51, 1.44, .63, 2.1], ["c", .06, .48, .06, 1.35, 0, 1.71], ["c", -.15, .57, -.42, 1.2, -.78, 1.68], ["l", -.21, .27], ["l", .18, .33], ["c", .57, 1.05, .93, 2.13, 1.02, 3.18], ["c", .06, .72, 0, 1.83, -.21, 2.79], ["c", -.18, 1.02, -.63, 2.34, -1.02, 3.09], ["c", -.15, .33, -.48, .45, -.78, .3], ["c", -.18, -.09, -.27, -.18, -.33, -.33], ["c", -.09, -.18, -.06, -.3, .03, -.54], ["c", .75, -1.5, 1.23, -3.45, 1.17, -4.89], ["c", -.06, -1.02, -.42, -2.01, -1.17, -3.15], ["c", -.48, -.72, -1.02, -1.35, -1.89, -2.22], ["c", -.57, -.57, -1.56, -1.5, -1.92, -1.77], ["l", -.12, -.09], ["l", 0, 1.68], ["l", 0, 1.68], ["l", -.21, 0], ["l", -.21, 0], ["l", 0, -15], ["z"], ["m", .93, -8.07], ["c", -.27, -.3, -.48, -.54, -.51, -.54], ["c", 0, 0, 0, .69, .03, 1.02], ["c", .15, 1.47, .75, 2.94, 2.04, 4.83], ["l", 1.08, 1.53], ["c", .39, .57, .84, 1.2, .99, 1.44], ["c", .15, .24, .3, .45, .3, .45], ["c", 0, 0, .03, -.09, .06, -.21], ["c", .36, -1.59, -.15, -3.33, -1.47, -5.4], ["c", -.63, -.93, -1.35, -1.83, -2.52, -3.12], ["z"], ["m", .06, 6.72], ["c", -.24, -.21, -.48, -.42, -.51, -.45], ["l", -.06, -.06], ["l", 0, .33], ["c", 0, 1.2, .3, 2.34, .93, 3.6], ["c", .45, .9, .96, 1.68, 2.25, 3.51], ["c", .39, .54, .84, 1.17, 1.02, 1.44], ["c", .21, .33, .33, .51, .33, .48], ["c", .06, -.09, .21, -.63, .3, -.99], ["c", .06, -.33, .06, -.45, .06, -.96], ["c", 0, -.6, -.03, -.84, -.18, -1.35], ["c", -.3, -1.08, -1.02, -2.28, -2.13, -3.57], ["c", -.39, -.45, -1.44, -1.47, -2.01, -1.98], ["z"], ["m", 0, 6.72], ["c", -.24, -.21, -.48, -.39, -.51, -.42], ["l", -.06, -.06], ["l", 0, .33], ["c", 0, 1.41, .45, 2.82, 1.38, 4.35], ["c", .42, .72, .72, 1.14, 1.86, 2.73], ["c", .36, .45, .75, .99, .87, 1.2], ["c", .15, .21, .3, .36, .3, .36], ["c", .06, 0, .3, -.48, .39, -.75], ["c", .09, -.36, .12, -.63, .12, -1.05], ["c", -.06, -1.05, -.45, -2.04, -1.2, -3.18], ["c", -.57, -.87, -1.11, -1.53, -2.07, -2.49], ["c", -.36, -.33, -.84, -.78, -1.08, -1.02], ["z"]], w: 6.682, h: 39.694 }, "flags.d8th": { d: [["M", 5.67, -21.63], ["c", .24, -.12, .54, -.06, .69, .15], ["c", .06, .06, .21, .36, .39, .66], ["c", .84, 1.77, 1.26, 3.36, 1.32, 5.1], ["c", .03, 1.29, -.21, 2.37, -.81, 3.63], ["c", -.6, 1.23, -1.26, 2.13, -3.21, 4.38], ["c", -1.35, 1.53, -1.86, 2.19, -2.4, 2.97], ["c", -.63, .93, -1.11, 1.92, -1.38, 2.79], ["c", -.15, .54, -.27, 1.35, -.27, 1.8], ["l", 0, .15], ["l", -.21, 0], ["l", -.21, 0], ["l", 0, -3.75], ["l", 0, -3.75], ["l", .21, 0], ["l", .21, 0], ["l", .48, -.3], ["c", 1.83, -1.11, 3.12, -2.1, 4.17, -3.12], ["c", .78, -.81, 1.32, -1.53, 1.71, -2.31], ["c", .45, -.93, .6, -1.74, .51, -2.88], ["c", -.12, -1.56, -.63, -3.18, -1.47, -4.68], ["c", -.12, -.21, -.15, -.33, -.06, -.51], ["c", .06, -.15, .15, -.24, .33, -.33], ["z"]], w: 8.492, h: 21.691 }, "flags.ugrace": { d: [["M", 6.03, 6.93], ["c", .15, -.09, .33, -.06, .51, 0], ["c", .15, .09, .21, .15, .3, .33], ["c", .09, .18, .06, .39, -.03, .54], ["c", -.06, .15, -10.89, 8.88, -11.07, 8.97], ["c", -.15, .09, -.33, .06, -.48, 0], ["c", -.18, -.09, -.24, -.15, -.33, -.33], ["c", -.09, -.18, -.06, -.39, .03, -.54], ["c", .06, -.15, 10.89, -8.88, 11.07, -8.97], ["z"]], w: 12.019, h: 9.954 }, "flags.dgrace": { d: [["M", -6.06, -15.93], ["c", .18, -.09, .33, -.12, .48, -.06], ["c", .18, .09, 14.01, 8.04, 14.1, 8.1], ["c", .12, .12, .18, .33, .18, .51], ["c", -.03, .21, -.15, .39, -.36, .48], ["c", -.18, .09, -.33, .12, -.48, .06], ["c", -.18, -.09, -14.01, -8.04, -14.1, -8.1], ["c", -.12, -.12, -.18, -.33, -.18, -.51], ["c", .03, -.21, .15, -.39, .36, -.48], ["z"]], w: 15.12, h: 9.212 }, "flags.d16th": { d: [["M", 6.84, -22.53], ["c", .27, -.12, .57, -.06, .72, .15], ["c", .15, .15, .33, .87, .45, 1.56], ["c", .06, .33, .06, 1.35, 0, 1.65], ["c", -.06, .33, -.15, .78, -.27, 1.11], ["c", -.12, .33, -.45, .96, -.66, 1.32], ["l", -.18, .27], ["l", .09, .18], ["c", .48, 1.02, .72, 2.25, .69, 3.3], ["c", -.06, 1.23, -.42, 2.28, -1.26, 3.45], ["c", -.57, .87, -.99, 1.32, -3, 3.39], ["c", -1.56, 1.56, -2.22, 2.4, -2.76, 3.45], ["c", -.42, .84, -.66, 1.8, -.66, 2.55], ["l", 0, .15], ["l", -.21, 0], ["l", -.21, 0], ["l", 0, -7.5], ["l", 0, -7.5], ["l", .21, 0], ["l", .21, 0], ["l", 0, 1.14], ["l", 0, 1.11], ["l", .27, -.15], ["c", 1.11, -.57, 1.77, -.99, 2.52, -1.47], ["c", 2.37, -1.56, 3.69, -3.15, 4.05, -4.83], ["c", .03, -.18, .03, -.39, .03, -.78], ["c", 0, -.6, -.03, -.93, -.24, -1.5], ["c", -.06, -.18, -.12, -.39, -.15, -.45], ["c", -.03, -.24, .12, -.48, .36, -.6], ["z"], ["m", -.63, 7.5], ["c", -.06, -.18, -.15, -.36, -.15, -.36], ["c", -.03, 0, -.03, .03, -.06, .06], ["c", -.06, .12, -.96, 1.02, -1.95, 1.98], ["c", -.63, .57, -1.26, 1.17, -1.44, 1.35], ["c", -1.53, 1.62, -2.28, 2.85, -2.55, 4.32], ["c", -.03, .18, -.03, .54, -.06, .99], ["l", 0, .69], ["l", .18, -.09], ["c", .93, -.54, 2.1, -1.29, 2.82, -1.83], ["c", .69, -.51, 1.02, -.81, 1.53, -1.29], ["c", 1.86, -1.89, 2.37, -3.66, 1.68, -5.82], ["z"]], w: 8.475, h: 22.591 }, "flags.d32nd": { d: [["M", 6.84, -29.13], ["c", .27, -.12, .57, -.06, .72, .15], ["c", .12, .12, .27, .63, .36, 1.11], ["c", .33, 1.59, .06, 3.06, -.81, 4.47], ["l", -.18, .27], ["l", .09, .15], ["c", .12, .24, .33, .69, .45, 1.05], ["c", .63, 1.83, .45, 3.57, -.57, 5.22], ["l", -.18, .3], ["l", .15, .27], ["c", .42, .87, .6, 1.71, .57, 2.61], ["c", -.06, 1.29, -.48, 2.46, -1.35, 3.78], ["c", -.54, .81, -.93, 1.29, -2.46, 3], ["c", -.51, .54, -1.05, 1.17, -1.26, 1.41], ["c", -1.56, 1.86, -2.25, 3.36, -2.37, 5.01], ["l", 0, .33], ["l", -.21, 0], ["l", -.21, 0], ["l", 0, -11.25], ["l", 0, -11.25], ["l", .21, 0], ["l", .21, 0], ["l", 0, 1.35], ["l", .03, 1.35], ["l", .78, -.39], ["c", 1.38, -.69, 2.34, -1.26, 3.24, -1.92], ["c", 1.38, -1.02, 2.28, -2.13, 2.64, -3.21], ["c", .15, -.48, .18, -.72, .18, -1.29], ["c", 0, -.57, -.06, -.9, -.24, -1.47], ["c", -.06, -.18, -.12, -.39, -.15, -.45], ["c", -.03, -.24, .12, -.48, .36, -.6], ["z"], ["m", -.63, 7.2], ["c", -.09, -.18, -.12, -.21, -.12, -.15], ["c", -.03, .09, -1.02, 1.08, -2.04, 2.04], ["c", -1.17, 1.08, -1.65, 1.56, -2.07, 2.04], ["c", -.84, .96, -1.38, 1.86, -1.68, 2.76], ["c", -.21, .57, -.27, .99, -.3, 1.65], ["l", 0, .54], ["l", .66, -.33], ["c", 3.57, -1.86, 5.49, -3.69, 5.94, -5.7], ["c", .06, -.39, .06, -1.2, -.03, -1.65], ["c", -.06, -.39, -.24, -.9, -.36, -1.2], ["z"], ["m", -.06, 7.2], ["c", -.06, -.15, -.12, -.33, -.15, -.45], ["l", -.06, -.18], ["l", -.18, .21], ["l", -1.83, 1.83], ["c", -.87, .9, -1.77, 1.8, -1.95, 2.01], ["c", -1.08, 1.29, -1.62, 2.31, -1.89, 3.51], ["c", -.06, .3, -.06, .51, -.09, .93], ["l", 0, .57], ["l", .09, -.06], ["c", .75, -.45, 1.89, -1.26, 2.52, -1.74], ["c", .81, -.66, 1.74, -1.53, 2.22, -2.16], ["c", 1.26, -1.53, 1.68, -3.06, 1.32, -4.47], ["z"]], w: 8.385, h: 29.191 }, "flags.d64th": { d: [["M", 7.08, -32.88], ["c", .3, -.12, .66, -.03, .78, .24], ["c", .18, .33, .27, 2.1, .15, 2.64], ["c", -.09, .39, -.21, .78, -.39, 1.08], ["l", -.15, .3], ["l", .09, .27], ["c", .03, .12, .09, .45, .12, .69], ["c", .27, 1.44, .18, 2.55, -.3, 3.6], ["l", -.12, .33], ["l", .06, .42], ["c", .27, 1.35, .33, 2.82, .21, 3.63], ["c", -.12, .6, -.3, 1.23, -.57, 1.8], ["l", -.15, .27], ["l", .03, .42], ["c", .06, 1.02, .06, 2.7, .03, 3.06], ["c", -.15, 1.47, -.66, 2.76, -1.74, 4.41], ["c", -.45, .69, -.75, 1.11, -1.74, 2.37], ["c", -1.05, 1.38, -1.5, 1.98, -1.95, 2.73], ["c", -.93, 1.5, -1.38, 2.82, -1.44, 4.2], ["l", 0, .42], ["l", -.21, 0], ["l", -.21, 0], ["l", 0, -15], ["l", 0, -15], ["l", .21, 0], ["l", .21, 0], ["l", 0, 1.86], ["l", 0, 1.89], ["c", 0, 0, .21, -.03, .45, -.09], ["c", 2.22, -.39, 4.08, -1.11, 5.19, -2.01], ["c", .63, -.54, 1.02, -1.14, 1.2, -1.8], ["c", .06, -.3, .06, -1.14, -.03, -1.65], ["c", -.03, -.18, -.06, -.39, -.09, -.48], ["c", -.03, -.24, .12, -.48, .36, -.6], ["z"], ["m", -.45, 6.15], ["c", -.03, -.18, -.06, -.42, -.06, -.54], ["l", -.03, -.18], ["l", -.33, .3], ["c", -.42, .36, -.87, .72, -1.68, 1.29], ["c", -1.98, 1.38, -2.25, 1.59, -2.85, 2.16], ["c", -.75, .69, -1.23, 1.44, -1.47, 2.19], ["c", -.15, .45, -.18, .63, -.21, 1.35], ["l", 0, .66], ["l", .39, -.18], ["c", 1.83, -.9, 3.45, -1.95, 4.47, -2.91], ["c", .93, -.9, 1.53, -1.83, 1.74, -2.82], ["c", .06, -.33, .06, -.87, .03, -1.32], ["z"], ["m", -.27, 4.86], ["c", -.03, -.21, -.06, -.36, -.06, -.36], ["c", 0, -.03, -.12, .09, -.24, .24], ["c", -.39, .48, -.99, 1.08, -2.16, 2.19], ["c", -1.47, 1.38, -1.92, 1.83, -2.46, 2.49], ["c", -.66, .87, -1.08, 1.74, -1.29, 2.58], ["c", -.09, .42, -.15, .87, -.15, 1.44], ["l", 0, .54], ["l", .48, -.33], ["c", 1.5, -1.02, 2.58, -1.89, 3.51, -2.82], ["c", 1.47, -1.47, 2.25, -2.85, 2.4, -4.26], ["c", .03, -.39, .03, -1.17, -.03, -1.71], ["z"], ["m", -.66, 7.68], ["c", .03, -.15, .03, -.6, .03, -.99], ["l", 0, -.72], ["l", -.27, .33], ["l", -1.74, 1.98], ["c", -1.77, 1.92, -2.43, 2.76, -2.97, 3.9], ["c", -.51, 1.02, -.72, 1.77, -.75, 2.91], ["c", 0, .63, 0, .63, .06, .6], ["c", .03, -.03, .3, -.27, .63, -.54], ["c", .66, -.6, 1.86, -1.8, 2.31, -2.31], ["c", 1.65, -1.89, 2.52, -3.54, 2.7, -5.16], ["z"]], w: 8.485, h: 32.932 }, "clefs.C": { d: [["M", .06, -14.94], ["l", .09, -.06], ["l", 1.92, 0], ["l", 1.92, 0], ["l", .09, .06], ["l", .06, .09], ["l", 0, 14.85], ["l", 0, 14.82], ["l", -.06, .09], ["l", -.09, .06], ["l", -1.92, 0], ["l", -1.92, 0], ["l", -.09, -.06], ["l", -.06, -.09], ["l", 0, -14.82], ["l", 0, -14.85], ["z"], ["m", 5.37, 0], ["c", .09, -.06, .09, -.06, .57, -.06], ["c", .45, 0, .45, 0, .54, .06], ["l", .06, .09], ["l", 0, 7.14], ["l", 0, 7.11], ["l", .09, -.06], ["c", .18, -.18, .72, -.84, .96, -1.2], ["c", .3, -.45, .66, -1.17, .84, -1.65], ["c", .36, -.9, .57, -1.83, .6, -2.79], ["c", .03, -.48, .03, -.54, .09, -.63], ["c", .12, -.18, .36, -.21, .54, -.12], ["c", .18, .09, .21, .15, .24, .66], ["c", .06, .87, .21, 1.56, .57, 2.22], ["c", .51, 1.02, 1.26, 1.68, 2.22, 1.92], ["c", .21, .06, .33, .06, .78, .06], ["c", .45, 0, .57, 0, .84, -.06], ["c", .45, -.12, .81, -.33, 1.08, -.6], ["c", .57, -.57, .87, -1.41, .99, -2.88], ["c", .06, -.54, .06, -3, 0, -3.57], ["c", -.21, -2.58, -.84, -3.87, -2.16, -4.5], ["c", -.48, -.21, -1.17, -.36, -1.77, -.36], ["c", -.69, 0, -1.29, .27, -1.5, .72], ["c", -.06, .15, -.06, .21, -.06, .42], ["c", 0, .24, 0, .3, .06, .45], ["c", .12, .24, .24, .39, .63, .66], ["c", .42, .3, .57, .48, .69, .72], ["c", .06, .15, .06, .21, .06, .48], ["c", 0, .39, -.03, .63, -.21, .96], ["c", -.3, .6, -.87, 1.08, -1.5, 1.26], ["c", -.27, .06, -.87, .06, -1.14, 0], ["c", -.78, -.24, -1.44, -.87, -1.65, -1.68], ["c", -.12, -.42, -.09, -1.17, .09, -1.71], ["c", .51, -1.65, 1.98, -2.82, 3.81, -3.09], ["c", .84, -.09, 2.46, .03, 3.51, .27], ["c", 2.22, .57, 3.69, 1.8, 4.44, 3.75], ["c", .36, .93, .57, 2.13, .57, 3.36], ["c", 0, 1.44, -.48, 2.73, -1.38, 3.81], ["c", -1.26, 1.5, -3.27, 2.43, -5.28, 2.43], ["c", -.48, 0, -.51, 0, -.75, -.09], ["c", -.15, -.03, -.48, -.21, -.78, -.36], ["c", -.69, -.36, -.87, -.42, -1.26, -.42], ["c", -.27, 0, -.3, 0, -.51, .09], ["c", -.57, .3, -.81, .9, -.81, 2.1], ["c", 0, 1.23, .24, 1.83, .81, 2.13], ["c", .21, .09, .24, .09, .51, .09], ["c", .39, 0, .57, -.06, 1.26, -.42], ["c", .3, -.15, .63, -.33, .78, -.36], ["c", .24, -.09, .27, -.09, .75, -.09], ["c", 2.01, 0, 4.02, .93, 5.28, 2.4], ["c", .9, 1.11, 1.38, 2.4, 1.38, 3.84], ["c", 0, 1.5, -.3, 2.88, -.84, 3.96], ["c", -.78, 1.59, -2.19, 2.64, -4.17, 3.15], ["c", -1.05, .24, -2.67, .36, -3.51, .27], ["c", -1.83, -.27, -3.3, -1.44, -3.81, -3.09], ["c", -.18, -.54, -.21, -1.29, -.09, -1.74], ["c", .15, -.6, .63, -1.2, 1.23, -1.47], ["c", .36, -.18, .57, -.21, .99, -.21], ["c", .42, 0, .63, .03, 1.02, .21], ["c", .42, .21, .84, .63, 1.05, 1.05], ["c", .18, .36, .21, .6, .21, .96], ["c", 0, .3, 0, .36, -.06, .51], ["c", -.12, .24, -.27, .42, -.69, .72], ["c", -.57, .42, -.69, .63, -.69, 1.08], ["c", 0, .24, 0, .3, .06, .45], ["c", .12, .21, .3, .39, .57, .54], ["c", .42, .18, .87, .21, 1.53, .15], ["c", 1.08, -.15, 1.8, -.57, 2.34, -1.32], ["c", .54, -.75, .84, -1.83, .99, -3.51], ["c", .06, -.57, .06, -3.03, 0, -3.57], ["c", -.12, -1.47, -.42, -2.31, -.99, -2.88], ["c", -.27, -.27, -.63, -.48, -1.08, -.6], ["c", -.27, -.06, -.39, -.06, -.84, -.06], ["c", -.45, 0, -.57, 0, -.78, .06], ["c", -1.14, .27, -2.01, 1.17, -2.46, 2.49], ["c", -.21, .57, -.3, .99, -.33, 1.65], ["c", -.03, .51, -.06, .57, -.24, .66], ["c", -.12, .06, -.27, .06, -.39, 0], ["c", -.21, -.09, -.21, -.15, -.24, -.75], ["c", -.09, -1.92, -.78, -3.72, -2.01, -5.19], ["c", -.18, -.21, -.36, -.42, -.39, -.45], ["l", -.09, -.06], ["l", 0, 7.11], ["l", 0, 7.14], ["l", -.06, .09], ["c", -.09, .06, -.09, .06, -.54, .06], ["c", -.48, 0, -.48, 0, -.57, -.06], ["l", -.06, -.09], ["l", 0, -14.82], ["l", 0, -14.85], ["z"]], w: 20.31, h: 29.97 }, "clefs.F": { d: [["M", 6.3, -7.8], ["c", .36, -.03, 1.65, 0, 2.13, .03], ["c", 3.6, .42, 6.03, 2.1, 6.93, 4.86], ["c", .27, .84, .36, 1.5, .36, 2.58], ["c", 0, .9, -.03, 1.35, -.18, 2.16], ["c", -.78, 3.78, -3.54, 7.08, -8.37, 9.96], ["c", -1.74, 1.05, -3.87, 2.13, -6.18, 3.12], ["c", -.39, .18, -.75, .33, -.81, .36], ["c", -.06, .03, -.15, .06, -.18, .06], ["c", -.15, 0, -.33, -.18, -.33, -.33], ["c", 0, -.15, .06, -.21, .51, -.48], ["c", 3, -1.77, 5.13, -3.21, 6.84, -4.74], ["c", .51, -.45, 1.59, -1.5, 1.95, -1.95], ["c", 1.89, -2.19, 2.88, -4.32, 3.15, -6.78], ["c", .06, -.42, .06, -1.77, 0, -2.19], ["c", -.24, -2.01, -.93, -3.63, -2.04, -4.71], ["c", -.63, -.63, -1.29, -1.02, -2.07, -1.2], ["c", -1.62, -.39, -3.36, .15, -4.56, 1.44], ["c", -.54, .6, -1.05, 1.47, -1.32, 2.22], ["l", -.09, .21], ["l", .24, -.12], ["c", .39, -.21, .63, -.24, 1.11, -.24], ["c", .3, 0, .45, 0, .66, .06], ["c", 1.92, .48, 2.85, 2.55, 1.95, 4.38], ["c", -.45, .99, -1.41, 1.62, -2.46, 1.71], ["c", -1.47, .09, -2.91, -.87, -3.39, -2.25], ["c", -.18, -.57, -.21, -1.32, -.03, -2.28], ["c", .39, -2.25, 1.83, -4.2, 3.81, -5.19], ["c", .69, -.36, 1.59, -.6, 2.37, -.69], ["z"], ["m", 11.58, 2.52], ["c", .84, -.21, 1.71, .3, 1.89, 1.14], ["c", .3, 1.17, -.72, 2.19, -1.89, 1.89], ["c", -.99, -.21, -1.5, -1.32, -1.02, -2.25], ["c", .18, -.39, .6, -.69, 1.02, -.78], ["z"], ["m", 0, 7.5], ["c", .84, -.21, 1.71, .3, 1.89, 1.14], ["c", .21, .87, -.3, 1.71, -1.14, 1.89], ["c", -.87, .21, -1.71, -.3, -1.89, -1.14], ["c", -.21, -.84, .3, -1.71, 1.14, -1.89], ["z"]], w: 20.153, h: 23.142 }, "clefs.G": { d: [["M", 9.69, -37.41], ["c", .09, -.09, .24, -.06, .36, 0], ["c", .12, .09, .57, .6, .96, 1.11], ["c", 1.77, 2.34, 3.21, 5.85, 3.57, 8.73], ["c", .21, 1.56, .03, 3.27, -.45, 4.86], ["c", -.69, 2.31, -1.92, 4.47, -4.23, 7.44], ["c", -.3, .39, -.57, .72, -.6, .75], ["c", -.03, .06, 0, .15, .18, .78], ["c", .54, 1.68, 1.38, 4.44, 1.68, 5.49], ["l", .09, .42], ["l", .39, 0], ["c", 1.47, .09, 2.76, .51, 3.96, 1.29], ["c", 1.83, 1.23, 3.06, 3.21, 3.39, 5.52], ["c", .09, .45, .12, 1.29, .06, 1.74], ["c", -.09, 1.02, -.33, 1.83, -.75, 2.73], ["c", -.84, 1.71, -2.28, 3.06, -4.02, 3.72], ["l", -.33, .12], ["l", .03, 1.26], ["c", 0, 1.74, -.06, 3.63, -.21, 4.62], ["c", -.45, 3.06, -2.19, 5.49, -4.47, 6.21], ["c", -.57, .18, -.9, .21, -1.59, .21], ["c", -.69, 0, -1.02, -.03, -1.65, -.21], ["c", -1.14, -.27, -2.13, -.84, -2.94, -1.65], ["c", -.99, -.99, -1.56, -2.16, -1.71, -3.54], ["c", -.09, -.81, .06, -1.53, .45, -2.13], ["c", .63, -.99, 1.83, -1.56, 3, -1.53], ["c", 1.5, .09, 2.64, 1.32, 2.73, 2.94], ["c", .06, 1.47, -.93, 2.7, -2.37, 2.97], ["c", -.45, .06, -.84, .03, -1.29, -.09], ["l", -.21, -.09], ["l", .09, .12], ["c", .39, .54, .78, .93, 1.32, 1.26], ["c", 1.35, .87, 3.06, 1.02, 4.35, .36], ["c", 1.44, -.72, 2.52, -2.28, 2.97, -4.35], ["c", .15, -.66, .24, -1.5, .3, -3.03], ["c", .03, -.84, .03, -2.94, 0, -3], ["c", -.03, 0, -.18, 0, -.36, .03], ["c", -.66, .12, -.99, .12, -1.83, .12], ["c", -1.05, 0, -1.71, -.06, -2.61, -.3], ["c", -4.02, -.99, -7.11, -4.35, -7.8, -8.46], ["c", -.12, -.66, -.12, -.99, -.12, -1.83], ["c", 0, -.84, 0, -1.14, .15, -1.92], ["c", .36, -2.28, 1.41, -4.62, 3.3, -7.29], ["l", 2.79, -3.6], ["c", .54, -.66, .96, -1.2, .96, -1.23], ["c", 0, -.03, -.09, -.33, -.18, -.69], ["c", -.96, -3.21, -1.41, -5.28, -1.59, -7.68], ["c", -.12, -1.38, -.15, -3.09, -.06, -3.96], ["c", .33, -2.67, 1.38, -5.07, 3.12, -7.08], ["c", .36, -.42, .99, -1.05, 1.17, -1.14], ["z"], ["m", 2.01, 4.71], ["c", -.15, -.3, -.3, -.54, -.3, -.54], ["c", -.03, 0, -.18, .09, -.3, .21], ["c", -2.4, 1.74, -3.87, 4.2, -4.26, 7.11], ["c", -.06, .54, -.06, 1.41, -.03, 1.89], ["c", .09, 1.29, .48, 3.12, 1.08, 5.22], ["c", .15, .42, .24, .78, .24, .81], ["c", 0, .03, .84, -1.11, 1.23, -1.68], ["c", 1.89, -2.73, 2.88, -5.07, 3.15, -7.53], ["c", .09, -.57, .12, -1.74, .06, -2.37], ["c", -.09, -1.23, -.27, -1.92, -.87, -3.12], ["z"], ["m", -2.94, 20.7], ["c", -.21, -.72, -.39, -1.32, -.42, -1.32], ["c", 0, 0, -1.2, 1.47, -1.86, 2.37], ["c", -2.79, 3.63, -4.02, 6.3, -4.35, 9.3], ["c", -.03, .21, -.03, .69, -.03, 1.08], ["c", 0, .69, 0, .75, .06, 1.11], ["c", .12, .54, .27, .99, .51, 1.47], ["c", .69, 1.38, 1.83, 2.55, 3.42, 3.42], ["c", .96, .54, 2.07, .9, 3.21, 1.08], ["c", .78, .12, 2.04, .12, 2.94, -.03], ["c", .51, -.06, .45, -.03, .42, -.3], ["c", -.24, -3.33, -.72, -6.33, -1.62, -10.08], ["c", -.09, -.39, -.18, -.75, -.18, -.78], ["c", -.03, -.03, -.42, 0, -.81, .09], ["c", -.9, .18, -1.65, .57, -2.22, 1.14], ["c", -.72, .72, -1.08, 1.65, -1.05, 2.64], ["c", .06, .96, .48, 1.83, 1.23, 2.58], ["c", .36, .36, .72, .63, 1.17, .9], ["c", .33, .18, .36, .21, .42, .33], ["c", .18, .42, -.18, .9, -.6, .87], ["c", -.18, -.03, -.84, -.36, -1.26, -.63], ["c", -.78, -.51, -1.38, -1.11, -1.86, -1.83], ["c", -1.77, -2.7, -.99, -6.42, 1.71, -8.19], ["c", .3, -.21, .81, -.48, 1.17, -.63], ["c", .3, -.09, 1.02, -.3, 1.14, -.3], ["c", .06, 0, .09, 0, .09, -.03], ["c", .03, -.03, -.51, -1.92, -1.23, -4.26], ["z"], ["m", 3.78, 7.41], ["c", -.18, -.03, -.36, -.06, -.39, -.06], ["c", -.03, 0, 0, .21, .18, 1.02], ["c", .75, 3.18, 1.26, 6.3, 1.5, 9.09], ["c", .06, .72, 0, .69, .51, .42], ["c", .78, -.36, 1.44, -.96, 1.98, -1.77], ["c", 1.08, -1.62, 1.2, -3.69, .3, -5.55], ["c", -.81, -1.62, -2.31, -2.79, -4.08, -3.15], ["z"]], w: 19.051, h: 57.057 }, "clefs.perc": { d: [["M", 5.07, -7.44], ["l", .09, -.06], ["l", 1.53, 0], ["l", 1.53, 0], ["l", .09, .06], ["l", .06, .09], ["l", 0, 7.35], ["l", 0, 7.32], ["l", -.06, .09], ["l", -.09, .06], ["l", -1.53, 0], ["l", -1.53, 0], ["l", -.09, -.06], ["l", -.06, -.09], ["l", 0, -7.32], ["l", 0, -7.35], ["z"], ["m", 6.63, 0], ["l", .09, -.06], ["l", 1.53, 0], ["l", 1.53, 0], ["l", .09, .06], ["l", .06, .09], ["l", 0, 7.35], ["l", 0, 7.32], ["l", -.06, .09], ["l", -.09, .06], ["l", -1.53, 0], ["l", -1.53, 0], ["l", -.09, -.06], ["l", -.06, -.09], ["l", 0, -7.32], ["l", 0, -7.35], ["z"]], w: 21, h: 14.97 }, "timesig.common": { d: [["M", 6.66, -7.83], ["c", .72, -.06, 1.41, -.03, 1.98, .09], ["c", 1.2, .27, 2.34, .96, 3.09, 1.92], ["c", .63, .81, 1.08, 1.86, 1.14, 2.73], ["c", .06, 1.02, -.51, 1.92, -1.44, 2.22], ["c", -.24, .09, -.3, .09, -.63, .09], ["c", -.33, 0, -.42, 0, -.63, -.06], ["c", -.66, -.24, -1.14, -.63, -1.41, -1.2], ["c", -.15, -.3, -.21, -.51, -.24, -.9], ["c", -.06, -1.08, .57, -2.04, 1.56, -2.37], ["c", .18, -.06, .27, -.06, .63, -.06], ["l", .45, 0], ["c", .06, .03, .09, .03, .09, 0], ["c", 0, 0, -.09, -.12, -.24, -.27], ["c", -1.02, -1.11, -2.55, -1.68, -4.08, -1.5], ["c", -1.29, .15, -2.04, .69, -2.4, 1.74], ["c", -.36, .93, -.42, 1.89, -.42, 5.37], ["c", 0, 2.97, .06, 3.96, .24, 4.77], ["c", .24, 1.08, .63, 1.68, 1.41, 2.07], ["c", .81, .39, 2.16, .45, 3.18, .09], ["c", 1.29, -.45, 2.37, -1.53, 3.03, -2.97], ["c", .15, -.33, .33, -.87, .39, -1.17], ["c", .09, -.24, .15, -.36, .3, -.39], ["c", .21, -.03, .42, .15, .39, .36], ["c", -.06, .39, -.42, 1.38, -.69, 1.89], ["c", -.96, 1.8, -2.49, 2.94, -4.23, 3.18], ["c", -.99, .12, -2.58, -.06, -3.63, -.45], ["c", -.96, -.36, -1.71, -.84, -2.4, -1.5], ["c", -1.11, -1.11, -1.8, -2.61, -2.04, -4.56], ["c", -.06, -.6, -.06, -2.01, 0, -2.61], ["c", .24, -1.95, .9, -3.45, 2.01, -4.56], ["c", .69, -.66, 1.44, -1.11, 2.37, -1.47], ["c", .63, -.24, 1.47, -.42, 2.22, -.48], ["z"]], w: 13.038, h: 15.689 }, "timesig.cut": { d: [["M", 6.24, -10.44], ["c", .09, -.06, .09, -.06, .48, -.06], ["c", .36, 0, .36, 0, .45, .06], ["l", .06, .09], ["l", 0, 1.23], ["l", 0, 1.26], ["l", .27, 0], ["c", 1.26, 0, 2.49, .45, 3.48, 1.29], ["c", 1.05, .87, 1.8, 2.28, 1.89, 3.48], ["c", .06, 1.02, -.51, 1.92, -1.44, 2.22], ["c", -.24, .09, -.3, .09, -.63, .09], ["c", -.33, 0, -.42, 0, -.63, -.06], ["c", -.66, -.24, -1.14, -.63, -1.41, -1.2], ["c", -.15, -.3, -.21, -.51, -.24, -.9], ["c", -.06, -1.08, .57, -2.04, 1.56, -2.37], ["c", .18, -.06, .27, -.06, .63, -.06], ["l", .45, 0], ["c", .06, .03, .09, .03, .09, 0], ["c", 0, -.03, -.45, -.51, -.66, -.69], ["c", -.87, -.69, -1.83, -1.05, -2.94, -1.11], ["l", -.42, 0], ["l", 0, 7.17], ["l", 0, 7.14], ["l", .42, 0], ["c", .69, -.03, 1.23, -.18, 1.86, -.51], ["c", 1.05, -.51, 1.89, -1.47, 2.46, -2.7], ["c", .15, -.33, .33, -.87, .39, -1.17], ["c", .09, -.24, .15, -.36, .3, -.39], ["c", .21, -.03, .42, .15, .39, .36], ["c", -.03, .24, -.21, .78, -.39, 1.2], ["c", -.96, 2.37, -2.94, 3.9, -5.13, 3.9], ["l", -.3, 0], ["l", 0, 1.26], ["l", 0, 1.23], ["l", -.06, .09], ["c", -.09, .06, -.09, .06, -.45, .06], ["c", -.39, 0, -.39, 0, -.48, -.06], ["l", -.06, -.09], ["l", 0, -1.29], ["l", 0, -1.29], ["l", -.21, -.03], ["c", -1.23, -.21, -2.31, -.63, -3.21, -1.29], ["c", -.15, -.09, -.45, -.36, -.66, -.57], ["c", -1.11, -1.11, -1.8, -2.61, -2.04, -4.56], ["c", -.06, -.6, -.06, -2.01, 0, -2.61], ["c", .24, -1.95, .93, -3.45, 2.04, -4.59], ["c", .42, -.39, .78, -.66, 1.26, -.93], ["c", .75, -.45, 1.65, -.75, 2.61, -.9], ["l", .21, -.03], ["l", 0, -1.29], ["l", 0, -1.29], ["z"], ["m", -.06, 10.44], ["c", 0, -5.58, 0, -6.99, -.03, -6.99], ["c", -.15, 0, -.63, .27, -.87, .45], ["c", -.45, .36, -.75, .93, -.93, 1.77], ["c", -.18, .81, -.24, 1.8, -.24, 4.74], ["c", 0, 2.97, .06, 3.96, .24, 4.77], ["c", .24, 1.08, .66, 1.68, 1.41, 2.07], ["c", .12, .06, .3, .12, .33, .15], ["l", .09, 0], ["l", 0, -6.96], ["z"]], w: 13.038, h: 20.97 }, "timesig.imperfectum": { d: [["M", 13, -5], ["a", 8, 8, 0, 1, 0, 0, 10]], w: 13.038, h: 20.97 }, "timesig.imperfectum2": { d: [["M", 13, -5], ["a", 8, 8, 0, 1, 0, 0, 10]], w: 13.038, h: 20.97 }, "timesig.perfectum": { d: [["M", 13, -5], ["a", 8, 8, 0, 1, 0, 0, 10]], w: 13.038, h: 20.97 }, "timesig.perfectum2": { d: [["M", 13, -5], ["a", 8, 8, 0, 1, 0, 0, 10]], w: 13.038, h: 20.97 }, f: { d: [["M", 9.93, -14.28], ["c", 1.53, -.18, 2.88, .45, 3.12, 1.5], ["c", .12, .51, 0, 1.32, -.27, 1.86], ["c", -.15, .3, -.42, .57, -.63, .69], ["c", -.69, .36, -1.56, .03, -1.83, -.69], ["c", -.09, -.24, -.09, -.69, 0, -.87], ["c", .06, -.12, .21, -.24, .45, -.42], ["c", .42, -.24, .57, -.45, .6, -.72], ["c", .03, -.33, -.09, -.39, -.63, -.42], ["c", -.3, 0, -.45, 0, -.6, .03], ["c", -.81, .21, -1.35, .93, -1.74, 2.46], ["c", -.06, .27, -.48, 2.25, -.48, 2.31], ["c", 0, .03, .39, .03, .9, .03], ["c", .72, 0, .9, 0, .99, .06], ["c", .42, .15, .45, .72, .03, .9], ["c", -.12, .06, -.24, .06, -1.17, .06], ["l", -1.05, 0], ["l", -.78, 2.55], ["c", -.45, 1.41, -.87, 2.79, -.96, 3.06], ["c", -.87, 2.37, -2.37, 4.74, -3.78, 5.91], ["c", -1.05, .9, -2.04, 1.23, -3.09, 1.08], ["c", -1.11, -.18, -1.89, -.78, -2.04, -1.59], ["c", -.12, -.66, .15, -1.71, .54, -2.19], ["c", .69, -.75, 1.86, -.54, 2.22, .39], ["c", .06, .15, .09, .27, .09, .48], ["c", 0, .24, -.03, .27, -.12, .42], ["c", -.03, .09, -.15, .18, -.27, .27], ["c", -.09, .06, -.27, .21, -.36, .27], ["c", -.24, .18, -.36, .36, -.39, .6], ["c", -.03, .33, .09, .39, .63, .42], ["c", .42, 0, .63, -.03, .9, -.15], ["c", .6, -.3, .96, -.96, 1.38, -2.64], ["c", .09, -.42, .63, -2.55, 1.17, -4.77], ["l", 1.02, -4.08], ["c", 0, -.03, -.36, -.03, -.81, -.03], ["c", -.72, 0, -.81, 0, -.93, -.06], ["c", -.42, -.18, -.39, -.75, .03, -.9], ["c", .09, -.06, .27, -.06, 1.05, -.06], ["l", .96, 0], ["l", 0, -.09], ["c", .06, -.18, .3, -.72, .51, -1.17], ["c", 1.2, -2.46, 3.3, -4.23, 5.34, -4.5], ["z"]], w: 16.155, h: 19.445 }, m: { d: [["M", 2.79, -8.91], ["c", .09, 0, .3, -.03, .45, -.03], ["c", .24, .03, .3, .03, .45, .12], ["c", .36, .15, .63, .54, .75, 1.02], ["l", .03, .21], ["l", .33, -.3], ["c", .69, -.69, 1.38, -1.02, 2.07, -1.02], ["c", .27, 0, .33, 0, .48, .06], ["c", .21, .09, .48, .36, .63, .6], ["c", .03, .09, .12, .27, .18, .42], ["c", .03, .15, .09, .27, .12, .27], ["c", 0, 0, .09, -.09, .18, -.21], ["c", .33, -.39, .87, -.81, 1.29, -.99], ["c", .78, -.33, 1.47, -.21, 2.01, .33], ["c", .3, .33, .48, .69, .6, 1.14], ["c", .09, .42, .06, .54, -.54, 3.06], ["c", -.33, 1.29, -.57, 2.4, -.57, 2.43], ["c", 0, .12, .09, .21, .21, .21], ["c", .24, 0, .75, -.3, 1.2, -.72], ["c", .45, -.39, .6, -.45, .78, -.27], ["c", .18, .18, .09, .36, -.45, .87], ["c", -1.05, .96, -1.83, 1.47, -2.58, 1.71], ["c", -.93, .33, -1.53, .21, -1.8, -.33], ["c", -.06, -.15, -.06, -.21, -.06, -.45], ["c", 0, -.24, .03, -.48, .6, -2.82], ["c", .42, -1.71, .6, -2.64, .63, -2.79], ["c", .03, -.57, -.3, -.75, -.84, -.48], ["c", -.24, .12, -.54, .39, -.66, .63], ["c", -.03, .09, -.42, 1.38, -.9, 3], ["c", -.9, 3.15, -.84, 3, -1.14, 3.15], ["l", -.15, .09], ["l", -.78, 0], ["c", -.6, 0, -.78, 0, -.84, -.06], ["c", -.09, -.03, -.18, -.18, -.18, -.27], ["c", 0, -.03, .36, -1.38, .84, -2.97], ["c", .57, -2.04, .81, -2.97, .84, -3.12], ["c", .03, -.54, -.3, -.72, -.84, -.45], ["c", -.24, .12, -.57, .42, -.66, .63], ["c", -.06, .09, -.51, 1.44, -1.05, 2.97], ["c", -.51, 1.56, -.99, 2.85, -.99, 2.91], ["c", -.06, .12, -.21, .24, -.36, .3], ["c", -.12, .06, -.21, .06, -.9, .06], ["c", -.6, 0, -.78, 0, -.84, -.06], ["c", -.09, -.03, -.18, -.18, -.18, -.27], ["c", 0, -.03, .45, -1.38, .99, -2.97], ["c", 1.05, -3.18, 1.05, -3.18, .93, -3.45], ["c", -.12, -.27, -.39, -.3, -.72, -.15], ["c", -.54, .27, -1.14, 1.17, -1.56, 2.4], ["c", -.06, .15, -.15, .3, -.18, .36], ["c", -.21, .21, -.57, .27, -.72, .09], ["c", -.09, -.09, -.06, -.21, .06, -.63], ["c", .48, -1.26, 1.26, -2.46, 2.01, -3.21], ["c", .57, -.54, 1.2, -.87, 1.83, -1.02], ["z"]], w: 14.687, h: 9.126 }, p: { d: [["M", 1.92, -8.7], ["c", .27, -.09, .81, -.06, 1.11, .03], ["c", .54, .18, .93, .51, 1.17, .99], ["c", .09, .15, .15, .33, .18, .36], ["l", 0, .12], ["l", .3, -.27], ["c", .66, -.6, 1.35, -1.02, 2.13, -1.2], ["c", .21, -.06, .33, -.06, .78, -.06], ["c", .45, 0, .51, 0, .84, .09], ["c", 1.29, .33, 2.07, 1.32, 2.25, 2.79], ["c", .09, .81, -.09, 2.01, -.45, 2.79], ["c", -.54, 1.26, -1.86, 2.55, -3.18, 3.03], ["c", -.45, .18, -.81, .24, -1.29, .24], ["c", -.69, -.03, -1.35, -.18, -1.86, -.45], ["c", -.3, -.15, -.51, -.18, -.69, -.09], ["c", -.09, .03, -.18, .09, -.18, .12], ["c", -.09, .12, -1.05, 2.94, -1.05, 3.06], ["c", 0, .24, .18, .48, .51, .63], ["c", .18, .06, .54, .15, .75, .15], ["c", .21, 0, .36, .06, .42, .18], ["c", .12, .18, .06, .42, -.12, .54], ["c", -.09, .03, -.15, .03, -.78, 0], ["c", -1.98, -.15, -3.81, -.15, -5.79, 0], ["c", -.63, .03, -.69, .03, -.78, 0], ["c", -.24, -.15, -.24, -.57, .03, -.66], ["c", .06, -.03, .48, -.09, .99, -.12], ["c", .87, -.06, 1.11, -.09, 1.35, -.21], ["c", .18, -.06, .33, -.18, .39, -.3], ["c", .06, -.12, 3.24, -9.42, 3.27, -9.6], ["c", .06, -.33, .03, -.57, -.15, -.69], ["c", -.09, -.06, -.12, -.06, -.3, -.06], ["c", -.69, .06, -1.53, 1.02, -2.28, 2.61], ["c", -.09, .21, -.21, .45, -.27, .51], ["c", -.09, .12, -.33, .24, -.48, .24], ["c", -.18, 0, -.36, -.15, -.36, -.3], ["c", 0, -.24, .78, -1.83, 1.26, -2.55], ["c", .72, -1.11, 1.47, -1.74, 2.28, -1.92], ["z"], ["m", 5.37, 1.47], ["c", -.27, -.12, -.75, -.03, -1.14, .21], ["c", -.75, .48, -1.47, 1.68, -1.89, 3.15], ["c", -.45, 1.47, -.42, 2.34, 0, 2.7], ["c", .45, .39, 1.26, .21, 1.83, -.36], ["c", .51, -.51, .99, -1.68, 1.38, -3.27], ["c", .3, -1.17, .33, -1.74, .15, -2.13], ["c", -.09, -.15, -.15, -.21, -.33, -.3], ["z"]], w: 14.689, h: 13.127 }, r: { d: [["M", 6.33, -9.12], ["c", .27, -.03, .93, 0, 1.2, .06], ["c", .84, .21, 1.23, .81, 1.02, 1.53], ["c", -.24, .75, -.9, 1.17, -1.56, .96], ["c", -.33, -.09, -.51, -.3, -.66, -.75], ["c", -.03, -.12, -.09, -.24, -.12, -.3], ["c", -.09, -.15, -.3, -.24, -.48, -.24], ["c", -.57, 0, -1.38, .54, -1.65, 1.08], ["c", -.06, .15, -.33, 1.17, -.9, 3.27], ["c", -.57, 2.31, -.81, 3.12, -.87, 3.21], ["c", -.03, .06, -.12, .15, -.18, .21], ["l", -.12, .06], ["l", -.81, .03], ["c", -.69, 0, -.81, 0, -.9, -.03], ["c", -.09, -.06, -.18, -.21, -.18, -.3], ["c", 0, -.06, .39, -1.62, .9, -3.51], ["c", .84, -3.24, .87, -3.45, .87, -3.72], ["c", 0, -.21, 0, -.27, -.03, -.36], ["c", -.12, -.15, -.21, -.24, -.42, -.24], ["c", -.24, 0, -.45, .15, -.78, .42], ["c", -.33, .36, -.45, .54, -.72, 1.14], ["c", -.03, .12, -.21, .24, -.36, .27], ["c", -.12, 0, -.15, 0, -.24, -.06], ["c", -.18, -.12, -.18, -.21, -.06, -.54], ["c", .21, -.57, .42, -.93, .78, -1.32], ["c", .54, -.51, 1.2, -.81, 1.95, -.87], ["c", .81, -.03, 1.53, .3, 1.92, .87], ["l", .12, .18], ["l", .09, -.09], ["c", .57, -.45, 1.41, -.84, 2.19, -.96], ["z"]], w: 9.41, h: 9.132 }, s: { d: [["M", 4.47, -8.73], ["c", .09, 0, .36, -.03, .57, -.03], ["c", .75, .03, 1.29, .24, 1.71, .63], ["c", .51, .54, .66, 1.26, .36, 1.83], ["c", -.24, .42, -.63, .57, -1.11, .42], ["c", -.33, -.09, -.6, -.36, -.6, -.57], ["c", 0, -.03, .06, -.21, .15, -.39], ["c", .12, -.21, .15, -.33, .18, -.48], ["c", 0, -.24, -.06, -.48, -.15, -.6], ["c", -.15, -.21, -.42, -.24, -.75, -.15], ["c", -.27, .06, -.48, .18, -.69, .36], ["c", -.39, .39, -.51, .96, -.33, 1.38], ["c", .09, .21, .42, .51, .78, .72], ["c", 1.11, .69, 1.59, 1.11, 1.89, 1.68], ["c", .21, .39, .24, .78, .15, 1.29], ["c", -.18, 1.2, -1.17, 2.16, -2.52, 2.52], ["c", -1.02, .24, -1.95, .12, -2.7, -.42], ["c", -.72, -.51, -.99, -1.47, -.6, -2.19], ["c", .24, -.48, .72, -.63, 1.17, -.42], ["c", .33, .18, .54, .45, .57, .81], ["c", 0, .21, -.03, .3, -.33, .51], ["c", -.33, .24, -.39, .42, -.27, .69], ["c", .06, .15, .21, .27, .45, .33], ["c", .3, .09, .87, .09, 1.2, 0], ["c", .75, -.21, 1.23, -.72, 1.29, -1.35], ["c", .03, -.42, -.15, -.81, -.54, -1.2], ["c", -.24, -.24, -.48, -.42, -1.41, -1.02], ["c", -.69, -.42, -1.05, -.93, -1.05, -1.47], ["c", 0, -.39, .12, -.87, .3, -1.23], ["c", .27, -.57, .78, -1.05, 1.38, -1.35], ["c", .24, -.12, .63, -.27, .9, -.3], ["z"]], w: 6.632, h: 8.758 }, z: { d: [["M", 2.64, -7.95], ["c", .36, -.09, .81, -.03, 1.71, .27], ["c", .78, .21, .96, .27, 1.74, .3], ["c", .87, .06, 1.02, .03, 1.38, -.21], ["c", .21, -.15, .33, -.15, .48, -.06], ["c", .15, .09, .21, .3, .15, .45], ["c", -.03, .06, -1.26, 1.26, -2.76, 2.67], ["l", -2.73, 2.55], ["l", .54, .03], ["c", .54, .03, .72, .03, 2.01, .15], ["c", .36, .03, .9, .06, 1.2, .09], ["c", .66, 0, .81, -.03, 1.02, -.24], ["c", .3, -.3, .39, -.72, .27, -1.23], ["c", -.06, -.27, -.06, -.27, -.03, -.39], ["c", .15, -.3, .54, -.27, .69, .03], ["c", .15, .33, .27, 1.02, .27, 1.5], ["c", 0, 1.47, -1.11, 2.7, -2.52, 2.79], ["c", -.57, .03, -1.02, -.09, -2.01, -.51], ["c", -1.02, -.42, -1.23, -.48, -2.13, -.54], ["c", -.81, -.06, -.96, -.03, -1.26, .18], ["c", -.12, .06, -.24, .12, -.27, .12], ["c", -.27, 0, -.45, -.3, -.36, -.51], ["c", .03, -.06, 1.32, -1.32, 2.91, -2.79], ["l", 2.88, -2.73], ["c", -.03, 0, -.21, .03, -.42, .06], ["c", -.21, .03, -.78, .09, -1.23, .12], ["c", -1.11, .12, -1.23, .15, -1.95, .27], ["c", -.72, .15, -1.17, .18, -1.29, .09], ["c", -.27, -.18, -.21, -.75, .12, -1.26], ["c", .39, -.6, .93, -1.02, 1.59, -1.2], ["z"]], w: 8.573, h: 8.743 }, "+": { d: [["M", 3.48, -9.3], ["c", .18, -.09, .36, -.09, .54, 0], ["c", .18, .09, .24, .15, .33, .3], ["l", .06, .15], ["l", 0, 1.29], ["l", 0, 1.29], ["l", 1.29, 0], ["c", 1.23, 0, 1.29, 0, 1.41, .06], ["c", .06, .03, .15, .09, .18, .12], ["c", .12, .09, .21, .33, .21, .48], ["c", 0, .15, -.09, .39, -.21, .48], ["c", -.03, .03, -.12, .09, -.18, .12], ["c", -.12, .06, -.18, .06, -1.41, .06], ["l", -1.29, 0], ["l", 0, 1.29], ["c", 0, 1.23, 0, 1.29, -.06, 1.41], ["c", -.09, .18, -.15, .24, -.3, .33], ["c", -.21, .09, -.39, .09, -.57, 0], ["c", -.18, -.09, -.24, -.15, -.33, -.33], ["c", -.06, -.12, -.06, -.18, -.06, -1.41], ["l", 0, -1.29], ["l", -1.29, 0], ["c", -1.23, 0, -1.29, 0, -1.41, -.06], ["c", -.18, -.09, -.24, -.15, -.33, -.33], ["c", -.09, -.18, -.09, -.36, 0, -.54], ["c", .09, -.18, .15, -.24, .33, -.33], ["l", .15, -.06], ["l", 1.26, 0], ["l", 1.29, 0], ["l", 0, -1.29], ["c", 0, -1.23, 0, -1.29, .06, -1.41], ["c", .09, -.18, .15, -.24, .33, -.33], ["z"]], w: 7.507, h: 7.515 }, ",": { d: [["M", 1.32, -3.36], ["c", .57, -.15, 1.17, .03, 1.59, .45], ["c", .45, .45, .6, .96, .51, 1.89], ["c", -.09, 1.23, -.42, 2.46, -.99, 3.93], ["c", -.3, .72, -.72, 1.62, -.78, 1.68], ["c", -.18, .21, -.51, .18, -.66, -.06], ["c", -.03, -.06, -.06, -.15, -.06, -.18], ["c", 0, -.06, .12, -.33, .24, -.63], ["c", .84, -1.8, 1.02, -2.61, .69, -3.24], ["c", -.12, -.24, -.27, -.36, -.75, -.6], ["c", -.36, -.15, -.42, -.21, -.6, -.39], ["c", -.69, -.69, -.69, -1.71, 0, -2.4], ["c", .21, -.21, .51, -.39, .81, -.45], ["z"]], w: 3.452, h: 8.143 }, "-": { d: [["M", .18, -5.34], ["c", .09, -.06, .15, -.06, 2.31, -.06], ["c", 2.46, 0, 2.37, 0, 2.46, .21], ["c", .12, .21, .03, .42, -.15, .54], ["c", -.09, .06, -.15, .06, -2.28, .06], ["c", -2.16, 0, -2.22, 0, -2.31, -.06], ["c", -.27, -.15, -.27, -.54, -.03, -.69], ["z"]], w: 5.001, h: .81 }, ".": { d: [["M", 1.32, -3.36], ["c", 1.05, -.27, 2.1, .57, 2.1, 1.65], ["c", 0, 1.08, -1.05, 1.92, -2.1, 1.65], ["c", -.9, -.21, -1.5, -1.14, -1.26, -2.04], ["c", .12, -.63, .63, -1.11, 1.26, -1.26], ["z"]], w: 3.413, h: 3.402 }, "scripts.wedge": { d: [["M", -3.66, -7.44], ["c", .06, -.09, 0, -.09, .81, .03], ["c", 1.86, .3, 3.84, .3, 5.73, 0], ["c", .78, -.12, .72, -.12, .78, -.03], ["c", .15, .15, .12, .24, -.24, .6], ["c", -.93, .93, -1.98, 2.76, -2.67, 4.62], ["c", -.3, .78, -.51, 1.71, -.51, 2.13], ["c", 0, .15, 0, .18, -.06, .27], ["c", -.12, .09, -.24, .09, -.36, 0], ["c", -.06, -.09, -.06, -.12, -.06, -.27], ["c", 0, -.42, -.21, -1.35, -.51, -2.13], ["c", -.69, -1.86, -1.74, -3.69, -2.67, -4.62], ["c", -.36, -.36, -.39, -.45, -.24, -.6], ["z"]], w: 7.49, h: 7.752 }, "scripts.thumb": { d: [["M", -.54, -3.69], ["c", .15, -.03, .36, -.06, .51, -.06], ["c", 1.44, 0, 2.58, 1.11, 2.94, 2.85], ["c", .09, .48, .09, 1.32, 0, 1.8], ["c", -.27, 1.41, -1.08, 2.43, -2.16, 2.73], ["l", -.18, .06], ["l", 0, .12], ["c", .03, .06, .06, .45, .09, .87], ["c", .03, .57, .03, .78, 0, .84], ["c", -.09, .27, -.39, .48, -.66, .48], ["c", -.27, 0, -.57, -.21, -.66, -.48], ["c", -.03, -.06, -.03, -.27, 0, -.84], ["c", .03, -.42, .06, -.81, .09, -.87], ["l", 0, -.12], ["l", -.18, -.06], ["c", -1.08, -.3, -1.89, -1.32, -2.16, -2.73], ["c", -.09, -.48, -.09, -1.32, 0, -1.8], ["c", .15, -.84, .51, -1.53, 1.02, -2.04], ["c", .39, -.39, .84, -.63, 1.35, -.75], ["z"], ["m", 1.05, .9], ["c", -.15, -.09, -.21, -.09, -.45, -.12], ["c", -.15, 0, -.3, .03, -.39, .03], ["c", -.57, .18, -.9, .72, -1.08, 1.74], ["c", -.06, .48, -.06, 1.8, 0, 2.28], ["c", .15, .9, .42, 1.44, .9, 1.65], ["c", .18, .09, .21, .09, .51, .09], ["c", .3, 0, .33, 0, .51, -.09], ["c", .48, -.21, .75, -.75, .9, -1.65], ["c", .03, -.27, .03, -.54, .03, -1.14], ["c", 0, -.6, 0, -.87, -.03, -1.14], ["c", -.15, -.9, -.45, -1.44, -.9, -1.65], ["z"]], w: 5.955, h: 9.75 }, "scripts.open": { d: [["M", -.54, -3.69], ["c", .15, -.03, .36, -.06, .51, -.06], ["c", 1.44, 0, 2.58, 1.11, 2.94, 2.85], ["c", .09, .48, .09, 1.32, 0, 1.8], ["c", -.33, 1.74, -1.47, 2.85, -2.91, 2.85], ["c", -1.44, 0, -2.58, -1.11, -2.91, -2.85], ["c", -.09, -.48, -.09, -1.32, 0, -1.8], ["c", .15, -.84, .51, -1.53, 1.02, -2.04], ["c", .39, -.39, .84, -.63, 1.35, -.75], ["z"], ["m", 1.11, .9], ["c", -.21, -.09, -.27, -.09, -.51, -.12], ["c", -.3, 0, -.42, .03, -.66, .15], ["c", -.24, .12, -.51, .39, -.66, .63], ["c", -.54, .93, -.63, 2.64, -.21, 3.81], ["c", .21, .54, .51, .9, .93, 1.11], ["c", .21, .09, .24, .09, .54, .09], ["c", .3, 0, .33, 0, .54, -.09], ["c", .42, -.21, .72, -.57, .93, -1.11], ["c", .36, -.99, .36, -2.37, 0, -3.36], ["c", -.21, -.54, -.51, -.9, -.9, -1.11], ["z"]], w: 5.955, h: 7.5 }, "scripts.longphrase": { d: [["M", 1.47, -15.09], ["c", .36, -.09, .66, -.18, .69, -.18], ["c", .06, 0, .06, .54, .06, 11.25], ["l", 0, 11.25], ["l", -.63, .15], ["c", -.66, .18, -1.44, .39, -1.5, .39], ["c", -.03, 0, -.03, -3.39, -.03, -11.25], ["l", 0, -11.25], ["l", .36, -.09], ["c", .21, -.06, .66, -.18, 1.05, -.27], ["z"]], w: 2.16, h: 23.04 }, "scripts.mediumphrase": { d: [["M", 1.47, -7.59], ["c", .36, -.09, .66, -.18, .69, -.18], ["c", .06, 0, .06, .39, .06, 7.5], ["l", 0, 7.5], ["l", -.63, .15], ["c", -.66, .18, -1.44, .39, -1.5, .39], ["c", -.03, 0, -.03, -2.28, -.03, -7.5], ["l", 0, -7.5], ["l", .36, -.09], ["c", .21, -.06, .66, -.18, 1.05, -.27], ["z"]], w: 2.16, h: 15.54 }, "scripts.shortphrase": { d: [["M", 1.47, -7.59], ["c", .36, -.09, .66, -.18, .69, -.18], ["c", .06, 0, .06, .21, .06, 3.75], ["l", 0, 3.75], ["l", -.42, .09], ["c", -.57, .18, -1.65, .45, -1.71, .45], ["c", -.03, 0, -.03, -.72, -.03, -3.75], ["l", 0, -3.75], ["l", .36, -.09], ["c", .21, -.06, .66, -.18, 1.05, -.27], ["z"]], w: 2.16, h: 8.04 }, "scripts.snap": { d: [["M", 4.5, -3.39], ["c", .36, -.03, .96, -.03, 1.35, 0], ["c", 1.56, .15, 3.15, .9, 4.2, 2.01], ["c", .24, .27, .33, .42, .33, .6], ["c", 0, .27, .03, .24, -2.46, 2.22], ["c", -1.29, 1.02, -2.4, 1.86, -2.49, 1.92], ["c", -.18, .09, -.3, .09, -.48, 0], ["c", -.09, -.06, -1.2, -.9, -2.49, -1.92], ["c", -2.49, -1.98, -2.46, -1.95, -2.46, -2.22], ["c", 0, -.18, .09, -.33, .33, -.6], ["c", 1.05, -1.08, 2.64, -1.86, 4.17, -2.01], ["z"], ["m", 1.29, 1.17], ["c", -1.47, -.15, -2.97, .3, -4.14, 1.2], ["l", -.18, .15], ["l", .06, .09], ["c", .15, .12, 3.63, 2.85, 3.66, 2.85], ["c", .03, 0, 3.51, -2.73, 3.66, -2.85], ["l", .06, -.09], ["l", -.18, -.15], ["c", -.84, -.66, -1.89, -1.08, -2.94, -1.2], ["z"]], w: 10.38, h: 6.84 }, "noteheads.slash.whole": { d: [["M", 5, -5], ["l", 1, 1], ["l", -5, 5], ["l", -1, -1], ["z"], ["m", 4, 6], ["l", -5, -5], ["l", 2, -2], ["l", 5, 5], ["z"], ["m", 0, -2], ["l", 1, 1], ["l", -5, 5], ["l", -1, -1], ["z"], ["m", -4, 6], ["l", -5, -5], ["l", 2, -2], ["l", 5, 5], ["z"]], w: 10.81, h: 15.63 }, "noteheads.slash.quarter": { d: [["M", 9, -6], ["l", 0, 4], ["l", -9, 9], ["l", 0, -4], ["z"]], w: 9, h: 9 }, "noteheads.harmonic.quarter": { d: [["M", 3.63, -4.02], ["c", .09, -.06, .18, -.09, .24, -.03], ["c", .03, .03, .87, .93, 1.83, 2.01], ["c", 1.5, 1.65, 1.8, 1.98, 1.8, 2.04], ["c", 0, .06, -.3, .39, -1.8, 2.04], ["c", -.96, 1.08, -1.8, 1.98, -1.83, 2.01], ["c", -.06, .06, -.15, .03, -.24, -.03], ["c", -.12, -.09, -3.54, -3.84, -3.6, -3.93], ["c", -.03, -.03, -.03, -.09, -.03, -.15], ["c", .03, -.06, 3.45, -3.84, 3.63, -3.96], ["z"]], w: 7.5, h: 8.165 }, "noteheads.triangle.quarter": { d: [["M", 0, 0], ["l", 9, 0], ["l", -4.5, -9], ["z"]], w: 9, h: 9 } }, c = function (e) { for (var t = [], i = 0, r = e.length; i < r; i++) { t[i] = []; for (var n = 0, o = e[i].length; n < o; n++)t[i][n] = e[i][n] } return t }, l = { printSymbol: function (e, t, r, n, l, h, d) { if (!o[r]) return null; var f = c(o[r].d); f[0][1] += e, f[0][2] += t; for (var path = "", i = 0; i < f.length; i++)path += f[i].join(" "); return n.path({ path: path, stroke: h, fill: d, class: l }) }, getPathForSymbol: function (e, t, r, n, l) { if (n = n || 1, l = l || 1, !o[r]) return null; var h = c(o[r].d); return 1 === n && 1 === l || function (e, t, r) { for (var i = 0, n = e.length; i < n; i++) { var o, c, p = e[i]; for (o = 1, c = p.length; o < c; o++)p[o] *= o % 2 ? t : r } }(h, n, l), h[0][1] += e, h[0][2] += t, h }, getSymbolWidth: function (symbol) { return o[symbol] ? o[symbol].w : 0 }, symbolHeightInPitches: function (symbol) { return (o[symbol] ? o[symbol].h : 0) / n.STEP }, getSymbolAlign: function (symbol) { return "scripts" === symbol.substring(0, 7) && "scripts.roll" !== symbol ? "center" : "left" }, getYCorr: function (symbol) { switch (symbol) { case "0": case "1": case "2": case "3": case "4": case "5": case "6": case "7": case "8": case "9": case "+": return -2; case "timesig.common": case "timesig.cut": return 0; case "flags.d32nd": return -1; case "flags.d64th": return -2; case "flags.u32nd": return 1; case "flags.u64th": return 3; case "rests.whole": return 1; case "rests.half": case "rests.8th": case "rests.quarter": case "rests.16th": case "rests.32nd": case "rests.64th": return -1; case "f": case "m": case "p": case "s": case "z": return -4; case "scripts.trill": case "scripts.upbow": case "scripts.downbow": return -2; case "scripts.ufermata": case "scripts.wedge": case "scripts.roll": case "scripts.shortphrase": case "scripts.longphrase": return -1; case "scripts.dfermata": return 1; default: return 0 } }, setSymbol: function (e, path) { o[e] = path } }; e.exports = l }, function (e, t, r) { const n = r(23); e.exports = function (e, t) { var r, o = t.y; if (t.lane) { var c = .25 * t.dim.font.size; o += (t.dim.font.size + c) * t.lane } t.dim ? (r = t.dim).attr.class = t.klass : r = e.controller.getFontAndAttr.calc(t.type, t.klass), t.anchor && (r.attr["text-anchor"] = t.anchor), r.attr.x = t.x, r.attr.y = o, t.centerVertically || (r.attr.y += r.font.size), "debugfont" === t.type && (console.log("Debug msg: " + t.text), r.attr.stroke = "#ff0000"); var text = t.text.replace(/\n\n/g, "\n \n"); text = text.replace(/^\n/, "Â \n"), r.font.box && (e.paper.openGroup({ klass: r.attr.class, fill: e.foregroundColor }), "end" === r.attr["text-anchor"] ? r.attr.x -= r.font.padding : "start" === r.attr["text-anchor"] && (r.attr.x += r.font.padding), r.attr.y += r.font.padding, delete r.attr.class), t.noClass && delete r.attr.class, r.attr.x = n(r.attr.x), r.attr.y = n(r.attr.y); var l = e.paper.text(text, r.attr); if (r.font.box) { var h = l.getBBox(), d = 0; "middle" === r.attr["text-anchor"] ? d = h.width / 2 + r.font.padding : "end" === r.attr["text-anchor"] && (d = h.width + 2 * r.font.padding); var f = 0; t.centerVertically && (f = h.height - r.font.padding), e.paper.rect({ x: Math.round(t.x - d), y: Math.round(o - f), width: Math.round(h.width + 2 * r.font.padding), height: Math.round(h.height + 2 * r.font.padding) }), l = e.paper.closeGroup() } return l } }, , , , , , , , , , , , , , , , , , , , function (e, t) { e.exports = function () { for (var a, e, p, t, r, i = 0, n = arguments[i++], o = []; n;) { if (e = /^[^\x25]+/.exec(n)) o.push(e[0]); else if (e = /^\x25{2}/.exec(n)) o.push("%"); else { if (!(e = /^\x25(?:(\d+)\$)?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(n))) throw "Huh ?!"; if (null == (a = arguments[e[1] || i++]) || null == a) throw "Too few arguments."; if (/[^s]/.test(e[7]) && "number" != typeof a) throw "Expecting number but found " + typeof a; switch (e[7]) { case "b": a = a.toString(2); break; case "c": a = String.fromCharCode(a); break; case "d": a = parseInt(a); break; case "e": a = e[6] ? a.toExponential(e[6]) : a.toExponential(); break; case "f": a = e[6] ? parseFloat(a).toFixed(e[6]) : parseFloat(a); break; case "o": a = a.toString(8); break; case "s": a = (a = String(a)) && e[6] ? a.substring(0, e[6]) : a; break; case "u": a = Math.abs(a); break; case "x": a = a.toString(16); break; case "X": a = a.toString(16).toUpperCase() }a = /[def]/.test(e[7]) && e[2] && a > 0 ? "+" + a : a, t = e[3] ? "0" == e[3] ? "0" : e[3].charAt(1) : " ", r = e[5] - String(a).length, p = e[5] ? str_repeat(t, r) : "", o.push(e[4] ? a + p : p + a) } n = n.substring(e[0].length) } return o.join("") } }, function (e, t, r) { "use strict"; var n = { name: "NoSsr", functional: !0, props: { placeholder: String, placeholderTag: { type: String, default: "div" } }, render: function (e, t) { var r = t.parent, n = t.slots, o = t.props, c = n(), l = c.default; void 0 === l && (l = []); var h = c.placeholder; return r._isMounted ? l : (r.$once("hook:mounted", (function () { r.$forceUpdate() })), o.placeholderTag && (o.placeholder || h) ? e(o.placeholderTag, { class: ["no-ssr-placeholder"] }, o.placeholder || h) : l.length > 0 ? l.map((function () { return e(!1) })) : e(!1)) } }; e.exports = n }, , , , , , , , function (e, t, r) { r(74); var n = r(144), o = r(145), c = function (e, t, r, n, o, c) { c || (c = {}), this.tuneNumber = o, this.abcelem = e, this.duration = t, this.durationClass = c.durationClassOveride ? c.durationClassOveride : this.duration, this.minspacing = r || 0, this.x = 0, this.children = [], this.heads = [], this.extra = [], this.extraw = 0, this.w = 0, this.right = [], this.invisible = !1, this.bottom = void 0, this.top = void 0, this.type = n, this.fixed = { w: 0, t: void 0, b: void 0 }, this.specialY = { tempoHeightAbove: 0, partHeightAbove: 0, volumeHeightAbove: 0, dynamicHeightAbove: 0, endingHeightAbove: 0, chordHeightAbove: 0, lyricHeightAbove: 0, lyricHeightBelow: 0, chordHeightBelow: 0, volumeHeightBelow: 0, dynamicHeightBelow: 0 } }; c.prototype.getFixedCoords = function () { return { x: this.x, w: this.fixed.w, t: this.fixed.t, b: this.fixed.b } }, c.prototype.addExtra = function (e) { this.fixed.w = Math.max(this.fixed.w, e.dx + e.w), void 0 === this.fixed.t ? this.fixed.t = e.top : this.fixed.t = Math.max(this.fixed.t, e.top), void 0 === this.fixed.b ? this.fixed.b = e.bottom : this.fixed.b = Math.min(this.fixed.b, e.bottom), e.dx < this.extraw && (this.extraw = e.dx), this.extra[this.extra.length] = e, this._addChild(e) }, c.prototype.addHead = function (head) { head.dx < this.extraw && (this.extraw = head.dx), this.heads[this.heads.length] = head, this.addRight(head) }, c.prototype.addRight = function (e) { this.fixed.w = Math.max(this.fixed.w, e.dx + e.w), void 0 !== e.top && (void 0 === this.fixed.t ? this.fixed.t = e.top : this.fixed.t = Math.max(this.fixed.t, e.top)), void 0 !== e.bottom && (void 0 === this.fixed.b ? this.fixed.b = e.bottom : this.fixed.b = Math.min(this.fixed.b, e.bottom)), isNaN(this.fixed.t) || isNaN(this.fixed.b), e.dx + e.w > this.w && (this.w = e.dx + e.w), this.right[this.right.length] = e, this._addChild(e) }, c.prototype.addFixed = function (e) { this._addChild(e) }, c.prototype.addFixedX = function (e) { this._addChild(e) }, c.prototype.addCentered = function (e) { var t = e.w / 2; -t < this.extraw && (this.extraw = -t), this.extra[this.extra.length] = e, e.dx + t > this.w && (this.w = e.dx + t), this.right[this.right.length] = e, this._addChild(e) }, c.prototype.setLimit = function (e, t) { t[e] && (this.specialY[e] ? this.specialY[e] = Math.max(this.specialY[e], t[e]) : this.specialY[e] = t[e]) }, c.prototype._addChild = function (e) { e.parent = this, this.children[this.children.length] = e, this.pushTop(e.top), this.pushBottom(e.bottom), this.setLimit("tempoHeightAbove", e), this.setLimit("partHeightAbove", e), this.setLimit("volumeHeightAbove", e), this.setLimit("dynamicHeightAbove", e), this.setLimit("endingHeightAbove", e), this.setLimit("chordHeightAbove", e), this.setLimit("lyricHeightAbove", e), this.setLimit("lyricHeightBelow", e), this.setLimit("chordHeightBelow", e), this.setLimit("volumeHeightBelow", e), this.setLimit("dynamicHeightBelow", e) }, c.prototype.pushTop = function (e) { void 0 !== e && (void 0 === this.top ? this.top = e : this.top = Math.max(e, this.top)) }, c.prototype.pushBottom = function (e) { void 0 !== e && (void 0 === this.bottom ? this.bottom = e : this.bottom = Math.min(e, this.bottom)) }, c.prototype.setX = function (e) { this.x = e; for (var i = 0; i < this.children.length; i++)this.children[i].setX(e) }, c.prototype.center = function (e, t) { var r = (t.x - e.x) / 2 + e.x; this.x = r - this.w / 2; for (var n = 0; n < this.children.length; n++)this.children[n].setX(this.x) }, c.prototype.setHint = function () { this.hint = !0 }, c.prototype.highlight = function (e, t) { n.bind(this)(e, t) }, c.prototype.unhighlight = function (e, t) { o.bind(this)(e, t) }, e.exports = c }, function (e, t, r) { var n = r(76); e.exports = function () { return window.abcjsAudioContext || n(), window.abcjsAudioContext } }, , function (e, t, r) { "use strict"; e.exports = function (e) { var t = []; return t.toString = function () { return this.map((function (t) { var content = function (e, t) { var content = e[1] || "", r = e[3]; if (!r) return content; if (t && "function" == typeof btoa) { var n = (c = r, l = btoa(unescape(encodeURIComponent(JSON.stringify(c)))), data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l), "/*# ".concat(data, " */")), o = r.sources.map((function (source) { return "/*# sourceURL=".concat(r.sourceRoot || "").concat(source, " */") })); return [content].concat(o).concat([n]).join("\n") } var c, l, data; return [content].join("\n") }(t, e); return t[2] ? "@media ".concat(t[2], " {").concat(content, "}") : content })).join("") }, t.i = function (e, r, n) { "string" == typeof e && (e = [[null, e, ""]]); var o = {}; if (n) for (var i = 0; i < this.length; i++) { var c = this[i][0]; null != c && (o[c] = !0) } for (var l = 0; l < e.length; l++) { var h = [].concat(e[l]); n && o[h[0]] || (r && (h[2] ? h[2] = "".concat(r, " and ").concat(h[2]) : h[2] = r), t.push(h)) } }, t } }, function (e, t, r) { "use strict"; function n(e, t) { for (var r = [], n = {}, i = 0; i < t.length; i++) { var o = t[i], c = o[0], l = { id: e + ":" + i, css: o[1], media: o[2], sourceMap: o[3] }; n[c] ? n[c].parts.push(l) : r.push(n[c] = { id: c, parts: [l] }) } return r } r.r(t), r.d(t, "default", (function () { return x })); var o = "undefined" != typeof document; if ("undefined" != typeof DEBUG && DEBUG && !o) throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."); var c = {}, head = o && (document.head || document.getElementsByTagName("head")[0]), l = null, h = 0, d = !1, f = function () { }, m = null, v = "data-vue-ssr-id", y = "undefined" != typeof navigator && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase()); function x(e, t, r, o) { d = r, m = o || {}; var l = n(e, t); return w(l), function (t) { for (var r = [], i = 0; i < l.length; i++) { var o = l[i]; (h = c[o.id]).refs--, r.push(h) } t ? w(l = n(e, t)) : l = []; for (i = 0; i < r.length; i++) { var h; if (0 === (h = r[i]).refs) { for (var d = 0; d < h.parts.length; d++)h.parts[d](); delete c[h.id] } } } } function w(e) { for (var i = 0; i < e.length; i++) { var t = e[i], r = c[t.id]; if (r) { r.refs++; for (var n = 0; n < r.parts.length; n++)r.parts[n](t.parts[n]); for (; n < t.parts.length; n++)r.parts.push(T(t.parts[n])); r.parts.length > t.parts.length && (r.parts.length = t.parts.length) } else { var o = []; for (n = 0; n < t.parts.length; n++)o.push(T(t.parts[n])); c[t.id] = { id: t.id, refs: 1, parts: o } } } } function k() { var e = document.createElement("style"); return e.type = "text/css", head.appendChild(e), e } function T(e) { var t, r, n = document.querySelector("style[" + v + '~="' + e.id + '"]'); if (n) { if (d) return f; n.parentNode.removeChild(n) } if (y) { var o = h++; n = l || (l = k()), t = S.bind(null, n, o, !1), r = S.bind(null, n, o, !0) } else n = k(), t = _.bind(null, n), r = function () { n.parentNode.removeChild(n) }; return t(e), function (n) { if (n) { if (n.css === e.css && n.media === e.media && n.sourceMap === e.sourceMap) return; t(e = n) } else r() } } var C, A = (C = [], function (e, t) { return C[e] = t, C.filter(Boolean).join("\n") }); function S(e, t, r, n) { var o = r ? "" : n.css; if (e.styleSheet) e.styleSheet.cssText = A(t, o); else { var c = document.createTextNode(o), l = e.childNodes; l[t] && e.removeChild(l[t]), l.length ? e.insertBefore(c, l[t]) : e.appendChild(c) } } function _(e, t) { var r = t.css, n = t.media, o = t.sourceMap; if (n && e.setAttribute("media", n), m.ssrId && e.setAttribute(v, t.id), o && (r += "\n/*# sourceURL=" + o.sources[0] + " */", r += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(o)))) + " */"), e.styleSheet) e.styleSheet.cssText = r; else { for (; e.firstChild;)e.removeChild(e.firstChild); e.appendChild(document.createTextNode(r)) } } }, , , , , , , , , , , function (e, t) { e.exports = function (e, t, r, n) { if (e) for (var i = 0; i < e.length; i++) { var o = e[i], c = o.getAttribute("highlight"); c || (c = "fill"), o.setAttribute(c, n); var l = o.getAttribute("class"); l || (l = ""), l = (l = l.replace(r, "")).replace(t, ""), t.length > 0 && (l.length > 0 && " " !== l.charAt(l.length - 1) && (l += " "), l += t), o.setAttribute("class", l) } } }, function (e, t) { e.exports = function (e, t, r) { return e.paper.path(t) } }, function (e, t) { e.exports = function (e) { if (e) window.abcjsAudioContext = e; else if (!window.abcjsAudioContext) { var t = window.AudioContext || window.webkitAudioContext; window.abcjsAudioContext = new t } return "suspended" !== window.abcjsAudioContext.state } }, function (e, t, r) { var n = r(60); e.exports = function () { var e = n(); return e ? void 0 !== e.resume : !!window.Promise && !!(window.AudioContext || window.webkitAudioContext || navigator.mozAudioContext || navigator.msAudioContext) } }, , , , , , , , , , , , , , , , , , , function (e, t) { e.exports = function (e, t) { var r = this; if (t || (t = {}), r.qpm = t.qpm ? parseInt(t.qpm, 10) : null, !r.qpm) { var n = e.metaText ? e.metaText.tempo : null; r.qpm = e.getBpm(n) } r.extraMeasuresAtBeginning = t.extraMeasuresAtBeginning ? parseInt(t.extraMeasuresAtBeginning, 10) : 0, r.beatCallback = t.beatCallback, r.eventCallback = t.eventCallback, r.lineEndCallback = t.lineEndCallback, r.lineEndAnticipation = t.lineEndAnticipation ? parseInt(t.lineEndAnticipation, 10) : 0, r.beatSubdivisions = t.beatSubdivisions ? parseInt(t.beatSubdivisions, 10) : 1, r.joggerTimer = null, r.replaceTarget = function (e) { r.noteTimings = e.setTiming(r.qpm, r.extraMeasuresAtBeginning), 0 === e.noteTimings.length && e.setTiming(0, 0), r.lineEndCallback && (r.lineEndTimings = function (e, t) { for (var r = [], n = null, i = 0; i < e.length; i++) { var o = e[i]; "end" !== o.type && o.top !== n && (r.push({ measureNumber: o.measureNumber, milliseconds: o.milliseconds - t, top: o.top, bottom: o.top + o.height }), n = o.top) } return r }(e.noteTimings, r.lineEndAnticipation)), r.startTime = null, r.currentBeat = 0, r.currentEvent = 0, r.currentLine = 0, r.isPaused = !1, r.isRunning = !1, r.pausedPercent = null, r.justUnpaused = !1, r.newSeekPercent = 0, r.lastTimestamp = 0, 0 !== r.noteTimings.length && (r.millisecondsPerBeat = 1e3 / (r.qpm / 60) / r.beatSubdivisions, r.lastMoment = r.noteTimings[r.noteTimings.length - 1].milliseconds, r.totalBeats = Math.round(r.lastMoment / r.millisecondsPerBeat)) }, r.replaceTarget(e), r.doTiming = function (e) { if (r.lastTimestamp !== e && (r.lastTimestamp = e, r.startTime || (r.startTime = e), !r.isPaused && r.isRunning)) { var t = e - r.startTime; for (t += 16; r.noteTimings.length > r.currentEvent && r.noteTimings[r.currentEvent].milliseconds < t;) { if (r.eventCallback && "event" === r.noteTimings[r.currentEvent].type) { var n = r.startTime; r.eventCallback(r.noteTimings[r.currentEvent]), n !== r.startTime && (t = e - r.startTime) } r.currentEvent++ } if (r.lineEndCallback && r.lineEndTimings.length > r.currentLine && r.lineEndTimings[r.currentLine].milliseconds < t && r.currentEvent < r.noteTimings.length) { var o = r.noteTimings[r.currentEvent].milliseconds === t ? r.noteTimings[r.currentEvent] : r.noteTimings[r.currentEvent - 1]; r.lineEndCallback(r.lineEndTimings[r.currentLine], o, { line: r.currentLine, endTimings: r.lineEndTimings, currentTime: t }), r.currentLine++ } if (t < r.lastMoment) { if (requestAnimationFrame(r.doTiming), r.currentBeat * r.millisecondsPerBeat < t) { var c = r.doBeatCallback(e); null !== c && (t = c) } } else if (r.currentBeat <= r.totalBeats && r.beatCallback) { var l = r.doBeatCallback(e); null !== l && (t = l), requestAnimationFrame(r.doTiming) } if (t >= r.lastMoment) if (r.eventCallback) { var h = r.eventCallback(null); r.shouldStop(h).then((function (e) { e && r.stop() })) } else r.stop() } }, r.shouldStop = function (e) { return new Promise((function (t) { return e ? "continue" === e ? t(!1) : void (e.then && e.then((function (e) { t("continue" !== e) }))) : t(!0) })) }, r.doBeatCallback = function (e) { if (r.beatCallback) { for (var t, n, o = r.currentEvent; o < r.noteTimings.length && null === r.noteTimings[o].left;)o++; if (o < r.noteTimings.length) { for (t = r.noteTimings[o].milliseconds, o = r.currentEvent - 1; o >= 0 && null === r.noteTimings[o].left;)o--; n = r.noteTimings[o] } var c = {}, l = {}; if (n) { c.top = n.top, c.height = n.height; var h = Math.max(0, e - r.startTime - n.milliseconds), d = t - n.milliseconds, f = n.endX - n.left, m = h * f / d; c.left = n.left + m, l = { timestamp: e, startTime: r.startTime, ev: n, endMs: t, offMs: h, offPs: m, gapMs: d, gapPx: f } } else l = { timestamp: e, startTime: r.startTime }; var v = r.startTime; if (r.beatCallback(r.currentBeat / r.beatSubdivisions, r.totalBeats / r.beatSubdivisions, r.lastMoment, c, l), v !== r.startTime) return e - r.startTime; r.currentBeat++ } return null }; r.animationJogger = function () { r.isRunning && (r.doTiming(performance.now()), r.joggerTimer = setTimeout(r.animationJogger, 60)) }, r.start = function (e) { if (r.isRunning = !0, r.isPaused && (r.isPaused = !1, void 0 === e && (r.justUnpaused = !0)), e) r.setProgress(e); else if (0 === e) r.reset(); else if (null !== r.pausedPercent) { var t = performance.now(), n = r.lastMoment * r.pausedPercent; r.startTime = t - n, r.pausedPercent = null, r.reportNext = !0 } requestAnimationFrame(r.doTiming), r.joggerTimer = setTimeout(r.animationJogger, 60) }, r.pause = function () { r.isPaused = !0; var e = performance.now(); r.pausedPercent = (e - r.startTime) / r.lastMoment, r.isRunning = !1, r.joggerTimer && (clearTimeout(r.joggerTimer), r.joggerTimer = null) }, r.reset = function () { r.currentBeat = 0, r.currentEvent = 0, r.currentLine = 0, r.startTime = null, r.pausedPercent = null }, r.stop = function () { r.pause(), r.reset() }, r.setProgress = function (e) { e < 0 && (e = 0), e > 1 && (e = 1), r.isRunning || (r.pausedPercent = e); var t = performance.now(), n = r.lastMoment * e; r.startTime = t - n; r.currentEvent; for (r.currentEvent = 0; r.noteTimings.length > r.currentEvent && r.noteTimings[r.currentEvent].milliseconds < n;)r.currentEvent++; if (r.lineEndCallback) for (r.currentLine = 0; r.lineEndTimings.length > r.currentLine && r.lineEndTimings[r.currentLine].milliseconds + r.lineEndAnticipation < n;)r.currentLine++; var o = r.currentBeat; r.currentBeat = Math.floor(n / r.millisecondsPerBeat), r.beatCallback && o !== r.currentBeat && r.doBeatCallback(r.startTime + n), r.eventCallback && r.currentEvent >= 0 && "event" === r.noteTimings[r.currentEvent].type && r.eventCallback(r.noteTimings[r.currentEvent]), r.lineEndCallback && r.lineEndCallback(r.lineEndTimings[r.currentLine], r.noteTimings[r.currentEvent], { line: r.currentLine, endTimings: r.lineEndTimings }), r.joggerTimer = setTimeout(r.animationJogger, 60) } } }, function (e, t, r) { var n = r(138), o = r(216), c = {}; !function () { "use strict"; c.numberOfTunes = function (e) { var t = e.split("\nX:").length; return 0 === t && (t = 1), t }; var e = c.TuneBook = function (e) { var t = o(e); this.header = t.header, this.tunes = t.tunes }; e.prototype.getTuneById = function (e) { for (var i = 0; i < this.tunes.length; i++)if (this.tunes[i].id === "" + e) return this.tunes[i]; return null }, e.prototype.getTuneByTitle = function (title) { for (var i = 0; i < this.tunes.length; i++)if (this.tunes[i].title === title) return this.tunes[i]; return null }, c.parseOnly = function (e, t) { for (var r = c.numberOfTunes(e), output = [], i = 0; i < r; i++)output.push(1); return c.renderEngine((function () { }), output, e, t) }, c.renderEngine = function (t, output, r, o) { var c = []; if (void 0 !== output && void 0 !== r) { var l; (!(l = output) || l.propertyIsEnumerable("length") || "object" != typeof l || "number" != typeof l.length) && (output = [output]), void 0 === o && (o = {}); for (var h = o.startingTune ? parseInt(o.startingTune, 10) : 0, d = new e(r), f = new n, i = 0; i < output.length; i++) { var div = output[i]; if ("*" === div || "string" == typeof div && (div = document.getElementById(div)), div) if (h >= 0 && h < d.tunes.length) { f.parse(d.tunes[h].abc, o, d.tunes[h].startPos - d.header.length); var m = f.getTune(), v = f.getWarnings(); v && (m.warnings = v); var y = t(div, m, i, d.tunes[h].abc); c.push(y || m) } else div.innerHTML && (div.innerHTML = ""); h++ } return c } }, c.extractMeasures = function (t) { for (var r = [], n = new e(t), i = 0; i < n.tunes.length; i++) { for (var o = n.tunes[i], l = o.abc.split("K:"), h = l[1].split("\n"), header = l[0] + "K:" + h[0] + "\n", d = null, f = null, m = null, v = [], y = !1, x = c.parseOnly(o.abc)[0], w = x.getPickupLength() > 0, k = 0; k < x.lines.length; k++) { var line = x.lines[k]; if (line.staff) for (var T = 0; T < 1; T++)for (var C = line.staff[T], A = 0; A < 1; A++)for (var S = C.voices[A], _ = 0; _ < S.length; _++) { var E = S[_]; if (null === m && E.startChar >= 0 && (m = E.startChar, f = void 0 === E.chord ? d : null), E.chord && (d = E), "bar" === E.el_type) { if (y) { var M = { abc: o.abc.substring(m, E.endChar) }; (d = f && f.chord && f.chord.length > 0 ? f.chord[0].name : null) && (M.lastChord = d), E.startEnding && (M.startEnding = E.startEnding), E.endEnding && (M.endEnding = E.endEnding), v.push(M), m = null, y = !1 } } else "note" === E.el_type && (y = !0) } } r.push({ header: header, measures: v, hasPickup: w }) } return r } }(), e.exports = c }, function (e, t, r) { var n = r(7), o = {}; !function () { "use strict"; var e, t, r, c, l; o.initialize = function (n, o, h, d, f) { e = n, t = o, c = d, l = f, (r = h).annotationfont = { face: "Helvetica", size: 12, weight: "normal", style: "normal", decoration: "none" }, r.gchordfont = { face: "Helvetica", size: 12, weight: "normal", style: "normal", decoration: "none" }, r.historyfont = { face: '"Times New Roman"', size: 16, weight: "normal", style: "normal", decoration: "none" }, r.infofont = { face: '"Times New Roman"', size: 14, weight: "normal", style: "italic", decoration: "none" }, r.measurefont = { face: '"Times New Roman"', size: 14, weight: "normal", style: "italic", decoration: "none" }, r.partsfont = { face: '"Times New Roman"', size: 15, weight: "normal", style: "normal", decoration: "none" }, r.repeatfont = { face: '"Times New Roman"', size: 13, weight: "normal", style: "normal", decoration: "none" }, r.textfont = { face: '"Times New Roman"', size: 16, weight: "normal", style: "normal", decoration: "none" }, r.tripletfont = { face: "Times", size: 11, weight: "normal", style: "italic", decoration: "none" }, r.vocalfont = { face: '"Times New Roman"', size: 13, weight: "bold", style: "normal", decoration: "none" }, r.wordsfont = { face: '"Times New Roman"', size: 16, weight: "normal", style: "normal", decoration: "none" }, c.formatting.composerfont = { face: '"Times New Roman"', size: 14, weight: "normal", style: "italic", decoration: "none" }, c.formatting.subtitlefont = { face: '"Times New Roman"', size: 16, weight: "normal", style: "normal", decoration: "none" }, c.formatting.tempofont = { face: '"Times New Roman"', size: 15, weight: "bold", style: "normal", decoration: "none" }, c.formatting.titlefont = { face: '"Times New Roman"', size: 20, weight: "normal", style: "normal", decoration: "none" }, c.formatting.footerfont = { face: '"Times New Roman"', size: 12, weight: "normal", style: "normal", decoration: "none" }, c.formatting.headerfont = { face: '"Times New Roman"', size: 12, weight: "normal", style: "normal", decoration: "none" }, c.formatting.voicefont = { face: '"Times New Roman"', size: 13, weight: "bold", style: "normal", decoration: "none" }, c.formatting.annotationfont = r.annotationfont, c.formatting.gchordfont = r.gchordfont, c.formatting.historyfont = r.historyfont, c.formatting.infofont = r.infofont, c.formatting.measurefont = r.measurefont, c.formatting.partsfont = r.partsfont, c.formatting.repeatfont = r.repeatfont, c.formatting.textfont = r.textfont, c.formatting.tripletfont = r.tripletfont, c.formatting.vocalfont = r.vocalfont, c.formatting.wordsfont = r.wordsfont }; var h = { gchordfont: !0, measurefont: !0, partsfont: !0, annotationfont: !0, composerfont: !0, historyfont: !0, infofont: !0, subtitlefont: !0, textfont: !0, titlefont: !0, voicefont: !0 }, d = function (e, r, n, o, c) { function l() { var l = parseInt(e[0].token); return e.shift(), r ? 0 === e.length ? { face: r.face, weight: r.weight, style: r.style, decoration: r.decoration, size: l } : 1 === e.length && "box" === e[0].token && h[c] ? { face: r.face, weight: r.weight, style: r.style, decoration: r.decoration, size: l, box: !0 } : (t("Extra parameters in font definition.", n, o), { face: r.face, weight: r.weight, style: r.style, decoration: r.decoration, size: l }) : (t("Can't set just the size of the font since there is no default value.", n, o), { face: '"Times New Roman"', weight: "normal", style: "normal", decoration: "none", size: l }) } if ("*" === e[0].token) { if (e.shift(), "number" === e[0].type) return l(); t("Expected font size number after *.", n, o) } if ("number" === e[0].type) return l(); for (var d, f = [], m = "normal", style = "normal", v = "none", y = !1, x = "face", w = !1; e.length;) { var k = e.shift(), T = k.token.toLowerCase(); switch (x) { case "face": w || "utf" !== T && "number" !== k.type && "bold" !== T && "italic" !== T && "underline" !== T && "box" !== T ? f.length > 0 && "-" === k.token ? (w = !0, f[f.length - 1] = f[f.length - 1] + k.token) : w ? (w = !1, f[f.length - 1] = f[f.length - 1] + k.token) : f.push(k.token) : "number" === k.type ? (d ? t("Font size specified twice in font definition.", n, o) : d = k.token, x = "modifier") : "bold" === T ? m = "bold" : "italic" === T ? style = "italic" : "underline" === T ? v = "underline" : "box" === T ? (h[c] ? y = !0 : t('This font style doesn\'t support "box"', n, o), x = "finished") : "utf" === T ? (k = e.shift(), x = "size") : t("Unknown parameter " + k.token + " in font definition.", n, o); break; case "size": "number" === k.type ? d ? t("Font size specified twice in font definition.", n, o) : d = k.token : t("Expected font size in font definition.", n, o), x = "modifier"; break; case "modifier": "bold" === T ? m = "bold" : "italic" === T ? style = "italic" : "underline" === T ? v = "underline" : "box" === T ? (h[c] ? y = !0 : t('This font style doesn\'t support "box"', n, o), x = "finished") : t("Unknown parameter " + k.token + " in font definition.", n, o); break; case "finished": t('Extra characters found after "box" in font definition.', n, o) } } void 0 === d ? r ? d = r.size : (t("Must specify the size of the font since there is no default value.", n, o), d = 12) : d = parseFloat(d), "" === (f = f.join(" ")) && (r ? f = r.face : (t("Must specify the name of the font since there is no default value.", n, o), f = "sans-serif")); var C = function (e) { switch (e) { case "Arial-Italic": return { face: "Arial", weight: "normal", style: "italic", decoration: "none" }; case "Arial-Bold": return { face: "Arial", weight: "bold", style: "normal", decoration: "none" }; case "Bookman-Demi": return { face: "Bookman,serif", weight: "bold", style: "normal", decoration: "none" }; case "Bookman-DemiItalic": return { face: "Bookman,serif", weight: "bold", style: "italic", decoration: "none" }; case "Bookman-Light": return { face: "Bookman,serif", weight: "normal", style: "normal", decoration: "none" }; case "Bookman-LightItalic": return { face: "Bookman,serif", weight: "normal", style: "italic", decoration: "none" }; case "Courier": return { face: '"Courier New"', weight: "normal", style: "normal", decoration: "none" }; case "Courier-Oblique": return { face: '"Courier New"', weight: "normal", style: "italic", decoration: "none" }; case "Courier-Bold": return { face: '"Courier New"', weight: "bold", style: "normal", decoration: "none" }; case "Courier-BoldOblique": return { face: '"Courier New"', weight: "bold", style: "italic", decoration: "none" }; case "AvantGarde-Book": return { face: "AvantGarde,Arial", weight: "normal", style: "normal", decoration: "none" }; case "AvantGarde-BookOblique": return { face: "AvantGarde,Arial", weight: "normal", style: "italic", decoration: "none" }; case "AvantGarde-Demi": case "Avant-Garde-Demi": return { face: "AvantGarde,Arial", weight: "bold", style: "normal", decoration: "none" }; case "AvantGarde-DemiOblique": return { face: "AvantGarde,Arial", weight: "bold", style: "italic", decoration: "none" }; case "Helvetica-Oblique": return { face: "Helvetica", weight: "normal", style: "italic", decoration: "none" }; case "Helvetica-Bold": return { face: "Helvetica", weight: "bold", style: "normal", decoration: "none" }; case "Helvetica-BoldOblique": return { face: "Helvetica", weight: "bold", style: "italic", decoration: "none" }; case "Helvetica-Narrow": return { face: '"Helvetica Narrow",Helvetica', weight: "normal", style: "normal", decoration: "none" }; case "Helvetica-Narrow-Oblique": return { face: '"Helvetica Narrow",Helvetica', weight: "normal", style: "italic", decoration: "none" }; case "Helvetica-Narrow-Bold": return { face: '"Helvetica Narrow",Helvetica', weight: "bold", style: "normal", decoration: "none" }; case "Helvetica-Narrow-BoldOblique": return { face: '"Helvetica Narrow",Helvetica', weight: "bold", style: "italic", decoration: "none" }; case "Palatino-Roman": return { face: "Palatino", weight: "normal", style: "normal", decoration: "none" }; case "Palatino-Italic": return { face: "Palatino", weight: "normal", style: "italic", decoration: "none" }; case "Palatino-Bold": return { face: "Palatino", weight: "bold", style: "normal", decoration: "none" }; case "Palatino-BoldItalic": return { face: "Palatino", weight: "bold", style: "italic", decoration: "none" }; case "NewCenturySchlbk-Roman": return { face: '"New Century",serif', weight: "normal", style: "normal", decoration: "none" }; case "NewCenturySchlbk-Italic": return { face: '"New Century",serif', weight: "normal", style: "italic", decoration: "none" }; case "NewCenturySchlbk-Bold": return { face: '"New Century",serif', weight: "bold", style: "normal", decoration: "none" }; case "NewCenturySchlbk-BoldItalic": return { face: '"New Century",serif', weight: "bold", style: "italic", decoration: "none" }; case "Times": case "Times-Roman": case "Times-Narrow": case "Times-Courier": case "Times-New-Roman": return { face: '"Times New Roman"', weight: "normal", style: "normal", decoration: "none" }; case "Times-Italic": case "Times-Italics": return { face: '"Times New Roman"', weight: "normal", style: "italic", decoration: "none" }; case "Times-Bold": return { face: '"Times New Roman"', weight: "bold", style: "normal", decoration: "none" }; case "Times-BoldItalic": return { face: '"Times New Roman"', weight: "bold", style: "italic", decoration: "none" }; case "ZapfChancery-MediumItalic": return { face: '"Zapf Chancery",cursive,serif', weight: "normal", style: "normal", decoration: "none" }; default: return null } }(f), A = {}; return C ? (A.face = C.face, A.weight = C.weight, A.style = C.style, A.decoration = C.decoration, A.size = d, y && (A.box = !0), A) : (A.face = f, A.weight = m, A.style = style, A.decoration = v, A.size = d, y && (A.box = !0), A) }, f = function (e, t, n) { return 0 === t.length ? 'Directive "' + e + '" requires a font as a parameter.' : (r[e] = d(t, r[e], n, 0, e), r.is_in_header && (c.formatting[e] = r[e]), null) }, m = function (e, t) { var r = ""; n.each(t, (function (e) { r += e.token })); var o = parseFloat(r); if (isNaN(o) || 0 === o) return 'Directive "' + e + '" requires a number as a parameter.'; c.formatting.scale = o }, v = ["acoustic-bass-drum", "bass-drum-1", "side-stick", "acoustic-snare", "hand-clap", "electric-snare", "low-floor-tom", "closed-hi-hat", "high-floor-tom", "pedal-hi-hat", "low-tom", "open-hi-hat", "low-mid-tom", "hi-mid-tom", "crash-cymbal-1", "high-tom", "ride-cymbal-1", "chinese-cymbal", "ride-bell", "tambourine", "splash-cymbal", "cowbell", "crash-cymbal-2", "vibraslap", "ride-cymbal-2", "hi-bongo", "low-bongo", "mute-hi-conga", "open-hi-conga", "low-conga", "high-timbale", "low-timbale", "high-agogo", "low-agogo", "cabasa", "maracas", "short-whistle", "long-whistle", "short-guiro", "long-guiro", "claves", "hi-wood-block", "low-wood-block", "mute-cuica", "open-cuica", "mute-triangle", "open-triangle"], y = function (e, t, n, o, c) { if (1 !== n.length || "number" !== n[0].type) return 'Directive "' + t + '" requires a number as a parameter.'; var i = n[0].intt; return void 0 !== o && i < o ? 'Directive "' + t + '" requires a number greater than or equal to ' + o + " as a parameter." : void 0 !== c && i > c ? 'Directive "' + t + '" requires a number less than or equal to ' + c + " as a parameter." : (r[e] = i, null) }, x = function (e, t, n) { if (1 === n.length && ("true" === n[0].token || "false" === n[0].token)) return r[e] = "true" === n[0].token, null; var o = y(e, t, n, 0, 1); return null !== o ? o : (r[e] = 1 === r[e], null) }, w = function (e, t, n, o) { if (1 !== n.length) return 'Directive "' + t + '" requires one of [ ' + o.join(", ") + " ] as a parameter."; for (var c = n[0].token, l = !1, i = 0; !l && i < o.length; i++)o[i] === c && (l = !0); return l ? (r[e] = c, null) : 'Directive "' + t + '" requires one of [ ' + o.join(", ") + " ] as a parameter." }, k = ["nobarlines", "barlines", "beataccents", "nobeataccents", "droneon", "droneoff", "drumon", "drumoff", "fermatafixed", "fermataproportional", "gchordon", "gchordoff", "controlcombo", "temperamentnormal", "noportamento"], T = ["gchord", "ptstress", "beatstring"], C = ["bassvol", "chordvol", "c", "channel", "beatmod", "deltaloudness", "drumbars", "gracedivider", "makechordchannels", "randomchordattack", "chordattack", "stressmodel", "transpose", "rtranspose", "vol", "volinc"], A = ["program"], S = ["ratio", "snt", "bendvelocity", "pitchbend", "control", "temperamentlinear"], _ = ["beat"], E = ["drone"], M = ["portamento"], N = ["expand", "grace", "trim"], B = ["drum", "chordname"]; o.parseFontChangeLine = function (e) { var t = e.split("$"); if (t.length > 1 && r.setfont) { for (var n = [{ text: t[0] }], i = 1; i < t.length; i++)"0" === t[i].charAt(0) ? n.push({ text: t[i].substring(1) }) : "1" === t[i].charAt(0) && r.setfont[1] ? n.push({ font: r.setfont[1], text: t[i].substring(1) }) : "2" === t[i].charAt(0) && r.setfont[2] ? n.push({ font: r.setfont[2], text: t[i].substring(1) }) : "3" === t[i].charAt(0) && r.setfont[3] ? n.push({ font: r.setfont[3], text: t[i].substring(1) }) : "4" === t[i].charAt(0) && r.setfont[4] ? n.push({ font: r.setfont[4], text: t[i].substring(1) }) : n[n.length - 1].text += "$" + t[i]; if (n.length > 1) return n } return e }; var P = ["auto", "above", "below", "hidden"]; function L(e) { if (0 === e.length) return { value: 1 }; if (1 === e.length) if ("number" === e[0].type) { if (e[0].floatt >= 0 || e[0].floatt <= 1) return { value: e[0].floatt } } else { if ("false" === e[0].token) return { value: 0 }; if ("true" === e[0].token) return { value: 1 } } return { error: "Directive stretchlast requires zero or one parameter: false, true, or number between 0 and 1 (received " + e[0].token + ")" } } o.addDirective = function (h) { var H = e.tokenize(h, 0, h.length); if (0 === H.length || "alpha" !== H[0].type) return null; var O = h.substring(h.indexOf(H[0].token) + H[0].token.length); O = e.stripComment(O); var z = H.shift().token.toLowerCase(), D = ""; switch (z) { case "bagpipes": c.formatting.bagpipes = !0; break; case "flatbeams": c.formatting.flatbeams = !0; break; case "landscape": r.landscape = !0; break; case "papersize": r.papersize = O; break; case "graceslurs": if (1 !== H.length) return "Directive graceslurs requires one parameter: 0 or 1"; if ("0" === H[0].token || "false" === H[0].token) c.formatting.graceSlurs = !1; else { if ("1" !== H[0].token && "true" !== H[0].token) return "Directive graceslurs requires one parameter: 0 or 1 (received " + H[0].token + ")"; c.formatting.graceSlurs = !0 } break; case "stretchlast": var j = L(H); if (void 0 !== j.value && (c.formatting.stretchlast = j.value), j.error) return j.error; break; case "titlecaps": r.titlecaps = !0; break; case "titleleft": c.formatting.titleleft = !0; break; case "measurebox": c.formatting.measurebox = !0; break; case "vocal": return w("vocalPosition", z, H, P); case "dynamic": return w("dynamicPosition", z, H, P); case "gchord": return w("chordPosition", z, H, P); case "ornament": return w("ornamentPosition", z, H, P); case "volume": return w("volumePosition", z, H, P); case "botmargin": case "botspace": case "composerspace": case "indent": case "leftmargin": case "linesep": case "musicspace": case "partsspace": case "pageheight": case "pagewidth": case "rightmargin": case "staffsep": case "staffwidth": case "subtitlespace": case "sysstaffsep": case "systemsep": case "textspace": case "titlespace": case "topmargin": case "topspace": case "vocalspace": case "wordsspace": return function (t, r) { var n = e.getMeasurement(r); return 0 === n.used || 0 !== r.length ? 'Directive "' + t + '" requires a measurement as a parameter.' : (c.formatting[t] = n.value, null) }(z, H); case "voicescale": if (1 !== H.length || "number" !== H[0].type) return "voicescale requires one float as a parameter"; var I = H.shift(); return r.currentVoice && (r.currentVoice.scale = I.floatt, l.changeVoiceScale(r.currentVoice.scale)), null; case "vskip": var F = Math.round(function (t, r) { var n = e.getMeasurement(r); return 0 === n.used || 0 !== r.length ? { error: 'Directive "' + t + '" requires a measurement as a parameter.' } : n.value }(z, H)); return F.error ? F.error : (l.addSpacing(F), null); case "scale": m(z, H); break; case "sep": if (0 === H.length) l.addSeparator(14, 14, 85); else { var V = e.getMeasurement(H); if (0 === V.used) return 'Directive "' + z + '" requires 3 numbers: space above, space below, length of line'; var Y = V.value; if (0 === (V = e.getMeasurement(H)).used) return 'Directive "' + z + '" requires 3 numbers: space above, space below, length of line'; var G = V.value; if (0 === (V = e.getMeasurement(H)).used || 0 !== H.length) return 'Directive "' + z + '" requires 3 numbers: space above, space below, length of line'; var W = V.value; l.addSeparator(Y, G, W) } break; case "barsperstaff": if (null !== (D = y("barsperstaff", z, H))) return D; break; case "staffnonote": if (1 !== H.length) return "Directive staffnonote requires one parameter: 0 or 1"; if ("0" === H[0].token) r.staffnonote = !0; else { if ("1" !== H[0].token) return "Directive staffnonote requires one parameter: 0 or 1 (received " + H[0].token + ")"; r.staffnonote = !1 } break; case "printtempo": if (null !== (D = x("printTempo", z, H))) return D; break; case "partsbox": if (null !== (D = x("partsBox", z, H))) return D; r.partsfont.box = r.partsBox; break; case "freegchord": if (null !== (D = x("freegchord", z, H))) return D; break; case "measurenb": case "barnumbers": if (null !== (D = y("barNumbers", z, H))) return D; break; case "setbarnb": if (1 !== H.length || "number" !== H[0].type) return "Directive setbarnb requires a number as a parameter."; r.currBarNumber = l.setBarNumberImmediate(H[0].intt); break; case "begintext": r.inTextBlock = !0; break; case "continueall": r.continueall = !0; break; case "beginps": r.inPsBlock = !0, t("Postscript ignored", h, 0); break; case "deco": O.length > 0 && r.ignoredDecorations.push(O.substring(0, O.indexOf(" "))), t("Decoration redefinition ignored", h, 0); break; case "text": var R = e.translateString(O); l.addText(o.parseFontChangeLine(R)); break; case "center": var X = e.translateString(O); l.addCentered(o.parseFontChangeLine(X)); break; case "font": break; case "setfont": var U = e.tokenize(O, 0, O.length); if (U.length >= 4 && "-" === U[0].token && "number" === U[1].type) { var K = parseInt(U[1].token); K >= 1 && K <= 4 && (r.setfont || (r.setfont = []), U.shift(), U.shift(), r.setfont[K] = d(U, r.setfont[K], h, 0, "setfont")) } break; case "gchordfont": case "partsfont": case "tripletfont": case "vocalfont": case "textfont": case "annotationfont": case "historyfont": case "infofont": case "measurefont": case "repeatfont": case "wordsfont": return f(z, H, h); case "composerfont": case "subtitlefont": case "tempofont": case "titlefont": case "voicefont": case "footerfont": case "headerfont": return function (e, t, r) { return 0 === t.length ? 'Directive "' + e + '" requires a font as a parameter.' : (c.formatting[e] = d(t, c.formatting[e], r, 0, e), null) }(z, H, h); case "barlabelfont": case "barnumberfont": case "barnumfont": return f("measurefont", H, h); case "staves": case "score": r.score_is_present = !0; for (var $, Q = function (e, t, o, c, l) { (t || 0 === r.staves.length) && r.staves.push({ index: r.staves.length, numVoices: 0 }); var h = n.last(r.staves); void 0 !== o && void 0 === h.bracket && (h.bracket = o), void 0 !== c && void 0 === h.brace && (h.brace = c), l && (h.connectBarLines = "end"), void 0 === r.voices[e] && (r.voices[e] = { staffNum: h.index, index: h.numVoices }, h.numVoices++) }, J = !1, Z = !1, ee = !1, te = !1, re = !1, ne = !1, ie = !1, ae = function () { if (ie = !0, $) { var e = "start"; $.staffNum > 0 && ("start" !== r.staves[$.staffNum - 1].connectBarLines && "continue" !== r.staves[$.staffNum - 1].connectBarLines || (e = "continue")), r.staves[$.staffNum].connectBarLines = e } }; H.length;) { var se = H.shift(); switch (se.token) { case "(": J ? t("Can't nest parenthesis in %%score", h, se.start) : (J = !0, te = !0); break; case ")": !J || te ? t("Unexpected close parenthesis in %%score", h, se.start) : J = !1; break; case "[": Z ? t("Can't nest brackets in %%score", h, se.start) : (Z = !0, re = !0); break; case "]": !Z || re ? t("Unexpected close bracket in %%score", h, se.start) : (Z = !1, r.staves[$.staffNum].bracket = "end"); break; case "{": ee ? t("Can't nest braces in %%score", h, se.start) : (ee = !0, ne = !0); break; case "}": !ee || ne ? t("Unexpected close brace in %%score", h, se.start) : (ee = !1, r.staves[$.staffNum].brace = "end"); break; case "|": ae(); break; default: for (var oe = ""; ("alpha" === se.type || "number" === se.type) && (oe += se.token, se.continueId);)se = H.shift(); Q(oe, !J || te, re ? "start" : Z ? "continue" : void 0, ne ? "start" : ee ? "continue" : void 0, ie), te = !1, re = !1, ne = !1, ie = !1, $ = r.voices[oe], "staves" === z && ae() } } break; case "newpage": var ce = e.getInt(O); l.addNewPage(0 === ce.digits ? -1 : ce.value); break; case "abc": var le = O.split(" "); switch (le[0]) { case "-copyright": case "-creator": case "-edited-by": case "-version": case "-charset": var he = le.shift(); l.addMetaText(z + he, le.join(" ")); break; default: return "Unknown directive: " + z + le[0] }break; case "header": case "footer": var ue = e.getMeat(O, 0, O.length); '"' === (ue = O.substring(ue.start, ue.end)).charAt(0) && '"' === ue.charAt(ue.length - 1) && (ue = ue.substring(1, ue.length - 1)); var de = ue.split("\t"), footer = {}; footer = 1 === de.length ? { left: "", center: de[0], right: "" } : 2 === de.length ? { left: de[0], center: de[1], right: "" } : { left: de[0], center: de[1], right: de[2] }, de.length > 3 && t("Too many tabs in " + z + ": " + de.length + " found.", O, 0), l.addMetaTextObj(z, footer); break; case "midi": var fe = e.tokenize(O, 0, O.length, !0); fe.length > 0 && "=" === fe[0].token && fe.shift(), 0 === fe.length ? t("Expected midi command", O, 0) : function (e, r, n) { var o = e.shift().token, c = []; if (k.indexOf(o) >= 0) 0 !== e.length && t("Unexpected parameter in MIDI " + o, n, 0); else if (T.indexOf(o) >= 0) 1 !== e.length ? t("Expected one parameter in MIDI " + o, n, 0) : c.push(e[0].token); else if (C.indexOf(o) >= 0) 1 !== e.length ? t("Expected one parameter in MIDI " + o, n, 0) : "number" !== e[0].type ? t("Expected one integer parameter in MIDI " + o, n, 0) : c.push(e[0].intt); else if (A.indexOf(o) >= 0) 1 !== e.length && 2 !== e.length ? t("Expected one or two parameters in MIDI " + o, n, 0) : "number" !== e[0].type || 2 === e.length && "number" !== e[1].type ? t("Expected integer parameter in MIDI " + o, n, 0) : (c.push(e[0].intt), 2 === e.length && c.push(e[1].intt)); else if (S.indexOf(o) >= 0) 2 !== e.length ? t("Expected two parameters in MIDI " + o, n, 0) : "number" !== e[0].type || "number" !== e[1].type ? t("Expected two integer parameters in MIDI " + o, n, 0) : (c.push(e[0].intt), c.push(e[1].intt)); else if (M.indexOf(o) >= 0) 2 !== e.length ? t("Expected two parameters in MIDI " + o, n, 0) : "alpha" !== e[0].type || "number" !== e[1].type ? t("Expected one string and one integer parameters in MIDI " + o, n, 0) : (c.push(e[0].token), c.push(e[1].intt)); else if ("drummap" === o) 2 === e.length && "alpha" === e[0].type && "number" === e[1].type ? (r.formatting || (r.formatting = {}), r.formatting.midi || (r.formatting.midi = {}), r.formatting.midi.drummap || (r.formatting.midi.drummap = {}), r.formatting.midi.drummap[e[0].token] = e[1].intt, c = r.formatting.midi.drummap) : 3 === e.length && "punct" === e[0].type && "alpha" === e[1].type && "number" === e[2].type ? (r.formatting || (r.formatting = {}), r.formatting.midi || (r.formatting.midi = {}), r.formatting.midi.drummap || (r.formatting.midi.drummap = {}), r.formatting.midi.drummap[e[0].token + e[1].token] = e[2].intt, c = r.formatting.midi.drummap) : t("Expected one note name and one integer parameter in MIDI " + o, n, 0); else if (N.indexOf(o) >= 0) 3 !== e.length || "number" !== e[0].type || "/" !== e[1].token || "number" !== e[2].type ? t("Expected fraction parameter in MIDI " + o, n, 0) : (c.push(e[0].intt), c.push(e[2].intt)); else if (_.indexOf(o) >= 0) 4 !== e.length ? t("Expected four parameters in MIDI " + o, n, 0) : "number" !== e[0].type || "number" !== e[1].type || "number" !== e[2].type || "number" !== e[3].type ? t("Expected four integer parameters in MIDI " + o, n, 0) : (c.push(e[0].intt), c.push(e[1].intt), c.push(e[2].intt), c.push(e[3].intt)); else if (E.indexOf(o) >= 0) 5 !== e.length ? t("Expected five parameters in MIDI " + o, n, 0) : "number" !== e[0].type || "number" !== e[1].type || "number" !== e[2].type || "number" !== e[3].type || "number" !== e[4].type ? t("Expected five integer parameters in MIDI " + o, n, 0) : (c.push(e[0].intt), c.push(e[1].intt), c.push(e[2].intt), c.push(e[3].intt), c.push(e[4].intt)); else if (A.indexOf(o) >= 0) 1 !== e.length || 4 !== e.length ? t("Expected one or two parameters in MIDI " + o, n, 0) : "number" !== e[0].type ? t("Expected integer parameter in MIDI " + o, n, 0) : 4 === e.length ? ("octave" !== e[1].token && t("Expected octave parameter in MIDI " + o, n, 0), "=" !== e[2].token && t("Expected octave parameter in MIDI " + o, n, 0), "number" !== e[3].type && t("Expected integer parameter for octave in MIDI " + o, n, 0)) : (c.push(e[0].intt), 4 === e.length && c.push(e[3].intt)); else if (B.indexOf(o) >= 0) if (e.length < 2) t("Expected string parameter and at least one integer parameter in MIDI " + o, n, 0); else if ("alpha" !== e[0].type) t("Expected string parameter and at least one integer parameter in MIDI " + o, n, 0); else { var p = e.shift(); for (c.push(p.token); e.length > 0;)"number" !== (p = e.shift()).type && t("Expected integer parameter in MIDI " + o, n, 0), c.push(p.intt) } l.hasBeginMusic() ? l.appendElement("midi", -1, -1, { cmd: o, params: c }) : (void 0 === r.formatting.midi && (r.formatting.midi = {}), r.formatting.midi[o] = c) }(fe, c, O); break; case "percmap": var pe = function (e) { var t = e.split(/\s+/); if (2 !== t.length && 3 !== t.length) return { error: 'Expected parameters "abc-note", "drum-sound", and optionally "note-head"' }; var r = t[0], n = parseInt(t[1], 10); if ((isNaN(n) || n < 35 || n > 81) && t[1] && (n = v.indexOf(t[1].toLowerCase()) + 35), isNaN(n) || n < 35 || n > 81) return { error: 'Expected drum name, received "' + t[1] + '"' }; var o = { sound: n }; return 3 === t.length && (o.noteHead = t[2]), { key: r, value: o } }(O); pe.error ? t(pe.error, h, 8) : (c.formatting.percmap || (c.formatting.percmap = {}), c.formatting.percmap[pe.key] = pe.value); break; case "map": case "playtempo": case "auquality": case "continuous": case "nobarcheck": c.formatting[z] = O; break; default: return "Unknown directive: " + z }return null }, o.globalFormatting = function (n) { for (var o in n) if (n.hasOwnProperty(o)) { var l, h = "" + n[o], d = e.tokenize(h, 0, h.length); switch (o) { case "titlefont": case "gchordfont": case "composerfont": case "footerfont": case "headerfont": case "historyfont": case "infofont": case "measurefont": case "partsfont": case "repeatfont": case "subtitlefont": case "tempofont": case "textfont": case "voicefont": case "tripletfont": case "vocalfont": case "wordsfont": case "annotationfont": f(o, d, h); break; case "scale": m(o, d); break; case "partsbox": null !== (l = x("partsBox", o, d)) && t(l), r.partsfont.box = r.partsBox; break; case "freegchord": null !== (l = x("freegchord", o, d)) && t(l); break; case "fontboxpadding": 1 === d.length && "number" === d[0].type || t('Directive "' + o + '" requires a number as a parameter.'), c.formatting.fontboxpadding = d[0].floatt; break; case "stretchlast": var v = L(d); if (void 0 !== v.value && (c.formatting.stretchlast = v.value), v.error) return v.error; break; default: t("Formatting directive unrecognized: ", o, 0) } } } }(), e.exports = o }, function (e, t, r) { var n = r(7), o = r(98), c = r(139), l = {}; !function () { var e, t, r, h; l.initialize = function (n, o, c, l, d) { e = n, t = o, r = c, l, h = d }, l.standardKey = function (e, t, n, o) { var l = { acc: "sharp", note: "f" }, h = { acc: "sharp", note: "c" }, d = { acc: "sharp", note: "g" }, f = { acc: "sharp", note: "d" }, m = { acc: "sharp", note: "A" }, v = { acc: "sharp", note: "e" }, y = { acc: "sharp", note: "B" }, x = { acc: "flat", note: "B" }, w = { acc: "flat", note: "e" }, k = { acc: "flat", note: "A" }, T = { acc: "flat", note: "d" }, C = { acc: "flat", note: "G" }, A = { acc: "flat", note: "c" }, S = { acc: "flat", note: "F" }, _ = { "C#": [l, h, d, f, m, v, y], "A#m": [l, h, d, f, m, v, y], "G#Mix": [l, h, d, f, m, v, y], "D#Dor": [l, h, d, f, m, v, y], "E#Phr": [l, h, d, f, m, v, y], "F#Lyd": [l, h, d, f, m, v, y], "B#Loc": [l, h, d, f, m, v, y], "F#": [l, h, d, f, m, v], "D#m": [l, h, d, f, m, v], "C#Mix": [l, h, d, f, m, v], "G#Dor": [l, h, d, f, m, v], "A#Phr": [l, h, d, f, m, v], BLyd: [l, h, d, f, m, v], "E#Loc": [l, h, d, f, m, v], B: [l, h, d, f, m], "G#m": [l, h, d, f, m], "F#Mix": [l, h, d, f, m], "C#Dor": [l, h, d, f, m], "D#Phr": [l, h, d, f, m], ELyd: [l, h, d, f, m], "A#Loc": [l, h, d, f, m], E: [l, h, d, f], "C#m": [l, h, d, f], BMix: [l, h, d, f], "F#Dor": [l, h, d, f], "G#Phr": [l, h, d, f], ALyd: [l, h, d, f], "D#Loc": [l, h, d, f], A: [l, h, d], "F#m": [l, h, d], EMix: [l, h, d], BDor: [l, h, d], "C#Phr": [l, h, d], DLyd: [l, h, d], "G#Loc": [l, h, d], D: [l, h], Bm: [l, h], AMix: [l, h], EDor: [l, h], "F#Phr": [l, h], GLyd: [l, h], "C#Loc": [l, h], G: [l], Em: [l], DMix: [l], ADor: [l], BPhr: [l], CLyd: [l], "F#Loc": [l], C: [], Am: [], GMix: [], DDor: [], EPhr: [], FLyd: [], BLoc: [], F: [x], Dm: [x], CMix: [x], GDor: [x], APhr: [x], BbLyd: [x], ELoc: [x], Bb: [x, w], Gm: [x, w], FMix: [x, w], CDor: [x, w], DPhr: [x, w], EbLyd: [x, w], ALoc: [x, w], Eb: [x, w, k], Cm: [x, w, k], BbMix: [x, w, k], FDor: [x, w, k], GPhr: [x, w, k], AbLyd: [x, w, k], DLoc: [x, w, k], Ab: [x, w, k, T], Fm: [x, w, k, T], EbMix: [x, w, k, T], BbDor: [x, w, k, T], CPhr: [x, w, k, T], DbLyd: [x, w, k, T], GLoc: [x, w, k, T], Db: [x, w, k, T, C], Bbm: [x, w, k, T, C], AbMix: [x, w, k, T, C], EbDor: [x, w, k, T, C], FPhr: [x, w, k, T, C], GbLyd: [x, w, k, T, C], CLoc: [x, w, k, T, C], Gb: [x, w, k, T, C, A], Ebm: [x, w, k, T, C, A], DbMix: [x, w, k, T, C, A], AbDor: [x, w, k, T, C, A], BbPhr: [x, w, k, T, C, A], CbLyd: [x, w, k, T, C, A], FLoc: [x, w, k, T, C, A], Cb: [x, w, k, T, C, A, S], Abm: [x, w, k, T, C, A, S], GbMix: [x, w, k, T, C, A, S], DbDor: [x, w, k, T, C, A, S], EbPhr: [x, w, k, T, C, A, S], FbLyd: [x, w, k, T, C, A, S], BbLoc: [x, w, k, T, C, A, S], "A#": [x, w], "B#": [], "D#": [x, w, k], "E#": [x], "G#": [x, w, k, T], Gbm: [l, h, d, f, m, v, y], none: [] }; return c.keySignature(r, _, e, t, n, o) }; var d = { treble: { clef: "treble", pitch: 4, mid: 0 }, "treble+8": { clef: "treble+8", pitch: 4, mid: 0 }, "treble-8": { clef: "treble-8", pitch: 4, mid: 0 }, "treble^8": { clef: "treble+8", pitch: 4, mid: 0 }, treble_8: { clef: "treble-8", pitch: 4, mid: 0 }, treble1: { clef: "treble", pitch: 2, mid: 2 }, treble2: { clef: "treble", pitch: 4, mid: 0 }, treble3: { clef: "treble", pitch: 6, mid: -2 }, treble4: { clef: "treble", pitch: 8, mid: -4 }, treble5: { clef: "treble", pitch: 10, mid: -6 }, perc: { clef: "perc", pitch: 6, mid: 0 }, none: { clef: "none", mid: 0 }, bass: { clef: "bass", pitch: 8, mid: -12 }, "bass+8": { clef: "bass+8", pitch: 8, mid: -12 }, "bass-8": { clef: "bass-8", pitch: 8, mid: -12 }, "bass^8": { clef: "bass+8", pitch: 8, mid: -12 }, bass_8: { clef: "bass-8", pitch: 8, mid: -12 }, "bass+16": { clef: "bass", pitch: 8, mid: -12 }, "bass-16": { clef: "bass", pitch: 8, mid: -12 }, "bass^16": { clef: "bass", pitch: 8, mid: -12 }, bass_16: { clef: "bass", pitch: 8, mid: -12 }, bass1: { clef: "bass", pitch: 2, mid: -6 }, bass2: { clef: "bass", pitch: 4, mid: -8 }, bass3: { clef: "bass", pitch: 6, mid: -10 }, bass4: { clef: "bass", pitch: 8, mid: -12 }, bass5: { clef: "bass", pitch: 10, mid: -14 }, tenor: { clef: "alto", pitch: 8, mid: -8 }, tenor1: { clef: "alto", pitch: 2, mid: -2 }, tenor2: { clef: "alto", pitch: 4, mid: -4 }, tenor3: { clef: "alto", pitch: 6, mid: -6 }, tenor4: { clef: "alto", pitch: 8, mid: -8 }, tenor5: { clef: "alto", pitch: 10, mid: -10 }, alto: { clef: "alto", pitch: 6, mid: -6 }, alto1: { clef: "alto", pitch: 2, mid: -2 }, alto2: { clef: "alto", pitch: 4, mid: -4 }, alto3: { clef: "alto", pitch: 6, mid: -6 }, alto4: { clef: "alto", pitch: 8, mid: -8 }, alto5: { clef: "alto", pitch: 10, mid: -10 }, "alto+8": { clef: "alto+8", pitch: 6, mid: -6 }, "alto-8": { clef: "alto-8", pitch: 6, mid: -6 }, "alto^8": { clef: "alto+8", pitch: 6, mid: -6 }, alto_8: { clef: "alto-8", pitch: 6, mid: -6 } }, f = function (e, t) { var r = d[e]; return (r ? r.mid : 0) + t }; l.fixClef = function (e) { var t = d[e.type]; t && (e.clefPos = t.pitch, e.type = t.clef) }, l.deepCopyKey = function (e) { var t = { accidentals: [], root: e.root, acc: e.acc, mode: e.mode }; return n.each(e.accidentals, (function (e) { t.accidentals.push(n.clone(e)) })), t }; var m = { A: 5, B: 6, C: 0, D: 1, E: 2, F: 3, G: 4, a: 12, b: 13, c: 7, d: 8, e: 9, f: 10, g: 11 }; l.addPosToKey = function (e, t) { var r = e.verticalPos; n.each(t.accidentals, (function (e) { var t = m[e.note]; t -= r, e.verticalPos = t })), t.impliedNaturals && n.each(t.impliedNaturals, (function (e) { var t = m[e.note]; t -= r, e.verticalPos = t })), r < -10 ? (n.each(t.accidentals, (function (e) { e.verticalPos -= 7, (e.verticalPos >= 11 || 10 === e.verticalPos && "flat" === e.acc) && (e.verticalPos -= 7), "A" === e.note && "sharp" === e.acc && (e.verticalPos -= 7), "G" !== e.note && "F" !== e.note || "flat" !== e.acc || (e.verticalPos -= 7) })), t.impliedNaturals && n.each(t.impliedNaturals, (function (e) { e.verticalPos -= 7, (e.verticalPos >= 11 || 10 === e.verticalPos && "flat" === e.acc) && (e.verticalPos -= 7), "A" === e.note && "sharp" === e.acc && (e.verticalPos -= 7), "G" !== e.note && "F" !== e.note || "flat" !== e.acc || (e.verticalPos -= 7) }))) : r < -4 ? (n.each(t.accidentals, (function (e) { e.verticalPos -= 7, -8 !== r || "f" !== e.note && "g" !== e.note || "sharp" !== e.acc || (e.verticalPos -= 7) })), t.impliedNaturals && n.each(t.impliedNaturals, (function (e) { e.verticalPos -= 7, -8 !== r || "f" !== e.note && "g" !== e.note || "sharp" !== e.acc || (e.verticalPos -= 7) }))) : r >= 7 && (n.each(t.accidentals, (function (e) { e.verticalPos += 7 })), t.impliedNaturals && n.each(t.impliedNaturals, (function (e) { e.verticalPos += 7 }))) }, l.fixKey = function (e, t) { var r = n.clone(t); return l.addPosToKey(e, r), r }; var v = function (e) { var i = 0, p = e.charAt(i++); "^" !== p && "_" !== p || (p = e.charAt(i++)); var t = m[p]; for (void 0 === t && (t = 6); i < e.length; i++)if ("," === e.charAt(i)) t -= 7; else { if ("'" !== e.charAt(i)) break; t += 7 } return { mid: t - 6, str: e.substring(i) } }; l.parseKey = function (n) { 0 === n.length && (n = "none"); var c = e.tokenize(n, 0, n.length), h = {}; switch (c[0].token) { case "HP": o.addDirective("bagpipes"), r.key = { root: "HP", accidentals: [], acc: "", mode: "" }, h.foundKey = !0, c.shift(); break; case "Hp": o.addDirective("bagpipes"), r.key = { root: "Hp", accidentals: [{ acc: "natural", note: "g" }, { acc: "sharp", note: "f" }, { acc: "sharp", note: "c" }], acc: "", mode: "" }, h.foundKey = !0, c.shift(); break; case "none": r.key = { root: "none", accidentals: [], acc: "", mode: "" }, h.foundKey = !0, c.shift(); break; default: var d = e.getKeyPitch(c[0].token); if (d.len > 0) { h.foundKey = !0; var m = "", v = ""; c[0].token.length > 1 ? c[0].token = c[0].token.substring(1) : c.shift(); var y = d.token; if (c.length > 0) { var x = e.getSharpFlat(c[0].token); if (x.len > 0 && (c[0].token.length > 1 ? c[0].token = c[0].token.substring(1) : c.shift(), y += x.token, m = x.token), c.length > 0) { var w = e.getMode(c[0].token); w.len > 0 && (c.shift(), y += w.token, v = w.token) } if (void 0 === l.standardKey(y, d.token, m, 0)) return t("Unsupported key signature: " + y, n, 0), h } var k = l.deepCopyKey(r.key), T = r.globalTranspose ? -r.globalTranspose : 0; if (r.key = l.deepCopyKey(l.standardKey(y, d.token, m, T)), r.key.mode = v, k) { for (var C, A = 0; A < r.key.accidentals.length; A++)for (C = 0; C < k.accidentals.length; C++)k.accidentals[C].note && r.key.accidentals[A].note.toLowerCase() === k.accidentals[C].note.toLowerCase() && (k.accidentals[C].note = null); for (C = 0; C < k.accidentals.length; C++)k.accidentals[C].note && (r.key.impliedNaturals || (r.key.impliedNaturals = []), r.key.impliedNaturals.push({ acc: "natural", note: k.accidentals[C].note })) } } }if (0 === c.length) return h; if ("exp" === c[0].token && c.shift(), 0 === c.length) return h; if ("oct" === c[0].token && c.shift(), 0 === c.length) return h; var S, _ = e.getKeyAccidentals2(c); if (_.warn && t(_.warn, n, 0), _.accs) { h.foundKey || (h.foundKey = !0, r.key = { root: "none", acc: "", mode: "", accidentals: [] }), function (e) { for (var i = 0; i < e.length; i++)"b" === e[i].note ? e[i].note = "B" : "a" === e[i].note ? e[i].note = "A" : "F" === e[i].note ? e[i].note = "f" : "E" === e[i].note ? e[i].note = "e" : "D" === e[i].note ? e[i].note = "d" : "C" === e[i].note ? e[i].note = "c" : "G" === e[i].note && "sharp" === e[i].acc ? e[i].note = "g" : "g" === e[i].note && "flat" === e[i].acc && (e[i].note = "G") }(_.accs); for (var i = 0; i < _.accs.length; i++) { for (var E = !1, M = 0; M < r.key.accidentals.length && !E; M++)r.key.accidentals[M].note === _.accs[i].note && (E = !0, r.key.accidentals[M].acc !== _.accs[i].acc && (r.key.accidentals[M].acc = _.accs[i].acc, r.key.explicitAccidentals || (r.key.explicitAccidentals = []), r.key.explicitAccidentals.push(_.accs[i]))); if (!E && (r.key.explicitAccidentals || (r.key.explicitAccidentals = []), r.key.explicitAccidentals.push(_.accs[i]), r.key.accidentals.push(_.accs[i]), r.key.impliedNaturals)) for (var N = 0; N < r.key.impliedNaturals.length; N++)r.key.impliedNaturals[N].note === _.accs[i].note && r.key.impliedNaturals.splice(N, 1) } } for (; c.length > 0;)switch (c[0].token) { case "m": case "middle": if (c.shift(), 0 === c.length) return t("Expected = after middle", n, 0), h; if ("=" !== (S = c.shift()).token) { t("Expected = after middle", n, S.start); break } if (0 === c.length) return t("Expected parameter after middle=", n, 0), h; var B = e.getPitchFromTokens(c); B.warn && t(B.warn, n, 0), B.position && (r.clef.verticalPos = B.position - 6); break; case "transpose": if (c.shift(), 0 === c.length) return t("Expected = after transpose", n, 0), h; if ("=" !== (S = c.shift()).token) { t("Expected = after transpose", n, S.start); break } if (0 === c.length) return t("Expected parameter after transpose=", n, 0), h; if ("number" !== c[0].type) { t("Expected number after transpose", n, c[0].start); break } r.clef.transpose = c[0].intt, c.shift(); break; case "stafflines": if (c.shift(), 0 === c.length) return t("Expected = after stafflines", n, 0), h; if ("=" !== (S = c.shift()).token) { t("Expected = after stafflines", n, S.start); break } if (0 === c.length) return t("Expected parameter after stafflines=", n, 0), h; if ("number" !== c[0].type) { t("Expected number after stafflines", n, c[0].start); break } r.clef.stafflines = c[0].intt, c.shift(); break; case "staffscale": if (c.shift(), 0 === c.length) return t("Expected = after staffscale", n, 0), h; if ("=" !== (S = c.shift()).token) { t("Expected = after staffscale", n, S.start); break } if (0 === c.length) return t("Expected parameter after staffscale=", n, 0), h; if ("number" !== c[0].type) { t("Expected number after staffscale", n, c[0].start); break } r.clef.staffscale = c[0].floatt, c.shift(); break; case "style": if (c.shift(), 0 === c.length) return t("Expected = after style", n, 0), h; if ("=" !== (S = c.shift()).token) { t("Expected = after style", n, S.start); break } if (0 === c.length) return t("Expected parameter after style=", n, 0), h; switch (c[0].token) { case "normal": case "harmonic": case "rhythm": case "x": case "triangle": r.style = c[0].token, c.shift(); break; default: t("error parsing style element: " + c[0].token, n, c[0].start) }break; case "clef": if (c.shift(), 0 === c.length) return t("Expected = after clef", n, 0), h; if ("=" !== (S = c.shift()).token) { t("Expected = after clef", n, S.start); break } if (0 === c.length) return t("Expected parameter after clef=", n, 0), h; case "treble": case "bass": case "alto": case "tenor": case "perc": case "none": var P = c.shift(); switch (P.token) { case "treble": case "tenor": case "alto": case "bass": case "perc": case "none": break; case "C": P.token = "alto"; break; case "F": P.token = "bass"; break; case "G": P.token = "treble"; break; case "c": P.token = "alto"; break; case "f": P.token = "bass"; break; case "g": P.token = "treble"; break; default: t("Expected clef name. Found " + P.token, n, P.start) }c.length > 0 && "number" === c[0].type && (P.token += c[0].token, c.shift()), c.length > 1 && ("-" === c[0].token || "+" === c[0].token || "^" === c[0].token || "_" === c[0].token) && "8" === c[1].token && (P.token += c[0].token + c[1].token, c.shift(), c.shift()), r.clef = { type: P.token, verticalPos: f(P.token, 0) }, r.currentVoice && void 0 !== r.currentVoice.transpose && (r.clef.transpose = r.currentVoice.transpose), h.foundClef = !0; break; default: t("Unknown parameter: " + c[0].token, n, c[0].start), c.shift() }return h }; l.parseVoice = function (line, i, n) { var o = e.getMeat(line, i, n), c = o.start, l = o.end, d = e.getToken(line, c, l); if (0 !== d.length) { var m = !1; void 0 === r.voices[d] && (r.voices[d] = {}, m = !0, r.score_is_present && t("Can't have an unknown V: id when the %score directive is present", line, c)), c += d.length, c += e.eatWhiteSpace(line, c); for (var y = { startStaff: m }, x = function (r) { var n = e.getVoiceToken(line, c, l); void 0 !== n.warn ? t("Expected value for " + r + " in voice: " + n.warn, line, c) : void 0 !== n.err ? t("Expected value for " + r + " in voice: " + n.err, line, c) : 0 === n.token.length && '"' !== line.charAt(c) ? t("Expected value for " + r + " in voice", line, c) : y[r] = n.token, c += n.len }, w = function (n, o, h) { var d = e.getVoiceToken(line, c, l); void 0 !== d.warn ? t("Expected value for " + o + " in voice: " + d.warn, line, c) : void 0 !== d.err ? t("Expected value for " + o + " in voice: " + d.err, line, c) : 0 === d.token.length && '"' !== line.charAt(c) ? t("Expected value for " + o + " in voice", line, c) : ("number" === h && (d.token = parseFloat(d.token)), r.voices[n][o] = d.token), c += d.len }, k = function (r, n) { var o = e.getVoiceToken(line, c, l); if (void 0 !== o.warn) t("Expected value for " + r + " in voice: " + o.warn, line, c); else if (void 0 !== o.err) t("Expected value for " + r + " in voice: " + o.err, line, c); else { if (0 !== o.token.length || '"' === line.charAt(c)) return "number" === n && (o.token = parseFloat(o.token)), o.token; t("Expected value for " + r + " in voice", line, c) } c += o.len }, T = function (n, o) { var h = e.getVoiceToken(line, c, l); if (void 0 !== h.warn) t("Expected one of (_B, _E, _b, _e) for " + o + " in voice: " + h.warn, line, c); else if (0 === h.token.length && '"' !== line.charAt(c)) t("Expected one of (_B, _E, _b, _e) for " + o + " in voice", line, c); else { var d = { _B: 2, _E: 9, _b: -10, _e: -3 }[h.token]; d ? r.voices[n][o] = d : t("Expected one of (_B, _E, _b, _e) for " + o + " in voice", line, c) } c += h.len }; c < l;) { var C = e.getVoiceToken(line, c, l); if (c += C.len, C.warn) t("Error parsing voice: " + C.warn, line, c); else { var A = null; switch (C.token) { case "clef": case "cl": x("clef"); var S = 0; void 0 !== y.clef && (y.clef = y.clef.replace(/[',]/g, ""), -1 !== y.clef.indexOf("+16") && (S += 14, y.clef = y.clef.replace("+16", "")), y.verticalPos = f(y.clef, S)); break; case "treble": case "bass": case "tenor": case "alto": case "perc": case "none": case "treble'": case "bass'": case "tenor'": case "alto'": case "none'": case "treble''": case "bass''": case "tenor''": case "alto''": case "none''": case "treble,": case "bass,": case "tenor,": case "alto,": case "none,": case "treble,,": case "bass,,": case "tenor,,": case "alto,,": case "none,,": y.clef = C.token.replace(/[',]/g, ""), y.verticalPos = f(y.clef, 0), r.voices[d].clef = C.token; break; case "staves": case "stave": case "stv": x("staves"); break; case "brace": case "brc": x("brace"); break; case "bracket": case "brk": x("bracket"); break; case "name": case "nm": x("name"); break; case "subname": case "sname": case "snm": x("subname"); break; case "merge": y.startStaff = !1; break; case "stem": case "stems": void 0 !== (A = e.getVoiceToken(line, c, l)).warn ? t("Expected value for stems in voice: " + A.warn, line, c) : void 0 !== A.err ? t("Expected value for stems in voice: " + A.err, line, c) : "up" === A.token || "down" === A.token ? r.voices[d].stem = A.token : t("Expected up or down for voice stem", line, c), c += A.len; break; case "up": case "down": r.voices[d].stem = C.token; break; case "middle": case "m": x("verticalPos"), y.verticalPos = v(y.verticalPos).mid; break; case "gchords": case "gch": r.voices[d].suppressChords = !0, "0" === (A = e.getVoiceToken(line, c, l)).token && (c += A.len); break; case "space": case "spc": x("spacing"); break; case "scale": w(d, "scale", "number"); break; case "score": T(d, "scoreTranspose"); break; case "transpose": w(d, "transpose", "number"); break; case "stafflines": w(d, "stafflines", "number"); break; case "staffscale": w(d, "staffscale", "number"); break; case "octave": w(d, "octave", "number"); break; case "volume": w(d, "volume", "number"); break; case "cue": var _ = k("cue", "string"); r.voices[d].scale = "on" === _ ? .6 : 1; break; case "style": void 0 !== (A = e.getVoiceToken(line, c, l)).warn ? t("Expected value for style in voice: " + A.warn, line, c) : void 0 !== A.err ? t("Expected value for style in voice: " + A.err, line, c) : "normal" === A.token || "harmonic" === A.token || "rhythm" === A.token || "x" === A.token || "triangle" === A.token ? r.voices[d].style = A.token : t("Expected one of [normal, harmonic, rhythm, x, triangle] for voice style", line, c), c += A.len } } c += e.eatWhiteSpace(line, c) } if ((y.startStaff || 0 === r.staves.length) && (r.staves.push({ index: r.staves.length, meter: r.origMeter }), r.score_is_present || (r.staves[r.staves.length - 1].numVoices = 0)), void 0 === r.voices[d].staffNum) { r.voices[d].staffNum = r.staves.length - 1; var E = 0; for (var M in r.voices) r.voices.hasOwnProperty(M) && r.voices[M].staffNum === r.voices[d].staffNum && E++; r.voices[d].index = E - 1 } var s = r.staves[r.voices[d].staffNum]; r.score_is_present || s.numVoices++, y.clef && (s.clef = { type: y.clef, verticalPos: y.verticalPos }), y.spacing && (s.spacing_below_offset = y.spacing), y.verticalPos && (s.verticalPos = y.verticalPos), y.name && (s.name ? s.name.push(y.name) : s.name = [y.name]), y.subname && (s.subname ? s.subname.push(y.subname) : s.subname = [y.subname]), function (e) { r.currentVoice = r.voices[e], h.setCurrentVoice(r.currentVoice.staffNum, r.currentVoice.index) }(d) } else t("Expected a voice id", line, c) } }(), e.exports = l }, function (e, t) { e.exports = function (e, t, r, n, o) { return t + (n - t) / (r - e) * (o - e) } }, function (e, t, r) { const n = r(23); function o() { this.ingroup = !1 } o.prototype.beginGroup = function (e, t) { this.paper = e, this.controller = t, this.path = [], this.lastM = [0, 0], this.ingroup = !0 }, o.prototype.isInGroup = function () { return this.ingroup }, o.prototype.addPath = function (path) { if (0 !== (path = path || []).length) { path[0][0] = "m", path[0][1] = n(path[0][1] - this.lastM[0]), path[0][2] = n(path[0][2] - this.lastM[1]), this.lastM[0] += path[0][1], this.lastM[1] += path[0][2], this.path.push(path[0]); for (var i = 1, e = path.length; i < e; i++)"m" === path[i][0] && (this.lastM[0] += path[i][1], this.lastM[1] += path[i][2]), this.path.push(path[i]) } }, o.prototype.endGroup = function (e) { if (this.ingroup = !1, 0 === this.path.length) return null; for (var path = "", i = 0; i < this.path.length; i++)path += this.path[i].join(" "); var t = this.paper.path({ path: path, stroke: "none", fill: this.controller.renderer.foregroundColor, class: this.controller.classes.generate(e) }); return this.path = [], t }; var c = new o; e.exports = c }, function (e, t, r) { var n = r(271), o = r(272), c = r(76), l = r(60), h = r(77), d = r(105), f = r(104), m = r(273), v = r(274), y = r(103), x = "MIDI is not supported in this browser.", w = "https://paulrosen.github.io/midi-js-soundfonts/abcjs/"; e.exports = function () { var e = this; e.audioBufferPossible = void 0, e.directSource = [], e.startTimeSec = void 0, e.pausedTimeSec = void 0, e.audioBuffers = [], e.duration = void 0, e.isRunning = !1, e.init = function (t) { t || (t = {}), c(t.audioContext); var r = l().currentTime; if (e.debugCallback = t.debugCallback, e.debugCallback && e.debugCallback("init called"), e.audioBufferPossible = e._deviceCapable(), !e.audioBufferPossible) return Promise.reject({ status: "NotSupported", message: x }); var n = t.options ? t.options : {}; e.soundFontUrl = n.soundFontUrl ? n.soundFontUrl : w, "/" !== e.soundFontUrl[e.soundFontUrl.length - 1] && (e.soundFontUrl += "/"), n.soundFontVolumeMultiplier ? e.soundFontVolumeMultiplier = n.soundFontVolumeMultiplier : "https://paulrosen.github.io/midi-js-soundfonts/FluidR3_GM/" === e.soundFontUrl || "https://paulrosen.github.io/midi-js-soundfonts/MusyngKite/" === e.soundFontUrl ? e.soundFontVolumeMultiplier = 5 : e.soundFontUrl === w ? e.soundFontVolumeMultiplier = .5 : e.soundFontVolumeMultiplier = 1, n.programOffsets ? e.programOffsets = n.programOffsets : e.soundFontUrl === w ? e.programOffsets = { violin: 113, trombone: 200 } : e.programOffsets = {}; var p = void 0 !== n.fadeLength ? parseInt(n.fadeLength, 10) : NaN; if (e.fadeLength = isNaN(p) ? 200 : p, p = void 0 !== n.noteEnd ? parseInt(n.noteEnd, 10) : NaN, e.noteEnd = isNaN(p) ? 0 : p, e.millisecondsPerMeasure = t.millisecondsPerMeasure ? t.millisecondsPerMeasure : t.visualObj ? t.visualObj.millisecondsPerMeasure(t.bpm) : 1e3, e.pan = n.pan, e.meterSize = 1, t.visualObj) { e.flattened = t.visualObj.setUpAudio(n), t.visualObj.getMeterFraction().den && (e.meterSize = t.visualObj.getMeterFraction().num / t.visualObj.getMeterFraction().den) } else { if (!t.sequence) return Promise.reject(new Error("Must pass in either a visualObj or a sequence")); e.flattened = t.sequence } e.sequenceCallback = n.sequenceCallback, e.callbackContext = n.callbackContext, e.onEnded = n.onEnded; var o = {}, h = [], m = f[0]; e.flattened.tracks.forEach((function (track) { track.forEach((function (e) { if ("program" === e.cmd && f[e.instrument] && (m = f[e.instrument]), void 0 !== e.pitch) { var t = e.pitch, r = d[t]; r ? (o[m] || (o[m] = {}), y[m] && y[m][r] ? h.push(m + ":" + r) : o[m][r] = !0) : console.log("Can't find note: ", t) } })) })), e.debugCallback && e.debugCallback("note gathering time = " + Math.floor(1e3 * (l().currentTime - r)) + "ms"), r = l().currentTime; var v = []; Object.keys(o).forEach((function (e) { Object.keys(o[e]).forEach((function (t) { v.push({ instrument: e, note: t }) })) })); for (var k = [], i = 0; i < v.length; i += 256)k.push(v.slice(i, i + 256)); return new Promise((function (t, n) { var o = { cached: h, error: [], loaded: [] }, c = 0, d = function () { c < k.length ? e._loadBatch(k[c], e.soundFontUrl, r).then((function (data) { r = l().currentTime, data && (data.error && (o.error = o.error.concat(data.error)), data.loaded && (o.loaded = o.loaded.concat(data.loaded))), c++, d() }), n) : t(o) }; d() })) }, e._loadBatch = function (t, r, o, c) { var h = []; return t.forEach((function (e) { h.push(n(r, e.instrument, e.note, l())) })), Promise.all(h).then((function (n) { e.debugCallback && e.debugCallback("mp3 load time = " + Math.floor(1e3 * (l().currentTime - o)) + "ms"); for (var h = [], d = [], f = [], m = [], i = 0; i < n.length; i++) { var v = n[i], y = v.instrument + ":" + v.name; "loaded" === v.status ? h.push(y) : "pending" === v.status ? f.push(y) : "cached" === v.status ? d.push(y) : m.push(y + " " + v.message) } if (f.length > 0) { if (c ? c *= 2 : c = 50, c < 9e4) return new Promise((function (t, n) { setTimeout((function () { var l = []; for (i = 0; i < f.length; i++)y = f[i].split(":"), l.push({ instrument: y[0], note: y[1] }); e._loadBatch(l, r, o, c).then((function (e) { t(e) })).catch((function (e) { n(e) })) }), c) })); for (var x = [], w = 0; w < t.length; w++)x.push(t[w].instrument + "/" + t[w].note); return Promise.reject(new Error("timeout attempting to load: " + x.join(", "))) } return Promise.resolve({ loaded: h, cached: d, error: m }) })).catch((function (e) { })) }, e.prime = function () { var t = e.fadeLength / 1e3; return e.isRunning = !1, e.audioBufferPossible ? (e.debugCallback && e.debugCallback("prime called"), new Promise((function (r) { var n = l().currentTime, c = e.millisecondsPerMeasure / 1e3 / e.meterSize; if (e.duration = e.flattened.totalDuration * c, e.duration <= 0) return e.audioBuffers = [], r({ status: "empty", seconds: 0 }); e.duration += t; var h = Math.floor(l().sampleRate * e.duration); e.stop(); var d = o(e.flattened); e.sequenceCallback && e.sequenceCallback(d, e.callbackContext); var f = function (e, t) { if (null == t) return null; var r = []; if (!t.length) { var n = parseFloat(t); if (n * (e - 1) > 2) return null; for (var o = e % 2 == 0, c = o ? 0 - n / 2 : 0, l = c + n, p = 0; p < e; p++)(o = p % 2 == 0) ? (r.push(c), c -= n) : (r.push(l), l += n); return r } if (e === t.length) { for (var h = !0, d = 0; d < t.length; d++) { var f = parseFloat(t[d]); f >= -1 && f <= 1 ? r.push(f) : h = !1 } if (h) return r } return null }(d.length, e.pan), m = {}; d.forEach((function (e, t) { var r = f && f.length > t ? f[t] : 0; e.forEach((function (e) { var t = e.instrument + ":" + e.pitch + ":" + e.volume + ":" + Math.round(1e3 * (e.end - e.start)) / 1e3 + ":" + r + ":" + c; m[t] || (m[t] = []), m[t].push(e.start) })) })); for (var y = [], x = l().createBuffer(2, h, l().sampleRate), w = 0; w < Object.keys(m).length; w++) { var k = Object.keys(m)[w], T = k.split(":"); T = { instrument: T[0], pitch: parseInt(T[1], 10), volume: parseInt(T[2], 10), len: parseFloat(T[3]), pan: parseFloat(T[4]), tempoMultiplier: parseFloat(T[5]) }, y.push(v(x, l().sampleRate, T, m[k], e.soundFontVolumeMultiplier, e.programOffsets[T.instrument], t, e.noteEnd / 1e3)) } e.audioBuffers = [x], e.debugCallback && (e.debugCallback("sampleRate = " + l().sampleRate), e.debugCallback("totalSamples = " + h), e.debugCallback("creationTime = " + Math.floor(1e3 * (l().currentTime - n)) + "ms")), Promise.all(y).then((function () { r({ status: "ok", seconds: 0 }) })) }))) : Promise.reject(new Error(x)) }, e.start = function () { if (!e.audioBufferPossible) throw new Error(x); e.debugCallback && e.debugCallback("start called"); var t = e.pausedTimeSec ? e.pausedTimeSec : 0; e._kickOffSound(t), e.startTimeSec = l().currentTime - t, e.pausedTimeSec = void 0, e.debugCallback && e.debugCallback("MIDI STARTED", e.startTimeSec) }, e.pause = function () { if (!e.audioBufferPossible) throw new Error(x); e.debugCallback && e.debugCallback("pause called"), e.stop(), e.pausedTimeSec = l().currentTime - e.startTimeSec }, e.resume = function () { e.start() }, e.seek = function (t) { var r = (e.duration - e.fadeLength / 1e3) * t; if (!e.audioBufferPossible) throw new Error(x); e.debugCallback && e.debugCallback("seek called sec=" + r), e.isRunning ? (e.stop(), e._kickOffSound(r)) : e.pausedTimeSec = r, e.pausedTimeSec = r }, e.stop = function () { e.isRunning = !1, e.pausedTimeSec = void 0, e.directSource.forEach((function (source) { try { source.stop() } catch (e) { console.log("direct source didn't stop:", e) } })), e.directSource = [] }, e.finished = function () { e.startTimeSec = void 0, e.pausedTimeSec = void 0, e.isRunning = !1 }, e.download = function () { return m(e) }, e._deviceCapable = function () { return !!h() || (console.warn(x), e.debugCallback && e.debugCallback(x), !1) }, e._kickOffSound = function (t) { e.isRunning = !0, e.directSource = [], e.audioBuffers.forEach((function (t, r) { e.directSource[r] = l().createBufferSource(), e.directSource[r].buffer = t, e.directSource[r].connect(l().destination) })), e.directSource.forEach((function (source) { source.start(0, t) })), e.onEnded && (e.directSource[0].onended = function () { e.onEnded(e.callbackContext) }) } } }, function (e, t) { e.exports = {} }, function (e, t) { e.exports = ["acoustic_grand_piano", "bright_acoustic_piano", "electric_grand_piano", "honkytonk_piano", "electric_piano_1", "electric_piano_2", "harpsichord", "clavinet", "celesta", "glockenspiel", "music_box", "vibraphone", "marimba", "xylophone", "tubular_bells", "dulcimer", "drawbar_organ", "percussive_organ", "rock_organ", "church_organ", "reed_organ", "accordion", "harmonica", "tango_accordion", "acoustic_guitar_nylon", "acoustic_guitar_steel", "electric_guitar_jazz", "electric_guitar_clean", "electric_guitar_muted", "overdriven_guitar", "distortion_guitar", "guitar_harmonics", "acoustic_bass", "electric_bass_finger", "electric_bass_pick", "fretless_bass", "slap_bass_1", "slap_bass_2", "synth_bass_1", "synth_bass_2", "violin", "viola", "cello", "contrabass", "tremolo_strings", "pizzicato_strings", "orchestral_harp", "timpani", "string_ensemble_1", "string_ensemble_2", "synth_strings_1", "synth_strings_2", "choir_aahs", "voice_oohs", "synth_choir", "orchestra_hit", "trumpet", "trombone", "tuba", "muted_trumpet", "french_horn", "brass_section", "synth_brass_1", "synth_brass_2", "soprano_sax", "alto_sax", "tenor_sax", "baritone_sax", "oboe", "english_horn", "bassoon", "clarinet", "piccolo", "flute", "recorder", "pan_flute", "blown_bottle", "shakuhachi", "whistle", "ocarina", "lead_1_square", "lead_2_sawtooth", "lead_3_calliope", "lead_4_chiff", "lead_5_charang", "lead_6_voice", "lead_7_fifths", "lead_8_bass_lead", "pad_1_new_age", "pad_2_warm", "pad_3_polysynth", "pad_4_choir", "pad_5_bowed", "pad_6_metallic", "pad_7_halo", "pad_8_sweep", "fx_1_rain", "fx_2_soundtrack", "fx_3_crystal", "fx_4_atmosphere", "fx_5_brightness", "fx_6_goblins", "fx_7_echoes", "fx_8_scifi", "sitar", "banjo", "shamisen", "koto", "kalimba", "bagpipe", "fiddle", "shanai", "tinkle_bell", "agogo", "steel_drums", "woodblock", "taiko_drum", "melodic_tom", "synth_drum", "reverse_cymbal", "guitar_fret_noise", "breath_noise", "seashore", "bird_tweet", "telephone_ring", "helicopter", "applause", "gunshot", "percussion"] }, function (e, t) { e.exports = { 21: "A0", 22: "Bb0", 23: "B0", 24: "C1", 25: "Db1", 26: "D1", 27: "Eb1", 28: "E1", 29: "F1", 30: "Gb1", 31: "G1", 32: "Ab1", 33: "A1", 34: "Bb1", 35: "B1", 36: "C2", 37: "Db2", 38: "D2", 39: "Eb2", 40: "E2", 41: "F2", 42: "Gb2", 43: "G2", 44: "Ab2", 45: "A2", 46: "Bb2", 47: "B2", 48: "C3", 49: "Db3", 50: "D3", 51: "Eb3", 52: "E3", 53: "F3", 54: "Gb3", 55: "G3", 56: "Ab3", 57: "A3", 58: "Bb3", 59: "B3", 60: "C4", 61: "Db4", 62: "D4", 63: "Eb4", 64: "E4", 65: "F4", 66: "Gb4", 67: "G4", 68: "Ab4", 69: "A4", 70: "Bb4", 71: "B4", 72: "C5", 73: "Db5", 74: "D5", 75: "Eb5", 76: "E5", 77: "F5", 78: "Gb5", 79: "G5", 80: "Ab5", 81: "A5", 82: "Bb5", 83: "B5", 84: "C6", 85: "Db6", 86: "D6", 87: "Eb6", 88: "E6", 89: "F6", 90: "Gb6", 91: "G6", 92: "Ab6", 93: "A6", 94: "Bb6", 95: "B6", 96: "C7", 97: "Db7", 98: "D7", 99: "Eb7", 100: "E7", 101: "F7", 102: "Gb7", 103: "G7", 104: "Ab7", 105: "A7", 106: "Bb7", 107: "B7", 108: "C8", 109: "Db8", 110: "D8", 111: "Eb8", 112: "E8", 113: "F8", 114: "Gb8", 115: "G8", 116: "Ab8", 117: "A8", 118: "Bb8", 119: "B8", 120: "C9", 121: "Db9" } }, , function (e, t, r) { "use strict"; var n = { name: "ClientOnly", functional: !0, props: { placeholder: String, placeholderTag: { type: String, default: "div" } }, render: function (e, t) { var r = t.parent, n = t.slots, o = t.props, c = n(), l = c.default; void 0 === l && (l = []); var h = c.placeholder; return r._isMounted ? l : (r.$once("hook:mounted", (function () { r.$forceUpdate() })), o.placeholderTag && (o.placeholder || h) ? e(o.placeholderTag, { class: ["client-only-placeholder"] }, o.placeholder || h) : l.length > 0 ? l.map((function () { return e(!1) })) : e(!1)) } }; e.exports = n }, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function (e, t, r) { var n = r(7), o = r(98), c = r(210), l = r(211), h = r(212), d = r(140), f = r(141), m = r(215); e.exports = function () { "use strict"; var e = new f, t = new m(e), r = new h; function v(e, t, r) { e.positioning || (e.positioning = {}), e.positioning[t] = r } function y(e, t, r) { e.fonts || (e.fonts = {}), e.fonts[t] = r } this.getTune = function () { var t = { formatting: e.formatting, lines: e.lines, media: e.media, metaText: e.metaText, version: e.version, addElementToEvents: e.addElementToEvents, addUsefulCallbackInfo: e.addUsefulCallbackInfo, getBarLength: e.getBarLength, getBeatLength: e.getBeatLength, getBeatsPerMeasure: e.getBeatsPerMeasure, getBpm: e.getBpm, getMeter: e.getMeter, getMeterFraction: e.getMeterFraction, getPickupLength: e.getPickupLength, getKeySignature: e.getKeySignature, getElementFromChar: e.getElementFromChar, makeVoicesArray: e.makeVoicesArray, millisecondsPerMeasure: e.millisecondsPerMeasure, setupEvents: e.setupEvents, setTiming: e.setTiming, setUpAudio: e.setUpAudio }; return e.lineBreaks && (t.lineBreaks = e.lineBreaks), e.visualTranspose && (t.visualTranspose = e.visualTranspose), t }; var header, x, w = { reset: function () { for (var e in this) this.hasOwnProperty(e) && "function" != typeof this[e] && delete this[e]; this.iChar = 0, this.key = { accidentals: [], root: "none", acc: "", mode: "" }, this.meter = null, this.origMeter = null, this.hasMainTitle = !1, this.default_length = .125, this.clef = { type: "treble", verticalPos: 0 }, this.next_note_duration = 0, this.start_new_line = !0, this.is_in_header = !0, this.is_in_history = !1, this.partForNextLine = {}, this.tempoForNextLine = [], this.havent_set_length = !0, this.voices = {}, this.staves = [], this.macros = {}, this.currBarNumber = 1, this.barCounter = {}, this.inTextBlock = !1, this.inPsBlock = !1, this.ignoredDecorations = [], this.textBlock = "", this.score_is_present = !1, this.inEnding = !1, this.inTie = [], this.inTieChord = {}, this.vocalPosition = "auto", this.dynamicPosition = "auto", this.chordPosition = "auto", this.ornamentPosition = "auto", this.volumePosition = "auto", this.openSlurs = [], this.freegchord = !1, this.endingHoldOver = {} }, differentFont: function (e, t) { return this[e].decoration !== t[e].decoration || (this[e].face !== t[e].face || (this[e].size !== t[e].size || (this[e].style !== t[e].style || this[e].weight !== t[e].weight))) }, addFormattingOptions: function (e, t, r) { "note" === r ? ("auto" !== this.vocalPosition && v(e, "vocalPosition", this.vocalPosition), "auto" !== this.dynamicPosition && v(e, "dynamicPosition", this.dynamicPosition), "auto" !== this.chordPosition && v(e, "chordPosition", this.chordPosition), "auto" !== this.ornamentPosition && v(e, "ornamentPosition", this.ornamentPosition), "auto" !== this.volumePosition && v(e, "volumePosition", this.volumePosition), this.differentFont("annotationfont", t) && y(e, "annotationfont", this.annotationfont), this.differentFont("gchordfont", t) && y(e, "gchordfont", this.gchordfont), this.differentFont("vocalfont", t) && y(e, "vocalfont", this.vocalfont), this.differentFont("tripletfont", t) && y(e, "tripletfont", this.tripletfont)) : "bar" === r && ("auto" !== this.dynamicPosition && v(e, "dynamicPosition", this.dynamicPosition), "auto" !== this.chordPosition && v(e, "chordPosition", this.chordPosition), "auto" !== this.ornamentPosition && v(e, "ornamentPosition", this.ornamentPosition), "auto" !== this.volumePosition && v(e, "volumePosition", this.volumePosition), this.differentFont("measurefont", t) && y(e, "measurefont", this.measurefont), this.differentFont("repeatfont", t) && y(e, "repeatfont", this.repeatfont)) }, duplicateStartEndingHoldOvers: function () { this.endingHoldOver = { inTie: [], inTieChord: {} }; for (var i = 0; i < this.inTie.length; i++) { this.endingHoldOver.inTie.push([]); for (var e = 0; e < this.inTie[i].length; e++)this.endingHoldOver.inTie[i].push(this.inTie[i][e]) } for (var t in this.inTieChord) this.inTieChord.hasOwnProperty(t) && (this.endingHoldOver.inTieChord[t] = this.inTieChord[t]) }, restoreStartEndingHoldOvers: function () { if (this.endingHoldOver.inTie) { this.inTie = [], this.inTieChord = {}; for (var i = 0; i < this.endingHoldOver.inTie.length; i++) { this.inTie.push([]); for (var e = 0; e < this.endingHoldOver.inTie[i].length; e++)this.inTie[i].push(this.endingHoldOver.inTie[i][e]) } for (var t in this.endingHoldOver.inTieChord) this.endingHoldOver.inTieChord.hasOwnProperty(t) && (this.inTieChord[t] = this.endingHoldOver.inTieChord[t]) } } }, k = function (e) { var t = n.gsub(e, "", " "); return t = n.gsub(t, "&", "&amp;"), t = n.gsub(t, "<", "&lt;"), n.gsub(t, ">", "&gt;") }, T = function (e, line, r) { line || (line = " "); var n = line.charAt(r); " " === n && (n = "SPACE"); var o, c = k(line.substring(0, r)) + '<span style="text-decoration:underline;font-size:1.3em;font-weight:bold;">' + n + "</span>" + k(line.substring(r + 1)); !function (e) { w.warnings || (w.warnings = []), w.warnings.push(e) }("Music Line:" + t.getNumLines() + ":" + (r + 1) + ": " + e + ":  " + c), o = { message: e, line: line, startChar: w.iChar + r, column: r }, w.warningObjects || (w.warningObjects = []), w.warningObjects.push(o) }; this.getWarnings = function () { return w.warnings }, this.getWarningObjects = function () { return w.warningObjects }; var C = function (line) { var e = header.parseHeader(line); e.regular && x.parseMusic(e.str), e.newline && x.startNewLine(), e.words && function (line, e) { if (line) { "-" !== (e = n.strip(e)).charAt(e.length - 1) && (e += " "); for (var t = [], o = 0, c = !1, l = function (i) { var l = n.strip(e.substring(o, i)); if (o = i + 1, l.length > 0) { c && (l = n.gsub(l, "~", " ")); var div = e.charAt(i); return "_" !== div && "-" !== div && (div = " "), t.push({ syllable: r.translateString(l), divider: div }), c = !1, !0 } return !1 }, i = 0; i < e.length; i++)switch (e.charAt(i)) { case " ": case "": l(i); break; case "-": !l(i) && t.length > 0 && (n.last(t).divider = "-", t.push({ skip: !0, to: "next" })); break; case "_": l(i), t.push({ skip: !0, to: "slur" }); break; case "*": l(i), t.push({ skip: !0, to: "next" }); break; case "|": l(i), t.push({ skip: !0, to: "bar" }); break; case "~": c = !0 }n.each(line, (function (e) { if (0 !== t.length) if (t[0].skip) { switch (t[0].to) { case "next": case "slur": "note" === e.el_type && null !== e.pitches && t.shift(); break; case "bar": "bar" === e.el_type && t.shift() }"bar" !== e.el_type && (void 0 === e.lyric ? e.lyric = [{ syllable: "", divider: " " }] : e.lyric.push({ syllable: "", divider: " " })) } else if ("note" === e.el_type && void 0 === e.rest) { var r = t.shift(); r.syllable && (r.syllable = r.syllable.replace(/ +/g, "Â ")), void 0 === e.lyric ? e.lyric = [r] : e.lyric.push(r) } })) } else T("Can't add words before the first line of music", line, 0) }(t.getCurrentVoice(), line.substring(2)), e.symbols && function (line, e) { if (line) { "-" !== (e = n.strip(e)).charAt(e.length - 1) && (e += " "); for (var t = [], o = 0, c = !1, l = function (i) { var l = n.strip(e.substring(o, i)); if (o = i + 1, l.length > 0) { c && (l = n.gsub(l, "~", " ")); var div = e.charAt(i); return "_" !== div && "-" !== div && (div = " "), t.push({ syllable: r.translateString(l), divider: div }), c = !1, !0 } return !1 }, i = 0; i < e.length; i++)switch (e.charAt(i)) { case " ": case "": l(i); break; case "-": !l(i) && t.length > 0 && (n.last(t).divider = "-", t.push({ skip: !0, to: "next" })); break; case "_": l(i), t.push({ skip: !0, to: "slur" }); break; case "*": l(i), t.push({ skip: !0, to: "next" }); break; case "|": l(i), t.push({ skip: !0, to: "bar" }); break; case "~": c = !0 }n.each(line, (function (e) { if (0 !== t.length) if (t[0].skip) switch (t[0].to) { case "next": case "slur": "note" === e.el_type && null !== e.pitches && t.shift(); break; case "bar": "bar" === e.el_type && t.shift() } else if ("note" === e.el_type && void 0 === e.rest) { var r = t.shift(); void 0 === e.lyric ? e.lyric = [r] : e.lyric.push(r) } })) } else T("Can't add symbols before the first line of music", line, 0) }(t.getCurrentVoice(), line.substring(2)), e.recurse && C(e.str) }; function A(e, t) { e.push({ el_type: "hint" }); for (var i = 0; i < t.length; i++) { var element = t[i], r = n.clone(element); if (e.push(r), "bar" === element.el_type) return } } function S(e, t) { for (var i = 0; i < e.length; i++) { var r = e[i], n = t[i]; if (n) for (var o = 0; o < n.voices.length; o++) { var c = n.voices[o], l = r.voices[o]; l && A(l, c) } } } this.parse = function (h, f, m) { f || (f = {}), m || (m = 0), t.reset(), header = new c(r, T, w, e, t), x = new l(r, T, w, e, t, header), f.print && (e.media = "print"), w.reset(), w.iChar = m, f.visualTranspose ? (w.globalTranspose = parseInt(f.visualTranspose), 0 === w.globalTranspose ? w.globalTranspose = void 0 : t.setVisualTranspose(f.visualTranspose)) : w.globalTranspose = void 0, f.lineBreaks && (w.lineBreaks = f.lineBreaks), header.reset(r, T, w, e), h = n.gsub(h, "\r\n", "\n"), h = n.gsub(h, "\r", "\n"); var v = (h += "\n").split("\n\\"); if (v.length > 1) { for (var y = 1; y < v.length; y++)for (; v[y].length > 0 && "\n" !== v[y][0];)v[y] = v[y].substr(1), v[y - 1] += " "; h = v.join("  ") } var k = (h = h.replace(/\\([ \t]*)(%.*)*\n/g, (function (e, t, r) { return t + " " + (r ? "                                                                                                                                                                                                     ".substring(0, r.length) : "") }))).split("\n"); 0 === n.last(k).length && k.pop(); try { f.format && o.globalFormatting(f.format), n.each(k, (function (line) { if (f.header_only && !1 === w.is_in_header) throw "normal_abort"; if (f.stop_on_warning && w.warnings) throw "normal_abort"; if (w.is_in_history) ":" === line.charAt(1) ? (w.is_in_history = !1, C(line)) : t.addMetaText("history", r.translateString(r.stripComment(line))); else if (w.inTextBlock) n.startsWith(line, "%%endtext") ? (t.addText(w.textBlock), w.inTextBlock = !1) : n.startsWith(line, "%%") ? w.textBlock += line.substring(2) + "\n" : w.textBlock += line + "\n"; else if (w.inPsBlock) n.startsWith(line, "%%endps") ? w.inPsBlock = !1 : w.textBlock += " " + line; else { var e = w.is_in_header; C(line), e && !w.is_in_header && (t.setRunningFont("annotationfont", w.annotationfont), t.setRunningFont("gchordfont", w.gchordfont), t.setRunningFont("tripletfont", w.tripletfont), t.setRunningFont("vocalfont", w.vocalfont)) } w.iChar += line.length + 1 })); var A = 792, _ = 612; switch (w.papersize) { case "legal": A = 1008, _ = 612; break; case "A4": A = 842.4, _ = 597.6 }if (w.landscape) { var E = A; A = _, _ = E } w.openSlurs = t.cleanUp(_, A, w.barsperstaff, w.staffnonote, w.openSlurs) } catch (e) { if ("normal_abort" !== e) throw e } f.hint_measures && function () { for (var i = 0; i < e.lines.length; i++) { var line = e.lines[i].staff; if (line) { for (var t = i + 1; t < e.lines.length && void 0 === e.lines[t].staff;)t++; t < e.lines.length && S(line, e.lines[t].staff) } } }(), d.wrapLines(e, w.lineBreaks) } } }, function (e, t) { var r = {}, n = { C: 0, "C#": 1, Db: 1, D: 2, "D#": 3, Eb: 3, E: 4, F: 5, "F#": 6, Gb: 6, G: 7, "G#": 8, Ab: 8, A: 9, "A#": 10, Bb: 10, B: 11 }, o = ["C", "Db", "D", "Eb", "E", "F", "F#", "G", "Ab", "A", "Bb", "B"], c = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "Bb", "B"]; r.keySignature = function (e, t, r, l, h, d) { if ("perc" === e.clef.type) return { accidentals: t[r], root: l, acc: h }; d || (d = 0), e.localTransposeVerticalMovement = 0, e.localTransposePreferFlats = !1; var f = t[r]; if (!f) return e.key; if (e.localTranspose = (e.globalTranspose ? e.globalTranspose : 0) + d, !e.localTranspose) return { accidentals: f, root: l, acc: h }; if (e.globalTransposeOrigKeySig = f, e.localTranspose % 12 == 0) return e.localTransposeVerticalMovement = e.localTranspose / 12 * 7, { accidentals: f, root: l, acc: h }; var m = r[0]; "b" === r[1] || "#" === r[1] ? (m += r[1], r = r.substr(2)) : r = r.substr(1); for (var v = n[m] + e.localTranspose; v < 0;)v += 12; v > 11 && (v %= 12); var y = "m" === r[0] ? c[v] : o[v], x = y + r, w = t[x]; w.length > 0 && "flat" === w[0].acc && (e.localTransposePreferFlats = !0); var k = x.charCodeAt(0) - m.charCodeAt(0); return e.localTranspose > 0 ? k < 0 ? k += 7 : 0 === k && ("#" !== m[1] && "b" !== x[1] || (k += 7)) : e.localTranspose < 0 && (k > 0 ? k -= 7 : 0 === k && ("b" !== m[1] && "#" !== x[1] || (k -= 7))), e.localTranspose > 0 ? e.localTransposeVerticalMovement = k + 7 * Math.floor(e.localTranspose / 12) : e.localTransposeVerticalMovement = k + 7 * Math.ceil(e.localTranspose / 12), { accidentals: w, root: y[0], acc: y.length > 1 ? y[1] : "" } }; var l = ["C", "Câ™¯", "D", "Dâ™¯", "E", "F", "Fâ™¯", "G", "Gâ™¯", "A", "Aâ™¯", "B"], h = ["C", "Dâ™­", "D", "Eâ™­", "E", "F", "Gâ™­", "G", "Aâ™­", "A", "Bâ™­", "B"], d = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"], f = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"]; r.chordName = function (e, t) { if (e.localTranspose && e.localTranspose % 12 != 0) { for (var r = e.localTranspose; r < 0;)r += 12; r > 11 && (r %= 12); for (var n = (t = (t = (t = (t = (t = (t = (t = (t = e.freegchord ? (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = t.replace(/Cb/g, "`~11`")).replace(/Db/g, "`~1`")).replace(/Eb/g, "`~3`")).replace(/Fb/g, "`~4`")).replace(/Gb/g, "`~6`")).replace(/Ab/g, "`~8`")).replace(/Bb/g, "`~10`")).replace(/C#/g, "`~1`")).replace(/D#/g, "`~3`")).replace(/E#/g, "`~5`")).replace(/F#/g, "`~6`")).replace(/G#/g, "`~8`")).replace(/A#/g, "`~10`")).replace(/B#/g, "`~0`") : (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = t.replace(/Câ™­/g, "`~11`")).replace(/Dâ™­/g, "`~1`")).replace(/Eâ™­/g, "`~3`")).replace(/Fâ™­/g, "`~4`")).replace(/Gâ™­/g, "`~6`")).replace(/Aâ™­/g, "`~8`")).replace(/Bâ™­/g, "`~10`")).replace(/Câ™¯/g, "`~1`")).replace(/Dâ™¯/g, "`~3`")).replace(/Eâ™¯/g, "`~5`")).replace(/Fâ™¯/g, "`~6`")).replace(/Gâ™¯/g, "`~8`")).replace(/Aâ™¯/g, "`~10`")).replace(/Bâ™¯/g, "`~0`")).replace(/C/g, "`~0`")).replace(/D/g, "`~2`")).replace(/E/g, "`~4`")).replace(/F/g, "`~5`")).replace(/G/g, "`~7`")).replace(/A/g, "`~9`")).replace(/B/g, "`~11`")).split("`"), i = 0; i < n.length; i++)if ("~" === n[i][0]) { var o = parseInt(n[i].substr(1), 10); (o += r) > 11 && (o -= 12), e.freegchord ? n[i] = e.localTransposePreferFlats ? f[o] : d[o] : n[i] = e.localTransposePreferFlats ? h[o] : l[o] } t = n.join("") } return t }; var m = ["c", "d", "e", "f", "g", "a", "b"]; var v = { dblflat: -2, flat: -1, natural: 0, sharp: 1, dblsharp: 2 }, y = { "-2": "dblflat", "-1": "flat", 0: "natural", 1: "sharp", 2: "dblsharp" }; r.note = function (e, t) { if (e.localTranspose && "perc" !== e.clef.type) { var r = t.pitch; if (t.pitch = t.pitch + e.localTransposeVerticalMovement, t.accidental) { var n = function (e, t, r, n, o) { for (var c = m[(e + 49) % 7], l = 0, i = 0; i < n.length; i++)n[i].note.toLowerCase() === c && (l = v[n[i].acc]); for (var h = v[r] - l, d = m[(t + 49) % 7], f = 0, y = 0; y < o.accidentals.length; y++)o.accidentals[y].note.toLowerCase() === d && (f = v[o.accidentals[y].acc]); var x = h + f; return x < -2 && (t--, x += "c" === d || "f" === d ? 1 : 2), x > 2 && (t++, x -= "b" === d || "e" === d ? 1 : 2), [t, x] }(r, t.pitch, t.accidental, e.globalTransposeOrigKeySig, e.targetKey); t.pitch = n[0], t.accidental = y[n[1]] } } }, e.exports = r }, function (e, t) { function r(e, t) { for (var r = [], n = [], o = 0, i = 0; i < e.length; i++) { var c = e[i], l = o + c; if (l < t) o = l; else t - o < l - t && o > 0 ? (r.push(i - 1), n.push(Math.round(o - c)), o = c) : i < e.length - 1 && (r.push(i), n.push(Math.round(o)), o = 0) } return n.push(Math.round(o)), { lineBreaks: r, totals: n } } function n(e) { for (var t = [], i = 0; i < e.length; i++)t.push(e[i]); return t } function o(e, t, r, o, c, l, h, d, f, m, v) { for (var i = m; i < e.length; i++) { var y = e[i]; r += y, o += y; var x = Math.abs(r - t[d]); if (Math.abs(x - l) < t[0] / 10) if (x < l) { var w = n(c), k = n(f); k.push(i - 1), w.push(o - y), v.push({ accumulator: r, lineAccumulator: y, lineWidths: w, lastVariance: Math.abs(r - t[d + 1]), highestVariance: Math.max(h, l), currLine: d + 1, lineBreaks: k, startIndex: i + 1 }) } else x > l && i < e.length - 1 && (w = n(c), k = n(f), v.push({ accumulator: r, lineAccumulator: o, lineWidths: w, lastVariance: x, highestVariance: Math.max(h, x), currLine: d, lineBreaks: k, startIndex: i + 1 })); x > l ? (f.push(i - 1), d++, h = Math.max(h, l), l = Math.abs(r - t[d]), c.push(o - y), o = y) : l = x } c.push(o) } function c(e, t, r, n) { for (var c = Math.ceil(e.total / t), l = Math.floor(e.total / c), h = [], i = 0; i < c; i++)h.push(l * (i + 1)); var d = []; d.push({ accumulator: 0, lineAccumulator: 0, lineWidths: [], lastVariance: 999999, highestVariance: 0, currLine: 0, lineBreaks: [], startIndex: 0 }); for (var f = 0; f < d.length;)o(e.measureWidths, h, d[f].accumulator, d[f].lineAccumulator, d[f].lineWidths, d[f].lastVariance, d[f].highestVariance, d[f].currLine, d[f].lineBreaks, d[f].startIndex, d), f++; for (i = 0; i < d.length; i++) { var m = d[i]; m.variances = [], m.aveVariance = 0; for (var v = 0; v < m.lineWidths.length; v++) { var y = m.lineWidths[v]; m.variances.push(y - h[0]), m.aveVariance += Math.abs(y - h[0]) } m.aveVariance = m.aveVariance / m.lineWidths.length, n.attempts.push({ type: "optimizeLineWidths", lineBreaks: m.lineBreaks, variances: m.variances, aveVariance: m.aveVariance, widths: e.measureWidths }) } var x = 9999999, w = -1; for (i = 0; i < d.length; i++)(m = d[i]).aveVariance < x && (x = m.aveVariance, w = i); return { failed: !1, lineBreaks: d[w].lineBreaks, variance: d[w].highestVariance } } function l(e, t, r) { for (var n = [], o = [], c = 0, l = !1, i = 0; i < e.length; i++)(c += e[i]) > t && (l = !0), i % r == r - 1 && (i !== e.length - 1 && n.push(i), o.push(Math.round(c)), c = 0); return { failed: l, totals: o, lineBreaks: n } } e.exports = { wrapLines: function (e, t) { if (t && 0 !== e.lines.length) { var r = function (e) { for (var t = [], r = !0, i = 0; i < e.length; i++) { var line = e[i]; if (line.staff) if (r) t.push(line), r = !1; else for (var output = t[t.length - 1], n = line.staff, o = 0; o < n.length; o++) { output.staff.length <= o && output.staff.push({ voices: [] }); for (var c = n[o].voices, l = 0; l < c.length; l++) { output.staff[o].voices.length < l && output.staff[o].voices.push([]); var h = c[l]; output.staff[o].voices[l] = output.staff[o].voices[l].concat(h) } } else r = !0, t.push(line) } return t }(e.lines), n = function (e, t) { for (var r = [], n = 0, o = 0, c = 0, i = 0; i < e.length; i++) { var line = e[i]; if (line.staff) { var l = o, h = t[n]; n++; for (var d = 0; d < line.staff.length; d++)for (var f = line.staff[d], m = 0; m < f.voices.length; m++) { c = l; for (var v = 0, y = 0, x = f.voices[m], w = 0, k = 0; k < x.length; k++) { "bar" === x[k].el_type && (h[y] === v && (r.push({ ogLine: i, line: c, staff: d, voice: m, start: w, end: k }), w = k + 1, c++, o = Math.max(o, c), y++), v++) } r.push({ ogLine: i, line: c, staff: d, voice: m, start: w, end: x.length }), c++, o = Math.max(o, c) } } else r.push({ ogLine: i, line: c }), c++, o = Math.max(o, c) } return r }(r, t); e.lines = function (e, t) { for (var r = [], n = [], i = 0; i < t.length; i++) { var o = t[i]; if (e[o.ogLine].staff) { var c = e[o.ogLine].staff[o.staff]; if (r[o.line] || (r[o.line] = { staff: [] }), !r[o.line].staff[o.staff]) { r[o.line].staff[o.staff] = { voices: [] }; for (var l = Object.keys(c), h = 0; h < l.length; h++) { var d = "voices" === l[h]; "meter" === l[h] && 0 !== o.line && (d = !0), d || (r[o.line].staff[o.staff][l[h]] = c[l[h]]) } n[o.staff] && (r[o.line].staff[o.staff].key = n[o.staff]) } r[o.line].staff[o.staff].voices[o.voice] || (r[o.line].staff[o.staff].voices[o.voice] = []), r[o.line].staff[o.staff].voices[o.voice] = e[o.ogLine].staff[o.staff].voices[o.voice].slice(o.start, o.end + 1); for (var f = r[o.line].staff[o.staff].voices[o.voice], m = f.length - 1; m >= 0; m--)if ("key" === f[m].el_type) { n[o.staff] = { root: f[m].root, acc: f[m].acc, mode: f[m].mode, accidentals: f[m].accidentals.filter((function (e) { return "natural" !== e.acc })) }; break } } else r[o.line] = e[o.ogLine] } for (var v = 0; v < r.length; v++)r[v].staff && (r[v].staff = r[v].staff.filter((function (e) { return null != e }))); return r }(r, n), e.lineBreaks = n } }, calcLineWraps: function (e, t, n) { if (0 === t.length || n.staffwidth < t[0].left) return { reParse: !1, explanation: "Staff width is narrower than the margin", revisedParams: n }; var o = n.scale ? Math.max(n.scale, .1) : 1, h = n.wrap.minSpacing ? Math.max(parseFloat(n.wrap.minSpacing), 1) : 1, d = n.wrap.minSpacingLimit ? Math.max(parseFloat(n.wrap.minSpacingLimit), 1) : h - .1, f = n.wrap.maxSpacing ? Math.max(parseFloat(n.wrap.maxSpacing), 1) : void 0; n.wrap.lastLineLimit && !f && (f = Math.max(parseFloat(n.wrap.lastLineLimit), 1)); for (var m = n.wrap.preferredMeasuresPerLine ? Math.max(parseInt(n.wrap.preferredMeasuresPerLine, 10), 0) : void 0, v = [], y = [], s = 0; s < t.length; s++) { var section = t[s], x = n.staffwidth - section.left, w = x / h / o, k = x / d / o, T = { widths: section, lineBreakPoint: w, minLineSize: x / f / o, attempts: [], staffWidth: n.staffwidth, minWidth: Math.round(k) }, C = null; if (m) { var A = l(section.measureWidths, w, m); T.attempts.push({ type: "Fixed Measures Per Line", preferredMeasuresPerLine: m, lineBreaks: A.lineBreaks, failed: A.failed, totals: A.totals }), A.failed || (C = A.lineBreaks) } if (!C) { var S = r(section.measureWidths, w); T.attempts.push({ type: "Free Form", lineBreaks: S.lineBreaks, totals: S.totals }), (C = S.lineBreaks).length > 0 && section.measureWidths.length < 25 && (S = c(section, w, 0, T), T.attempts.push({ type: "Optimize", failed: S.failed, reason: S.reason, lineBreaks: S.lineBreaks, totals: S.totals }), S.failed || (C = S.lineBreaks)) } v.push(C), y.push(T) } var _ = function (e, t, r) { var n = { lineBreaks: e, staffwidth: t }; for (var o in r) r.hasOwnProperty(o) && "wrap" !== o && "staffwidth" !== o && (n[o] = r[o]); return { revisedParams: n } }(v, n.staffwidth, n); return _.explanation = y, _.reParse = !0, _ } } }, function (e, t, r) { var n = r(7), o = r(9), c = r(213), l = r(214); e.exports = function () { function e(e, t) { for (; t < e.length && null === e[t].left;)t++; return e[t] } this.getBeatLength = function () { var meter = this.getMeterFraction(), e = 1; return (6 === meter.num || 9 === meter.num || 12 === meter.num || 3 === meter.num && 8 === meter.den) && (e = 3), e / meter.den }, this.getPickupLength = function () { var e = this.getBarLength(), t = function (e, t) { for (var r = 0, i = 0; i < e.length; i++)if (e[i].staff) for (var n = 0; n < e[i].staff.length; n++)for (var o = 0; o < e[i].staff[n].voices.length; o++)for (var c = e[i].staff[n].voices[o], l = 1, h = 0; h < c.length; h++) { var d = c[h].rest && "spacer" === c[h].rest.type; if (c[h].startTriplet && (l = c[h].tripletMultiplier), c[h].duration && !d && "tempo" !== c[h].el_type && (r += c[h].duration * l), c[h].endTriplet && (l = 1), r >= t && (r -= t), "bar" === c[h].el_type) return r } return r }(this.lines, e); return t < 1e-8 || e - t < 1e-8 ? 0 : t }, this.getBarLength = function () { var meter = this.getMeterFraction(); return meter.num / meter.den }, this.millisecondsPerMeasure = function (e) { var t; if (e) t = e; else { var r = this.metaText ? this.metaText.tempo : null; t = this.getBpm(r) } return t <= 0 && (t = 1), 6e4 * (this.getBeatsPerMeasure() / t) }, this.getBeatsPerMeasure = function () { var e = this.getBeatLength(); return this.getBarLength() / e }, this.getMeter = function () { for (var i = 0; i < this.lines.length; i++) { var line = this.lines[i]; if (line.staff) for (var e = 0; e < line.staff.length; e++) { var meter = line.staff[e].meter; if (meter) return meter } } return { type: "common_time" } }, this.getMeterFraction = function () { var meter = this.getMeter(), e = 4, t = 4; return meter && ("specified" === meter.type ? (e = parseInt(meter.value[0].num, 10), t = parseInt(meter.value[0].den, 10)) : "cut_time" === meter.type ? (e = 2, t = 2) : "common_time" === meter.type && (e = 4, t = 4)), this.meter = { num: e, den: t }, this.meter }, this.getKeySignature = function () { for (var i = 0; i < this.lines.length; i++) { var line = this.lines[i]; if (line.staff) for (var e = 0; e < line.staff.length; e++)if (line.staff[e].key) return line.staff[e].key } return {} }, this.getElementFromChar = function (e) { for (var i = 0; i < this.lines.length; i++) { var line = this.lines[i]; if (line.staff) for (var t = 0; t < line.staff.length; t++)for (var r = line.staff[t], n = 0; n < r.voices.length; n++)for (var o = r.voices[n], c = 0; c < o.length; c++) { var l = o[c]; if (l.startChar && l.endChar && l.startChar <= e && l.endChar > e) return l } } return null }, this.addElementToEvents = function (e, element, t, r, o, line, c, l, h, d) { if (element.hint) return { isTiedState: void 0, duration: 0 }; var f = element.durationClass ? element.durationClass : element.duration; if (element.abcelem.rest && "spacer" === element.abcelem.rest.type && (f = 0), f > 0) { for (var m = [], i = 0; i < element.elemset.length; i++)null !== element.elemset[i] && m.push(element.elemset[i]); var v = element.startTie; if (void 0 !== h) e["event" + h].elements.push(m), d && (e["event" + t] || (e["event" + t] = { type: "event", milliseconds: t, line: line, measureNumber: c, top: r, height: o, left: null, width: 0, elements: [], startChar: null, endChar: null, startCharArray: [], endCharArray: [] }), e["event" + t].measureStart = !0, d = !1), v || (h = void 0); else { if (e["event" + t]) { if (e["event" + t].left ? e["event" + t].left = Math.min(e["event" + t].left, element.x) : e["event" + t].left = element.x, e["event" + t].elements.push(m), e["event" + t].startCharArray.push(element.abcelem.startChar), e["event" + t].endCharArray.push(element.abcelem.endChar), null === e["event" + t].startChar && (e["event" + t].startChar = element.abcelem.startChar), null === e["event" + t].endChar && (e["event" + t].endChar = element.abcelem.endChar), element.abcelem.midiPitches && element.abcelem.midiPitches.length) { e["event" + t].midiPitches || (e["event" + t].midiPitches = []); for (i = 0; i < element.abcelem.midiPitches.length; i++)e["event" + t].midiPitches.push(element.abcelem.midiPitches[i]) } if (element.abcelem.midiGraceNotePitches && element.abcelem.midiGraceNotePitches.length) { e["event" + t].midiGraceNotePitches || (e["event" + t].midiGraceNotePitches = []); for (var y = 0; y < element.abcelem.midiGraceNotePitches.length; y++)e["event" + t].midiGraceNotePitches.push(element.abcelem.midiGraceNotePitches[y]) } } else e["event" + t] = { type: "event", milliseconds: t, line: line, measureNumber: c, top: r, height: o, left: element.x, width: element.w, elements: [m], startChar: element.abcelem.startChar, endChar: element.abcelem.endChar, startCharArray: [element.abcelem.startChar], endCharArray: [element.abcelem.endChar], midiPitches: element.abcelem.midiPitches ? n.cloneArray(element.abcelem.midiPitches) : [] }, element.abcelem.midiGraceNotePitches && (e["event" + t].midiGraceNotePitches = n.cloneArray(element.abcelem.midiGraceNotePitches)); d && (e["event" + t].measureStart = !0, d = !1), v && (h = t) } } return { isTiedState: h, duration: f / l, nextIsBar: d || "bar" === element.type } }, this.makeVoicesArray = function () { for (var e = [], t = [], r = {}, line = 0; line < this.engraver.staffgroups.length; line++)for (var n = this.engraver.staffgroups[line], c = n.staffs[0], l = c.absoluteY, h = l - c.top * o.STEP, d = n.staffs[n.staffs.length - 1], f = (l = d.absoluteY) - d.bottom * o.STEP - h, m = n.voices, v = 0; v < m.length; v++) { var y = !1; e[v] || (e[v] = []), void 0 === t[v] && (t[v] = 0); for (var x = m[v].children, w = 0; w < x.length; w++)"tempo" === x[w].type && (r[t[v]] = this.getBpm(x[w].abcelem)), e[v].push({ top: h, height: f, line: n.line, measureNumber: t[v], elem: x[w] }), "bar" === x[w].type && y && t[v]++, "note" !== x[w].type && "rest" !== x[w].type || (y = !0) } return this.tempoLocations = r, e }, this.setupEvents = function (t, r, n, o) { o || (o = 1); for (var c, l = [], h = {}, time = t, d = !0, f = this.makeVoicesArray(), m = 0; m < f.length; m++) { var v = time, y = Math.round(1e3 * v), x = 0, w = -1, k = f[m], T = n; r = this.getBeatLength() * T / 60; for (var C = -1, A = 0; A < k.length; A++) { var S = k[A].measureNumber; C !== S && this.tempoLocations[S] && (T = this.tempoLocations[S], r = o * this.getBeatLength() * T / 60, C = S); var _, element = k[A].elem, E = this.addElementToEvents(h, element, y, k[A].top, k[A].height, k[A].line, k[A].measureNumber, r, c, d); if (c = E.isTiedState, d = E.nextIsBar, v += E.duration, element.duration > 0 && h["event" + y] && (_ = "event" + y), y = Math.round(1e3 * v), "bar" === element.type) { var M = element.abcelem.type, N = "bar_right_repeat" === M || "bar_dbl_repeat" === M, B = "1" === element.abcelem.startEnding, P = "bar_left_repeat" === M || "bar_dbl_repeat" === M || "bar_right_repeat" === M; if (N) { A > 0 && (h[_].endX = element.x), -1 === w && (w = A); var L = 0; C = -1; for (var H = x; H < w; H++) { C !== (S = k[H].measureNumber) && this.tempoLocations[S] && (T = this.tempoLocations[S], r = o * this.getBeatLength() * T / 60, C = S); var O = k[H].elem; c = (E = this.addElementToEvents(h, O, y, k[H].top, k[H].height, k[H].line, k[H].measureNumber, r, c, d)).isTiedState, d = E.nextIsBar, v += E.duration, L = y, y = Math.round(1e3 * v) } h["event" + L] && (h["event" + L].endX = k[w].elem.x), d = !0, w = -1 } B && (w = A), P && (x = A) } } } return function (e) { for (var t, r, n, o, c = e.length - 1; c >= 0; c--) { var l = e[c]; "bar" === l.type ? (l.top = n, l.nextTop = t, t = n, l.bottom = o, l.nextBottom = r, r = o) : "event" === l.type && (n = l.top, o = l.top + l.height) } }(l = function (e) { var t = []; for (var r in e) e.hasOwnProperty(r) && t.push(e[r]); return t.sort((function (a, b) { var e = a.milliseconds - b.milliseconds; return 0 !== e ? e : "bar" === a.type ? -1 : 1 })) }(h)), function (t, r) { if (r.length < 1) return; for (var i = 0; i < r.length - 1; i++) { var n = r[i], o = e(r, i + 1); if (null !== n.left) { var c = o && n.top === o.top ? o.left : t[n.line].staffGroup.w; void 0 !== n.endX ? c > n.left && (n.endX = Math.min(n.endX, c)) : n.endX = c } } var l = r[r.length - 1]; l.endX = t[l.line].staffGroup.w }(this.lines, l), l.push({ type: "end", milliseconds: y }), this.addUsefulCallbackInfo(l, T * o), l }, this.addUsefulCallbackInfo = function (e, t) { for (var r = this.millisecondsPerMeasure(t), i = 0; i < e.length; i++) { e[i].millisecondsPerMeasure = r } }, this.getBpm = function (e) { var t; if (e) { t = e.bpm; var r = this.getBeatLength(); t = t * (e.duration && e.duration.length > 0 ? e.duration[0] : r) / r } if (!t) { t = 180; var meter = this.getMeterFraction(); meter && 3 !== meter.num && meter.num % 3 == 0 && (t = 120) } return t }, this.setTiming = function (e, t) { if (t = t || 0, !this.engraver || !this.engraver.staffgroups) return console.log("setTiming cannot be called before the tune is drawn."), void (this.noteTimings = []); var r = this.metaText ? this.metaText.tempo : null, n = this.getBpm(r), o = 1; e ? r && (o = e / n) : e = n; var c = this.getBeatLength(), l = e / 60, h = this.getBarLength() / c * t / l; h && (h -= this.getPickupLength() / c / l); var d = c * l; return this.noteTimings = this.setupEvents(h, d, e, o), this.noteTimings }, this.setUpAudio = function (e) { e || (e = {}); var t = c(this, e); return l(t, e, this.formatting.percmap) } } }, function (e, t) { var r = { f0: "_C", n0: "=C", s0: "^C", x0: "C", f1: "_D", n1: "=D", s1: "^D", x1: "D", f2: "_E", n2: "=E", s2: "^E", x2: "E", f3: "_F", n3: "=F", s3: "^F", x3: "F", f4: "_G", n4: "=G", s4: "^G", x4: "G", f5: "_A", n5: "=A", s5: "^A", x5: "A", f6: "_B", n6: "=B", s6: "^B", x6: "B", f7: "_c", n7: "=c", s7: "^c", x7: "c", f8: "_d", n8: "=d", s8: "^d", x8: "d", f9: "_e", n9: "=e", s9: "^e", x9: "e", f10: "_f", n10: "=f", s10: "^f", x10: "f", f11: "_g", n11: "=g", s11: "^g", x11: "g", f12: "_a", n12: "=a", s12: "^a", x12: "a", f13: "_b", n13: "=b", s13: "^b", x13: "b" }; e.exports = function (e) { var t = (e.accidental ? e.accidental[0] : "x") + e.verticalPos; return r[t] } }, function (e, t, r) { var n = r(97), o = r(141), c = r(217), l = r(138), h = r(140), d = r(7), f = {}; function m() { var e = window.innerWidth; for (var t in f) if (f.hasOwnProperty(t)) { var r = f[t]; e -= 2 * r.offsetLeft, r.style.width = e + "px" } } try { window.addEventListener("resize", m), window.addEventListener("orientationChange", m) } catch (e) { } function v(div, e, t, r) { t.viewportHorizontal ? (div.innerHTML = '<div class="abcjs-inner"></div>', t.scrollHorizontal ? (div.style.overflowX = "auto", div.style.overflowY = "hidden") : div.style.overflow = "hidden", f[div.id] = div, div = div.children[0]) : t.viewportVertical ? (div.innerHTML = '<div class="abcjs-inner scroll-amount"></div>', div.style.overflowX = "hidden", div.style.overflowY = "auto", div = div.children[0]) : div.innerHTML = ""; var n = new c(div, t); (n.engraveABC(e, r), e.engraver = n, t.viewportVertical || t.viewportHorizontal) && (div.parentNode.style.width = div.style.width) } function y(div, e, t, r) { function n(e) { var t = new o; return t.formatting = e.formatting, t.media = e.media, t.version = e.version, t.metaText = {}, t.lines = [], t } for (var c, l = [], i = 0; i < e.lines.length; i++) { var line = e.lines[i]; c || (c = n(e)), 0 === i && (c.metaText.tempo = e.metaText.tempo, c.metaText.title = e.metaText.title, c.metaText.header = e.metaText.header, c.metaText.rhythm = e.metaText.rhythm, c.metaText.origin = e.metaText.origin, c.metaText.composer = e.metaText.composer, c.metaText.author = e.metaText.author, c.metaText.partOrder = e.metaText.partOrder), c.lines.push(line), line.staff && (l.push(c), c = void 0) } if (c) for (var h = l[l.length - 1], f = 0; f < c.lines.length; f++)h.lines.push(c.lines[f]); (c = l[l.length - 1]).metaText.unalignedWords = e.metaText.unalignedWords, c.metaText.book = e.metaText.book, c.metaText.source = e.metaText.source, c.metaText.discography = e.metaText.discography, c.metaText.notes = e.metaText.notes, c.metaText.transcription = e.metaText.transcription, c.metaText.history = e.metaText.history, c.metaText["abc-copyright"] = e.metaText["abc-copyright"], c.metaText["abc-creator"] = e.metaText["abc-creator"], c.metaText["abc-edited-by"] = e.metaText["abc-edited-by"], c.metaText.footer = e.metaText.footer; var m = {}; for (var y in t) t.hasOwnProperty(y) && (m[y] = t[y]); var x = m.paddingtop, w = m.paddingbottom; div.innerHTML = ""; for (var k = 0; k < l.length; k++) { var T = document.createElement("div"); div.appendChild(T), 0 === k ? (m.paddingtop = x, m.paddingbottom = -20) : k === l.length - 1 ? (m.paddingtop = 10, m.paddingbottom = w) : (m.paddingtop = 10, m.paddingbottom = -20), k < l.length - 1 && (l[k].formatting = d.clone(l[k].formatting), l[k].formatting.stretchlast = !0), v(T, l[k], m, r), 0 === k ? e.engraver = l[k].engraver : e.engraver.staffgroups ? l[k].engraver.staffgroups.length > 0 && e.engraver.staffgroups.push(l[k].engraver.staffgroups[0]) : e.engraver.staffgroups = l[k].engraver.staffgroups } } e.exports = function (output, e, t, r, o) { var d, f = {}; if (t) for (d in t) t.hasOwnProperty(d) && (f[d] = t[d]); if (r) for (d in r) r.hasOwnProperty(d) && ("listener" === d ? r[d].highlight && (f.clickListener = r[d].highlight) : f[d] = r[d]); if (o) for (d in o) o.hasOwnProperty(d) && (f[d] = o[d]); return n.renderEngine((function (div, e, t, r) { var n = !1; return "*" === div && (n = !0, (div = document.createElement("div")).setAttribute("style", "visibility: hidden;"), document.body.appendChild(div)), f.afterParsing && f.afterParsing(e, t, r), !n && f.wrap && f.staffwidth ? e = function (div, e, t, r, n) { var o = new c(div, n).getMeasureWidths(e), d = h.calcLineWraps(e, o, n); if (d.reParse) { var f = new l; f.parse(r, d.revisedParams), e = f.getTune() } !n.oneSvgPerLine || d.tune.lines.length < 2 ? v(div, e, d.revisedParams, t) : y(div, e, d.revisedParams, t); return e.explanation = d.explanation, e }(div, e, t, r, f) : (n || !f.oneSvgPerLine || e.lines.length < 2 ? v(div, e, f, t) : y(div, e, f, t), n && div.parentNode.removeChild(div), null) }), output, e, f) } }, function (e, t, r) { var n = r(74); e.exports = function (e, t) { void 0 === e && (e = "abcjs-note_selected"), void 0 === t && (t = "#ff0000"), n(this.elemset, e, "", t) } }, function (e, t, r) { var n = r(74); e.exports = function (e, t) { void 0 === e && (e = "abcjs-note_selected"), void 0 === t && (t = "#000000"), n(this.elemset, "", e, t) } }, function (e, t) { var r = function (e) { this.type = "TieElem", this.anchor1 = e.anchor1, this.anchor2 = e.anchor2, e.isGrace && (this.isGrace = !0), e.fixedY && (this.fixedY = !0), e.stemDir && (this.stemDir = e.stemDir), void 0 !== e.voiceNumber && (this.voiceNumber = e.voiceNumber), void 0 !== e.style && (this.dotted = !0), this.internalNotes = [] }; r.prototype.addInternalNote = function (e) { this.internalNotes.push(e) }, r.prototype.setEndAnchor = function (e) { this.anchor2 = e }, r.prototype.setStartX = function (e) { this.startLimitX = e }, r.prototype.setEndX = function (e) { this.endLimitX = e }, r.prototype.setHint = function () { this.hint = !0 }, r.prototype.calcTieDirection = function () { if (this.isGrace) this.above = !1; else if (0 === this.voiceNumber) this.above = !0; else if (this.voiceNumber > 0) this.above = !1; else { var e; e = this.anchor1 ? this.anchor1.pitch : this.anchor2 ? this.anchor2.pitch : 14, this.anchor1 && "down" === this.anchor1.stemDir && this.anchor2 && "down" === this.anchor2.stemDir ? this.above = !0 : this.anchor1 && "up" === this.anchor1.stemDir && this.anchor2 && "up" === this.anchor2.stemDir ? this.above = !1 : this.anchor1 && this.anchor2 ? this.above = e >= 6 : this.anchor1 ? this.above = "down" === this.anchor1.stemDir : this.anchor2 ? this.above = "down" === this.anchor2.stemDir : this.above = e >= 6 } }, r.prototype.calcSlurDirection = function () { if (this.isGrace) this.above = !1; else if (0 === this.voiceNumber) this.above = !0; else if (this.voiceNumber > 0) this.above = !1; else { var e = !1; this.anchor1 && "down" === this.anchor1.stemDir && (e = !0), this.anchor2 && "down" === this.anchor2.stemDir && (e = !0); for (var i = 0; i < this.internalNotes.length; i++) { "down" === this.internalNotes[i].stemDir && (e = !0) } this.above = e } }, r.prototype.calcX = function (e, t) { this.anchor1 ? (this.startX = this.anchor1.x, this.anchor1.scalex < 1 && (this.startX -= 3)) : this.startLimitX ? this.startX = this.startLimitX.x + this.startLimitX.w : this.startX = e, !this.anchor1 && this.dotted && (this.startX -= 3), this.anchor2 ? this.endX = this.anchor2.x : this.endLimitX ? this.endX = this.endLimitX.x : this.endX = t }, r.prototype.calcTieY = function () { this.anchor1 ? this.startY = this.anchor1.pitch : this.anchor2 ? this.startY = this.anchor2.pitch : this.startY = this.above ? 14 : 0, this.anchor2 ? this.endY = this.anchor2.pitch : this.anchor1 ? this.endY = this.anchor1.pitch : this.endY = this.above ? 14 : 0 }, r.prototype.calcSlurY = function () { if (this.anchor1 && this.anchor2) { this.above && "up" === this.anchor1.stemDir && !this.fixedY ? (this.startY = (this.anchor1.highestVert + this.anchor1.pitch) / 2, this.startX += this.anchor1.w / 2) : this.startY = this.anchor1.pitch; var e = this.anchor2.parent.beam && this.anchor2.parent.beam.stemsUp && this.anchor2.parent.beam.elems[0] !== this.anchor2.parent, t = (this.anchor2.highestVert + this.anchor2.pitch) / 2; this.above && "up" === this.anchor2.stemDir && !this.fixedY && !e && t < this.startY ? (this.endY = t, this.endX += Math.round(this.anchor2.w / 2)) : this.endY = this.above && e ? this.anchor2.highestVert : this.anchor2.pitch } else this.anchor1 ? this.startY = this.endY = this.anchor1.pitch : this.anchor2 ? this.startY = this.endY = this.anchor2.pitch : (this.startY = this.above ? 14 : 0, this.endY = this.above ? 14 : 0) }, r.prototype.avoidCollisionAbove = function () { if (this.above) { for (var e = -50, i = 0; i < this.internalNotes.length; i++)this.internalNotes[i].highestVert > e && (e = this.internalNotes[i].highestVert); e > this.startY && e > this.endY && (this.startY = this.endY = e - 1) } }, e.exports = r }, function (e, t) { e.exports = function (e) { for (var t = 0, i = 0; i < e.voices.length; i++) { var r = e.voices[i].staff; e.voices[i].duplicate || (t += r.top, r.bottom < 0 && (t += -r.bottom)) } return t } }, function (e, t, r) { var n = r(30), o = r(29), c = r(101); function l(e, t, r) { var n = r; return "f" === e && "f" === t && (n = 2 * n / 3), "p" === e && "p" === t && (n = 5 * n / 6), "f" === e && "z" === t && (n = 5 * n / 8), n } e.exports = function (e, t, r, symbol, h, d, f) { var m, v; if (!symbol) return null; if (symbol.length > 1 && symbol.indexOf(".") < 0) { e.paper.openGroup({ klass: f }); for (var y = 0, i = 0; i < symbol.length; i++) { var s = symbol.charAt(i); v = o.getYCorr(s), (m = o.printSymbol(t + y, e.calcY(r + v), s, e.paper, "", "none", e.foregroundColor)) ? i < symbol.length - 1 && (y += l(s, symbol.charAt(i + 1), o.getSymbolWidth(s))) : n(e, { x: t, y: e.y, text: "no symbol:" + symbol, type: "debugfont", klass: "debug-msg", anchor: "start" }) } return e.paper.closeGroup() } if (v = o.getYCorr(symbol), c.isInGroup()) c.addPath(o.getPathForSymbol(t, e.calcY(r + v), symbol, h, d)); else { if (m = o.printSymbol(t, e.calcY(r + v), symbol, e.paper, f, "none", e.foregroundColor)) return m; n(e, { x: t, y: e.y, text: "no symbol:" + symbol, type: "debugfont", klass: "debug-msg", anchor: "start" }) } return null } }, function (e, t, r) { var n = r(30), o = r(150), c = r(151), l = r(148); e.exports = function (e, t, r) { void 0 === t.pitch && window.console.error(t.type + " Relative Element y-coordinate not set."); var h = e.calcY(t.pitch); switch (t.type) { case "symbol": if (null === t.c) return null; var d = "symbol"; t.klass && (d += " " + t.klass), t.graphelem = l(e, t.x, t.pitch, t.c, t.scalex, t.scaley, e.controller.classes.generate(d), "none", e.foregroundColor); break; case "debug": t.graphelem = n(e, { x: t.x, y: e.calcY(15), text: "" + t.c, type: "debugfont", klass: e.controller.classes.generate("debug-msg"), anchor: "start", centerVertically: !1, dim: t.dim }); break; case "barNumber": t.graphelem = n(e, { x: t.x, y: h, text: "" + t.c, type: "measurefont", klass: e.controller.classes.generate("bar-number"), anchor: "middle", dim: t.dim }); break; case "lyric": t.graphelem = n(e, { x: t.x, y: h, text: t.c, type: "vocalfont", klass: e.controller.classes.generate("lyric"), anchor: "middle", dim: t.dim }); break; case "chord": t.graphelem = n(e, { x: t.x, y: h, text: t.c, type: "gchordfont", klass: e.controller.classes.generate("chord"), anchor: "middle", dim: t.dim, lane: t.getLane() }); break; case "decoration": t.graphelem = n(e, { x: t.x, y: h + 6, text: t.c, type: "annotationfont", klass: e.controller.classes.generate("annotation"), anchor: "middle", centerVertically: !0, dim: t.dim }); break; case "text": t.graphelem = n(e, { x: t.x, y: h, text: t.c, type: "annotationfont", klass: e.controller.classes.generate("annotation"), anchor: "start", centerVertically: t.centerVertically, dim: t.dim, lane: t.getLane() }); break; case "multimeasure-text": t.graphelem = n(e, { x: t.x + t.w / 2, y: h, text: t.c, type: "tempofont", klass: e.controller.classes.generate("rest"), anchor: "middle", centerVertically: !1, dim: t.dim }); break; case "part": t.graphelem = n(e, { x: t.x, y: h, text: t.c, type: "partsfont", klass: e.controller.classes.generate("part"), anchor: "start", dim: t.dim }); break; case "bar": t.graphelem = o(e, t.x, t.linewidth, h, r || e.calcY(t.pitch2)); break; case "stem": t.graphelem = o(e, t.x, t.linewidth, h, e.calcY(t.pitch2)); break; case "ledger": t.graphelem = c(e, t.x, t.x + t.w, t.pitch, e.controller.classes.generate("ledger")) }return 1 !== t.scalex && t.graphelem && function (e, t, r, n, o, c) { e.setAttributeOnElement(t, { style: "transform:scale(" + r + "," + n + ");transform-origin:" + o + "px " + c + "px;" }) }(e.paper, t.graphelem, t.scalex, t.scaley, t.x, h), t.graphelem } }, function (e, t, r) { var n = r(101); const o = r(23); e.exports = function (e, t, r, c, l) { if (r < 0 || c < l) { var h = o(l); l = o(c), c = h } else c = o(c), l = o(l); t = o(t); var d = o(t + r), f = e.foregroundColor, m = [["M", t, c], ["L", t, l], ["L", d, l], ["L", d, c], ["z"]]; if (!n.isInGroup()) { for (var path = "", i = 0; i < m.length; i++)path += m[i].join(" "); return e.paper.pathToBack({ path: path, stroke: "none", fill: f, class: e.controller.classes.generate("stem") }) } n.addPath(m) } }, function (e, t, r) { var n = r(50); const o = r(23); e.exports = function (e, t, r, c, l) { var h = e.foregroundColor, d = e.calcY(c); t = o(t), r = o(r); var f = o(d - .35), m = o(d + .35), v = { path: n("M %f %f L %f %f L %f %f L %f %f z", t, f, r, f, r, m, t, m), stroke: "none", fill: h }; return l && (v.class = l), e.paper.pathToBack(v) } }, function (e, t) { e.exports = function () { var e = this; e.tracks = [], e.totalDuration = 0, e.currentInstrument = [], e.starts = [], e.addTrack = function () { return e.tracks.push([]), e.currentInstrument.push(0), e.starts.push(0), e.tracks.length - 1 }, e.setInstrument = function (t, r) { e.tracks[t].push({ channel: 0, cmd: "program", instrument: r }), e.currentInstrument[t] = r }, e.appendNote = function (t, r, n, o) { e.tracks[t].push({ cmd: "note", duration: n, gap: 0, instrument: e.currentInstrument[t], pitch: r, start: e.starts[t], volume: o }), e.starts[t] += n, e.totalDuration = Math.max(e.totalDuration, e.starts[t]) } } }, function (e, t, r) { var n = r(77), o = r(76), c = r(60), l = r(7), h = r(275), d = r(276), f = r(277), m = r(278), v = r(279); function y(e, t, r, l, h) { var d = !0; if (c() ? d = "suspended" === c().state : o(), !n()) throw { status: "NotSupported", message: "This browser does not support audio." }; (d || h) && r && r.classList.add("abcjs-loading"), d ? c().resume().then((function () { l ? l().then((function (n) { x(e, t, r, h) })) : x(e, t, r, h) })) : x(e, t, r, h) } function x(e, t, r, n) { n ? e(t).then((function () { r && r.classList.remove("abcjs-loading") })) : (e(t), r && r.classList.remove("abcjs-loading")) } e.exports = function (e, t) { var r = this; if ("string" == typeof e) { var n = e; if (!(e = document.querySelector(n))) throw new Error('Cannot find element "' + n + '" in the DOM.') } else if (!(e instanceof HTMLElement)) throw new Error("The first parameter must be a valid element or selector in the DOM."); if (r.parent = e, r.options = {}, t && (r.options = l.clone(t)), r.options.ac && o(r.options.ac), function (e, t) { var r = !!t.loopHandler, n = !!t.restartHandler, o = !!t.playHandler || !!t.playPromiseHandler, c = !!t.progressHandler, l = !!t.warpHandler, y = !1 !== t.hasClock, html = '<div class="abcjs-inline-audio">\n'; if (r) { var x = t.repeatTitle ? t.repeatTitle : "Click to toggle play once/repeat."; html += '<button type="button" class="abcjs-midi-loop abcjs-btn" title="' + x + '" aria-label="' + (t.repeatAria ? t.repeatAria : x) + '">' + h + "</button>\n" } if (n) { var w = t.restartTitle ? t.restartTitle : "Click to go to beginning."; html += '<button type="button" class="abcjs-midi-reset abcjs-btn" title="' + w + '" aria-label="' + (t.restartAria ? t.restartAria : w) + '">' + v + "</button>\n" } if (o) { var k = t.playTitle ? t.playTitle : "Click to play/pause."; html += '<button type="button" class="abcjs-midi-start abcjs-btn" title="' + k + '" aria-label="' + (t.playAria ? t.playAria : k) + '">' + d + f + m + "</button>\n" } if (c) { var T = t.randomTitle ? t.randomTitle : "Click to change the playback position."; html += '<button type="button" class="abcjs-midi-progress-background" title="' + T + '" aria-label="' + (t.randomAria ? t.randomAria : T) + '"><span class="abcjs-midi-progress-indicator"></span></button>\n' } y && (html += '<span class="abcjs-midi-clock"></span>\n'); if (l) { var C = t.warpTitle ? t.warpTitle : "Change the playback speed."; html += '<span class="abcjs-tempo-wrapper"><label><input class="abcjs-midi-tempo" type="number" min="1" max="300" value="100" title="' + C + '" aria-label="' + (t.warpAria ? t.warpAria : C) + '">%</label><span>&nbsp;(<span class="abcjs-midi-current-tempo"></span> ' + (t.bpm ? t.bpm : "BPM") + ")</span></span>\n" } html += '<div class="abcjs-css-warning" style="font-size: 12px;color:red;border: 1px solid red;text-align: center;width: 300px;margin-top: 4px;font-weight: bold;border-radius: 4px;">CSS required: load abcjs-audio.css</div>', html += "</div>\n", e.innerHTML = html }(r.parent, r.options), function (e) { var t = !!e.options.loopHandler, r = !!e.options.restartHandler, n = !!e.options.playHandler || !!e.options.playPromiseHandler, o = !!e.options.progressHandler, c = !!e.options.warpHandler, l = e.parent.querySelector(".abcjs-midi-start"); t && e.parent.querySelector(".abcjs-midi-loop").addEventListener("click", (function (t) { y(e.options.loopHandler, t, l, e.options.afterResume) })); r && e.parent.querySelector(".abcjs-midi-reset").addEventListener("click", (function (t) { y(e.options.restartHandler, t, l, e.options.afterResume) })); n && l.addEventListener("click", (function (t) { y(e.options.playPromiseHandler || e.options.playHandler, t, l, e.options.afterResume, !!e.options.playPromiseHandler) })); o && e.parent.querySelector(".abcjs-midi-progress-background").addEventListener("click", (function (t) { y(e.options.progressHandler, t, l, e.options.afterResume) })); c && e.parent.querySelector(".abcjs-midi-tempo").addEventListener("change", (function (t) { y(e.options.warpHandler, t, l, e.options.afterResume) })) }(r), r.disable = function (e) { var t = r.parent.querySelector(".abcjs-inline-audio"); e ? t.classList.add("abcjs-disabled") : t.classList.remove("abcjs-disabled") }, r.setWarp = function (e, t) { r.parent.querySelector(".abcjs-midi-tempo").value = Math.round(t), r.setTempo(e) }, r.setTempo = function (e) { var t = r.parent.querySelector(".abcjs-midi-current-tempo"); t && (t.innerHTML = Math.round(e)) }, r.resetAll = function () { for (var e = r.parent.querySelectorAll(".abcjs-pushed"), i = 0; i < e.length; i++) { e[i].classList.remove("abcjs-pushed") } }, r.pushPlay = function (e) { var t = r.parent.querySelector(".abcjs-midi-start"); t && (e ? t.classList.add("abcjs-pushed") : t.classList.remove("abcjs-pushed")) }, r.pushLoop = function (e) { var t = r.parent.querySelector(".abcjs-midi-loop"); t && (e ? t.classList.add("abcjs-pushed") : t.classList.remove("abcjs-pushed")) }, r.setProgress = function (e, t) { var n = r.parent.querySelector(".abcjs-midi-progress-background"), o = r.parent.querySelector(".abcjs-midi-progress-indicator"); if (n && o) { var c = n.clientWidth * e; o.style.left = c + "px"; var l = r.parent.querySelector(".abcjs-midi-clock"); if (l) { var h = t * e / 1e3, d = Math.floor(h / 60), f = Math.floor(h % 60), m = f < 10 ? "0" + f : f; l.innerHTML = d + ":" + m } } }, r.options.afterResume) { var x = !1; r.options.ac ? x = "suspended" !== r.options.ac.state : c() && (x = "suspended" !== c().state), x && r.options.afterResume() } } }, function (e, t, r) { var n = r(153), o = r(102), c = r(96), l = r(60); e.exports = function () { var e = this; e.warp = 100, e.cursorControl = null, e.visualObj = null, e.timer = null, e.midiBuffer = null, e.options = null, e.currentTempo = null, e.control = null, e.isLooping = !1, e.isStarted = !1, e.isLoaded = !1, e.isLoading = !1, e.load = function (t, r, o) { o || (o = {}), e.control = new n(t, { loopHandler: o.displayLoop ? e.toggleLoop : void 0, restartHandler: o.displayRestart ? e.restart : void 0, playPromiseHandler: o.displayPlay ? e.play : void 0, progressHandler: o.displayProgress ? e.randomAccess : void 0, warpHandler: o.displayWarp ? e.onWarp : void 0, afterResume: e.init }), e.cursorControl = r, e.disable(!0) }, e.disable = function (t) { e.control && e.control.disable(t) }, e.setTune = function (t, r, n) { return e.visualObj = t, e.disable(!1), e.options = n, e.control && (e.pause(), e.setProgress(0, 1), e.control.resetAll(), e.restart(), e.isStarted = !1), e.isLooping = !1, r ? e.go() : Promise.resolve({ status: "no-audio-context" }) }, e.go = function () { e.isLoading = !0; var t, r = 100 * e.visualObj.millisecondsPerMeasure() / e.warp; return e.currentTempo = Math.round(e.visualObj.getBeatsPerMeasure() / r * 6e4), e.control && e.control.setTempo(e.currentTempo), e.percent = 0, e.midiBuffer || (e.midiBuffer = new o), l().resume().then((function (t) { return e.midiBuffer.init({ visualObj: e.visualObj, options: e.options, millisecondsPerMeasure: r }) })).then((function (r) { return t = r, e.midiBuffer.prime() })).then((function () { var r = 16; return e.cursorControl && void 0 !== e.cursorControl.beatSubdivisions && parseInt(e.cursorControl.beatSubdivisions, 10) >= 1 && parseInt(e.cursorControl.beatSubdivisions, 10) <= 64 && (r = parseInt(e.cursorControl.beatSubdivisions, 10)), e.timer = new c(e.visualObj, { beatCallback: e.beatCallback, eventCallback: e.eventCallback, lineEndCallback: e.lineEndCallback, qpm: e.currentTempo, extraMeasuresAtBeginning: e.cursorControl ? e.cursorControl.extraMeasuresAtBeginning : void 0, lineEndAnticipation: e.cursorControl ? e.cursorControl.lineEndAnticipation : 0, beatSubdivisions: r }), e.cursorControl && e.cursorControl.onReady && "function" == typeof e.cursorControl.onReady && e.cursorControl.onReady(e), e.isLoaded = !0, e.isLoading = !1, Promise.resolve({ status: "created", notesStatus: t }) })) }, e.destroy = function () { e.timer && (e.timer.reset(), e.timer.stop(), e.timer = null), e.midiBuffer && (e.midiBuffer.stop(), e.midiBuffer = null), e.setProgress(0, 1), e.control && e.control.resetAll() }, e.play = function () { return e.runWhenReady(e._play, void 0) }, e.runWhenReady = function (t, r) { return e.visualObj ? e.isLoading ? (n = 500, new Promise((function (e) { setTimeout(e, n) }))).then((function () { return e.isLoading ? e.runWhenReady(t, r) : t(r) })) : e.isLoaded ? t(r) : e.go().then((function () { return t(r) })) : Promise.resolve({ status: "loading" }); var n }, e._play = function () { return l().resume().then((function () { return e.isStarted = !e.isStarted, e.isStarted ? (e.cursorControl && e.cursorControl.onStart && "function" == typeof e.cursorControl.onStart && e.cursorControl.onStart(), e.midiBuffer.start(), e.timer.start(e.percent), e.control && e.control.pushPlay(!0)) : e.pause(), Promise.resolve({ status: "ok" }) })) }, e.pause = function () { e.timer && (e.timer.pause(), e.midiBuffer.pause(), e.control && e.control.pushPlay(!1)) }, e.toggleLoop = function () { e.isLooping = !e.isLooping, e.control && e.control.pushLoop(e.isLooping) }, e.restart = function () { e.timer && (e.timer.setProgress(0), e.midiBuffer.seek(0)) }, e.randomAccess = function (t) { return e.runWhenReady(e._randomAccess, t) }, e._randomAccess = function (t) { var r = t.target.classList.contains("abcjs-midi-progress-indicator") ? t.target.parentNode : t.target, n = (t.x - r.offsetLeft) / r.offsetWidth; return n < 0 && (n = 0), n > 1 && (n = 1), e.seek(n), Promise.resolve({ status: "ok" }) }, e.seek = function (t) { e.timer.setProgress(t), e.midiBuffer.seek(t) }, e.setWarp = function (t) { if (parseInt(t, 10) > 0) { e.warp = parseInt(t, 10); var r = e.isStarted, n = e.percent; return e.destroy(), e.isStarted = !1, e.go().then((function () { return e.setProgress(n, 1e3 * e.midiBuffer.duration), e.control && e.control.setWarp(e.currentTempo, e.warp), r ? e.play().then((function () { return e.seek(n), Promise.resolve() })) : (e.seek(n), Promise.resolve()) })) } return Promise.resolve() }, e.onWarp = function (t) { var r = t.target.value; return e.setWarp(r) }, e.setProgress = function (t, r) { e.percent = t, e.control && e.control.setProgress(t, r) }, e.finished = function () { if (e.timer.reset(), e.isLooping) return e.timer.start(0), e.midiBuffer.finished(), e.midiBuffer.start(), "continue"; e.timer.stop(), e.isStarted && (e.control && e.control.pushPlay(!1), e.isStarted = !1, e.midiBuffer.finished(), e.cursorControl && e.cursorControl.onFinished && "function" == typeof e.cursorControl.onFinished && e.cursorControl.onFinished(), e.setProgress(0, 1)) }, e.beatCallback = function (t, r, n, o) { var c = t / r; e.setProgress(c, n), e.cursorControl && e.cursorControl.onBeat && "function" == typeof e.cursorControl.onBeat && e.cursorControl.onBeat(t, r, n, o) }, e.eventCallback = function (t) { if (!t) return e.finished(); e.cursorControl && e.cursorControl.onEvent && "function" == typeof e.cursorControl.onEvent && e.cursorControl.onEvent(t) }, e.lineEndCallback = function (t, r) { e.cursorControl && e.cursorControl.onLineEnd && "function" == typeof e.cursorControl.onLineEnd && e.cursorControl.onLineEnd(t, r) }, e.getUrl = function () { return e.midiBuffer.download() }, e.download = function (t) { var r = e.getUrl(), link = document.createElement("a"); document.body.appendChild(link), link.setAttribute("style", "display: none;"), link.href = r, link.download = t || "output.wav", link.click(), window.URL.revokeObjectURL(r), document.body.removeChild(link) } } }, function (e, t) { try { if ("function" != typeof window.CustomEvent) { var r = function (e, t) { t = t || { bubbles: !1, cancelable: !1, detail: void 0 }; var r = document.createEvent("CustomEvent"); return r.initCustomEvent(e, t.bubbles, t.cancelable, t.detail), r }; r.prototype = window.Event.prototype, window.CustomEvent = r } } catch (e) { } var n = function (e) { this.textarea = document.getElementById(e), this.initialText = this.textarea.value, this.isDragging = !1 }; n.prototype.addSelectionListener = function (e) { this.textarea.onmousemove = function (t) { this.isDragging && e.fireSelectionChanged() } }, n.prototype.addChangeListener = function (e) { this.changelistener = e, this.textarea.onkeyup = function () { e.fireChanged() }, this.textarea.onmousedown = function () { this.isDragging = !0, e.fireSelectionChanged() }, this.textarea.onmouseup = function () { this.isDragging = !1, e.fireChanged() }, this.textarea.onchange = function () { e.fireChanged() } }, n.prototype.getSelection = function () { return { start: this.textarea.selectionStart, end: this.textarea.selectionEnd } }, n.prototype.setSelection = function (e, t) { if (this.textarea.setSelectionRange) this.textarea.setSelectionRange(e, t); else if (this.textarea.createTextRange) { var r = this.textarea.createTextRange(); r.collapse(!0), r.moveEnd("character", t), r.moveStart("character", e), r.select() } this.textarea.focus() }, n.prototype.getString = function () { return this.textarea.value }, n.prototype.setString = function (e) { this.textarea.value = e, this.initialText = this.getString(), this.changelistener && this.changelistener.fireChanged() }, n.prototype.getElem = function () { return this.textarea }, e.exports = n }, , function (e, t, r) { "use strict"; t.a = function (e, t) { return t = t || {}, new Promise((function (r, n) { var s = new XMLHttpRequest, o = [], u = [], i = {}, a = function () { return { ok: 2 == (s.status / 100 | 0), statusText: s.statusText, status: s.status, url: s.responseURL, text: function () { return Promise.resolve(s.responseText) }, json: function () { return Promise.resolve(s.responseText).then(JSON.parse) }, blob: function () { return Promise.resolve(new Blob([s.response])) }, clone: a, headers: { keys: function () { return o }, entries: function () { return u }, get: function (e) { return i[e.toLowerCase()] }, has: function (e) { return e.toLowerCase() in i } } } }; for (var c in s.open(t.method || "get", e, !0), s.onload = function () { s.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, (function (e, t, r) { o.push(t = t.toLowerCase()), u.push([t, r]), i[t] = i[t] ? i[t] + "," + r : r })), r(a()) }, s.onerror = n, s.withCredentials = "include" == t.credentials, t.headers) s.setRequestHeader(c, t.headers[c]); s.send(t.body || null) })) } }, , function (e, t, r) { "use strict"; var n = function (e) { return function (e) { return !!e && "object" == typeof e }(e) && !function (e) { var t = Object.prototype.toString.call(e); return "[object RegExp]" === t || "[object Date]" === t || function (e) { return e.$$typeof === o }(e) }(e) }; var o = "function" == typeof Symbol && Symbol.for ? Symbol.for("react.element") : 60103; function c(e, t) { return !1 !== t.clone && t.isMergeableObject(e) ? m((r = e, Array.isArray(r) ? [] : {}), e, t) : e; var r } function l(e, source, t) { return e.concat(source).map((function (element) { return c(element, t) })) } function h(e) { return Object.keys(e).concat(function (e) { return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(e).filter((function (symbol) { return e.propertyIsEnumerable(symbol) })) : [] }(e)) } function d(object, e) { try { return e in object } catch (e) { return !1 } } function f(e, source, t) { var r = {}; return t.isMergeableObject(e) && h(e).forEach((function (n) { r[n] = c(e[n], t) })), h(source).forEach((function (n) { (function (e, t) { return d(e, t) && !(Object.hasOwnProperty.call(e, t) && Object.propertyIsEnumerable.call(e, t)) })(e, n) || (d(e, n) && t.isMergeableObject(source[n]) ? r[n] = function (e, t) { if (!t.customMerge) return m; var r = t.customMerge(e); return "function" == typeof r ? r : m }(n, t)(e[n], source[n], t) : r[n] = c(source[n], t)) })), r } function m(e, source, t) { (t = t || {}).arrayMerge = t.arrayMerge || l, t.isMergeableObject = t.isMergeableObject || n, t.cloneUnlessOtherwiseSpecified = c; var r = Array.isArray(source); return r === Array.isArray(e) ? r ? t.arrayMerge(e, source, t) : f(e, source, t) : c(source, t) } m.all = function (e, t) { if (!Array.isArray(e)) throw new Error("first argument should be an array"); return e.reduce((function (e, r) { return m(e, r, t) }), {}) }; var v = m; e.exports = v }, , , function (e, t, r) { var n = r(208), o = r(209), c = r(97), l = {}; l.signature = "abcjs-basic v" + n, Object.keys(o).forEach((function (e) { l[e] = o[e] })), Object.keys(c).forEach((function (e) { l[e] = c[e] })), l.renderAbc = r(143), l.TimingCallbacks = r(96); var h = r(29); l.setGlyph = h.setSymbol; var d = r(102), f = r(104), m = r(105), v = r(152), y = r(153), x = r(76), w = r(60), k = r(77), T = r(280), C = r(154), A = r(281); l.synth = { CreateSynth: d, instrumentIndexToName: f, pitchToNoteName: m, SynthController: C, SynthSequence: v, CreateSynthControl: y, registerAudioContext: x, activeAudioContext: w, supportsAudio: k, playEvent: T, getMidiFile: A }, l.Editor = r(285), l.EditArea = r(155), e.exports = l }, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function (e, t, r) { var content = r(207); "string" == typeof content && (content = [[e.i, content, ""]]), content.locals && (e.exports = content.locals); (0, r(63).default)("4779d8fe", content, !0, { sourceMap: !1 }) }, function (e, t, r) { var n = r(62)(!1); n.push([e.i, ".abcjs-inline-audio{height:26px;padding:0 5px;border-radius:3px;background-color:#424242;display:flex;align-items:center;box-sizing:border-box}.abcjs-inline-audio.abcjs-disabled{opacity:.5}.abcjs-inline-audio .abcjs-btn{width:28px;height:26px;margin-right:2px;padding:3px 4px;background:none;border:1px solid transparent;box-sizing:border-box}.abcjs-btn g{fill:#f4f4f4;stroke:#f4f4f4}.abcjs-inline-audio .abcjs-btn:hover g{fill:#ccc;stroke:#ccc}.abcjs-inline-audio .abcjs-midi-loop.abcjs-pushed,.abcjs-inline-audio .abcjs-midi-reset.abcjs-pushed,.abcjs-inline-audio .abcjs-midi-selection.abcjs-pushed{border:1px solid #ccc;background-color:#666;box-sizing:border-box}.abcjs-inline-audio .abcjs-midi-start .abcjs-loading-svg,.abcjs-inline-audio .abcjs-midi-start.abcjs-loading .abcjs-play-svg,.abcjs-inline-audio .abcjs-midi-start .abcjs-pause-svg,.abcjs-inline-audio .abcjs-midi-start.abcjs-pushed .abcjs-play-svg{display:none}.abcjs-inline-audio .abcjs-midi-start.abcjs-pushed .abcjs-pause-svg{display:inherit}.abcjs-inline-audio .abcjs-midi-progress-background{background-color:#424242;height:10px;border-radius:5px;border:2px solid #ccc;margin:0 8px 0 15px;position:relative;flex:1;padding:0;box-sizing:border-box}.abcjs-inline-audio .abcjs-midi-progress-indicator{width:20px;margin-left:-10px;height:14px;background-color:#f4f4f4;position:absolute;display:inline-block;border-radius:6px;top:-4px;left:0;box-sizing:border-box}.abcjs-inline-audio .abcjs-midi-clock{margin-left:4px;margin-top:1px;margin-right:2px;display:inline-block;font-family:sans-serif;font-size:16px;box-sizing:border-box;color:#f4f4f4}.abcjs-inline-audio .abcjs-tempo-wrapper{font-size:10px;color:#f4f4f4;box-sizing:border-box;display:flex;align-items:center}.abcjs-inline-audio .abcjs-midi-tempo{border-radius:2px;border:none;margin:0 2px 0 4px;width:42px;padding-left:2px;box-sizing:border-box}.abcjs-inline-audio .abcjs-loading .abcjs-loading-svg{display:inherit}.abcjs-inline-audio .abcjs-loading{outline:none;-webkit-animation-name:abcjs-spin;animation-name:abcjs-spin;-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:linear;animation-timing-function:linear}.abcjs-inline-audio .abcjs-loading-svg circle{stroke:#f4f4f4}@-webkit-keyframes abcjs-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes abcjs-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.abcjs-large .abcjs-inline-audio{height:52px}.abcjs-large .abcjs-btn{width:56px;height:52px;font-size:28px;padding:6px 8px}.abcjs-large .abcjs-midi-progress-background{height:20px;border:4px solid #ccc}.abcjs-large .abcjs-midi-progress-indicator{height:28px;top:-8px;width:40px}.abcjs-large .abcjs-midi-clock{font-size:32px;margin-right:10px;margin-left:10px;margin-top:-1px}.abcjs-large .abcjs-midi-tempo{font-size:20px;width:50px}.abcjs-large .abcjs-tempo-wrapper{font-size:20px}.abcjs-css-warning{display:none}", ""]), e.exports = n }, function (e, t) { e.exports = "6.0.0-beta.28" }, function (e, t, r) { var n = r(96), o = {}; !function () { "use strict"; var e, cursor; o.startAnimation = function (t, r, o) { function c(e) { for (var i = 0; i < e.length; i++) { var element = e[i]; element.classList.contains("abcjs-bar") || (element.style.display = "none") } } var l; function h(e) { o.hideCurrentMeasure ? function (e) { c(t.querySelectorAll(e)) }(e) : o.hideFinishedMeasures && function (e) { l && c(t.querySelectorAll(l)), l = e }(e) } e && (e.stop(), e = void 0), o.showCursor && ((cursor = t.querySelector(".abcjs-cursor")) || ((cursor = document.createElement("DIV")).className = "abcjs-cursor cursor", cursor.style.position = "absolute", t.appendChild(cursor), t.style.position = "relative")), (e = new n(r, { qpm: o.bpm, eventCallback: function (t) { if (t) { if (t.measureStart) { var r = ".abcjs-l" + (element = t).line + ".abcjs-m" + element.measureNumber; r && h(r) } cursor && (cursor.style.left = t.left + "px", cursor.style.top = t.top + "px", cursor.style.width = t.width + "px", cursor.style.height = t.height + "px") } else e.stop(), e = void 0; var element } })).start() }, o.pauseAnimation = function (t) { e && (t ? e.pause() : e.start()) }, o.stopAnimation = function () { e && (e.stop(), e = void 0) } }(), e.exports = o }, function (e, t, r) { var n = r(7), o = r(98), c = r(99); e.exports = function (e, t, r, l, h) { this.reset = function (e, t, r, n) { c.initialize(e, t, r, n, h), o.initialize(e, t, r, n, h) }, this.reset(e, t, r, l), this.setTitle = function (title) { if (r.hasMainTitle) h.addSubtitle(e.translateString(e.stripComment(title))); else { var t = e.translateString(e.theReverser(e.stripComment(title))); r.titlecaps && (t = t.toUpperCase()), h.addMetaText("title", t), r.hasMainTitle = !0 } }, this.setMeter = function (line) { if ("C" === (line = e.stripComment(line))) return !0 === r.havent_set_length && (r.default_length = .125, r.havent_set_length = !1), { type: "common_time" }; if ("C|" === line) return !0 === r.havent_set_length && (r.default_length = .125, r.havent_set_length = !1), { type: "cut_time" }; if ("o" === line) return !0 === r.havent_set_length && (r.default_length = .125, r.havent_set_length = !1), { type: "tempus_perfectum" }; if ("c" === line) return !0 === r.havent_set_length && (r.default_length = .125, r.havent_set_length = !1), { type: "tempus_imperfectum" }; if ("o." === line) return !0 === r.havent_set_length && (r.default_length = .125, r.havent_set_length = !1), { type: "tempus_perfectum_prolatio" }; if ("c." === line) return !0 === r.havent_set_length && (r.default_length = .125, r.havent_set_length = !1), { type: "tempus_imperfectum_prolatio" }; if (0 === line.length || "none" === line.toLowerCase()) return !0 === r.havent_set_length && (r.default_length = .125, r.havent_set_length = !1), null; var n = e.tokenize(line, 0, line.length); try { var o = function () { var e = function () { var e = { value: 0, num: "" }, t = n.shift(); for ("(" === t.token && (t = n.shift()); ;) { if ("number" !== t.type) throw "Expected top number of meter"; if (e.value += parseInt(t.token), e.num += t.token, 0 === n.length || "/" === n[0].token) return e; if (")" === (t = n.shift()).token) { if (0 === n.length || "/" === n[0].token) return e; throw "Unexpected paren in meter" } if ("." !== t.token && "+" !== t.token) throw "Expected top number of meter"; if (e.num += t.token, 0 === n.length) throw "Expected top number of meter"; t = n.shift() } return e }(); if (0 === n.length) return e; var t = n.shift(); if ("/" !== t.token) throw "Expected slash in meter"; if ("number" !== (t = n.shift()).type) throw "Expected bottom number of meter"; return e.den = t.token, e.value = e.value / parseInt(e.den), e }; if (0 === n.length) throw "Expected meter definition in M: line"; for (var meter = { type: "specified", value: [] }, c = 0; ;) { var l = o(); c += l.value; var h = { num: l.num }; if (void 0 !== l.den && (h.den = l.den), meter.value.push(h), 0 === n.length) break } return !0 === r.havent_set_length && (r.default_length = c < .75 ? .0625 : .125, r.havent_set_length = !1), meter } catch (e) { t(e, line, 0) } return null }, this.calcTempo = function (e) { var t = 1 / 4; r.meter && "specified" === r.meter.type ? t = 1 / parseInt(r.meter.value[0].den) : r.origMeter && "specified" === r.origMeter.type && (t = 1 / parseInt(r.origMeter.value[0].den)); for (var i = 0; i < e.duration; i++)e.duration[i] = t * e.duration[i]; return e }, this.resolveTempo = function () { r.tempo && (this.calcTempo(r.tempo), l.metaText.tempo = r.tempo, delete r.tempo) }, this.addUserDefinition = function (line, e, o) { var c = line.indexOf("=", e); if (-1 !== c) { var l = n.strip(line.substring(e, c)), h = n.strip(line.substring(c + 1)); if (1 === l.length) { -1 !== "HIJKLMNOPQRSTUVWXYhijklmnopqrstuvw~".indexOf(l) ? 0 !== h.length ? (void 0 === r.macros && (r.macros = {}), r.macros[l] = h) : t("Missing macro definition", line, e) : t("Macro definitions must be H-Y, h-w, or tilde", line, e) } else t("Macro definitions can only be one character", line, e) } else t("Need an = in a macro definition", line, e) }, this.setDefaultLength = function (line, e, t) { var o = n.gsub(line.substring(e, t), " ", "").split("/"); if (2 === o.length) { var c = parseInt(o[0]), l = parseInt(o[1]); l > 0 && (r.default_length = c / l, r.havent_set_length = !1) } else 1 === o.length && "1" === o[0] && (r.default_length = 1, r.havent_set_length = !1) }; var d = { larghissimo: 20, adagissimo: 24, sostenuto: 28, grave: 32, largo: 40, lento: 50, larghetto: 60, adagio: 68, adagietto: 74, andante: 80, andantino: 88, "marcia moderato": 84, "andante moderato": 100, moderato: 112, allegretto: 116, "allegro moderato": 120, allegro: 126, animato: 132, agitato: 140, veloce: 148, "mosso vivo": 156, vivace: 164, vivacissimo: 172, allegrissimo: 176, presto: 184, prestissimo: 210 }; this.setTempo = function (line, n, o) { try { var c = e.tokenize(line, n, o); if (0 === c.length) throw "Missing parameter in Q: field"; var l = {}, h = !0, f = c.shift(); if ("quote" === f.type && (l.preString = f.token, f = c.shift(), 0 === c.length)) return d[l.preString.toLowerCase()] && (l.bpm = d[l.preString.toLowerCase()], l.suppressBpm = !0), { type: "immediate", tempo: l }; if ("alpha" === f.type && "C" === f.token) { if (0 === c.length) throw "Missing tempo after C in Q: field"; if ("punct" === (f = c.shift()).type && "=" === f.token) { if (0 === c.length) throw "Missing tempo after = in Q: field"; if ("number" !== (f = c.shift()).type) throw "Expected number after = in Q: field"; l.duration = [1], l.bpm = parseInt(f.token) } else { if ("number" !== f.type) throw "Expected number or equal after C in Q: field"; if (l.duration = [parseInt(f.token)], 0 === c.length) throw "Missing = after duration in Q: field"; if ("punct" !== (f = c.shift()).type || "=" !== f.token) throw "Expected = after duration in Q: field"; if (0 === c.length) throw "Missing tempo after = in Q: field"; if ("number" !== (f = c.shift()).type) throw "Expected number after = in Q: field"; l.bpm = parseInt(f.token) } } else { if ("number" !== f.type) throw "Unknown value in Q: field"; var m = parseInt(f.token); if (0 === c.length || "quote" === c[0].type) l.duration = [1], l.bpm = m; else { if (h = !1, "punct" !== (f = c.shift()).type && "/" !== f.token) throw "Expected fraction in Q: field"; if ("number" !== (f = c.shift()).type) throw "Expected fraction in Q: field"; var v = parseInt(f.token); for (l.duration = [m / v]; c.length > 0 && "=" !== c[0].token && "quote" !== c[0].type;) { if ("number" !== (f = c.shift()).type) throw "Expected fraction in Q: field"; if (m = parseInt(f.token), "punct" !== (f = c.shift()).type && "/" !== f.token) throw "Expected fraction in Q: field"; if ("number" !== (f = c.shift()).type) throw "Expected fraction in Q: field"; v = parseInt(f.token), l.duration.push(m / v) } if ("punct" !== (f = c.shift()).type && "=" !== f.token) throw "Expected = in Q: field"; if ("number" !== (f = c.shift()).type) throw "Expected tempo in Q: field"; l.bpm = parseInt(f.token) } } if (0 !== c.length && ("quote" === (f = c.shift()).type && (l.postString = f.token, f = c.shift()), 0 !== c.length)) throw "Unexpected string at end of Q: field"; return !1 === r.printTempo && (l.suppress = !0), { type: h ? "delaySet" : "immediate", tempo: l } } catch (e) { return t(e, line, n), { type: "none" } } }, this.letter_to_inline_header = function (line, i, n) { var d = e.eatWhiteSpace(line, i); if (i += d, line.length >= i + 5 && "[" === line.charAt(i) && ":" === line.charAt(i + 2)) { var f = line.indexOf("]", i), m = r.iChar + i, v = r.iChar + f + 1; switch (line.substring(i, i + 3)) { case "[I:": var y = o.addDirective(line.substring(i + 3, f)); return y && t(y, line, i), [f - i + 1 + d]; case "[M:": var meter = this.setMeter(line.substring(i + 3, f)); return h.hasBeginMusic() && meter ? h.appendStartingElement("meter", m, v, meter) : r.meter = meter, [f - i + 1 + d]; case "[K:": var x = c.parseKey(line.substring(i + 3, f)); return x.foundClef && h.hasBeginMusic() && h.appendStartingElement("clef", m, v, r.clef), x.foundKey && h.hasBeginMusic() && h.appendStartingElement("key", m, v, c.fixKey(r.clef, r.key)), [f - i + 1 + d]; case "[P:": return n || l.lines.length <= l.lineNum ? r.partForNextLine = { title: line.substring(i + 3, f), startChar: m, endChar: v } : h.appendElement("part", m, v, { title: line.substring(i + 3, f) }), [f - i + 1 + d]; case "[L:": return this.setDefaultLength(line, i + 3, f), [f - i + 1 + d]; case "[Q:": if (f > 0) { var w = this.setTempo(line, i + 3, f); return "delaySet" === w.type ? h.hasBeginMusic() ? h.appendElement("tempo", m, v, this.calcTempo(w.tempo)) : r.tempoForNextLine = ["tempo", m, v, this.calcTempo(w.tempo)] : "immediate" === w.type && (!n && h.hasBeginMusic() ? h.appendElement("tempo", m, v, w.tempo) : r.tempoForNextLine = ["tempo", m, v, w.tempo]), [f - i + 1 + d, line.charAt(i + 1), line.substring(i + 3, f)] } break; case "[V:": if (f > 0) return c.parseVoice(line, i + 3, f), [f - i + 1 + d, line.charAt(i + 1), line.substring(i + 3, f)] } } return [0] }, this.letter_to_body_header = function (line, i) { if (line.length >= i + 3) switch (line.substring(i, i + 2)) { case "I:": var e = o.addDirective(line.substring(i + 2)); return e && t(e, line, i), [line.length]; case "M:": var meter = this.setMeter(line.substring(i + 2)); return h.hasBeginMusic() && meter && h.appendStartingElement("meter", r.iChar + i, r.iChar + line.length, meter), [line.length]; case "K:": var l = c.parseKey(line.substring(i + 2)); return l.foundClef && h.hasBeginMusic() && h.appendStartingElement("clef", r.iChar + i, r.iChar + line.length, r.clef), l.foundKey && h.hasBeginMusic() && h.appendStartingElement("key", r.iChar + i, r.iChar + line.length, c.fixKey(r.clef, r.key)), [line.length]; case "P:": return h.hasBeginMusic() && h.appendElement("part", r.iChar + i, r.iChar + line.length, { title: line.substring(i + 2) }), [line.length]; case "L:": return this.setDefaultLength(line, i + 2, line.length), [line.length]; case "Q:": var d = line.indexOf("", i + 2); -1 === d && (d = line.length); var f = this.setTempo(line, i + 2, d); return "delaySet" === f.type ? h.appendElement("tempo", r.iChar + i, r.iChar + line.length, this.calcTempo(f.tempo)) : "immediate" === f.type && h.appendElement("tempo", r.iChar + i, r.iChar + line.length, f.tempo), [d, line.charAt(i), n.strip(line.substring(i + 2))]; case "V:": return c.parseVoice(line, i + 2, line.length), [line.length, line.charAt(i), n.strip(line.substring(i + 2))] }return [0] }; var f = { A: "author", B: "book", C: "composer", D: "discography", F: "url", G: "group", I: "instruction", N: "notes", O: "origin", R: "rhythm", S: "source", W: "unalignedWords", Z: "transcription" }; this.parseHeader = function (line) { if (n.startsWith(line, "%%")) { var d = o.addDirective(line.substring(2)); return d && t(d, line, 2), {} } var i = line.indexOf("%"); if (i >= 0 && (line = line.substring(0, i)), 0 === (line = line.replace(/\s+$/, "")).length) return {}; if (line.length >= 2 && ":" === line.charAt(1)) { var m = ""; line.indexOf("") >= 0 && "w" !== line.charAt(0) && (m = line.substring(line.indexOf("") + 1), line = line.substring(0, line.indexOf(""))); var v = f[line.charAt(0)]; if (void 0 !== v) return "unalignedWords" === v ? h.addMetaTextArray(v, o.parseFontChangeLine(e.translateString(e.stripComment(line.substring(2))))) : h.addMetaText(v, e.translateString(e.stripComment(line.substring(2)))), {}; var y = r.iChar, x = y + line.length; switch (line.charAt(0)) { case "H": h.addMetaText("history", e.translateString(e.stripComment(line.substring(2)))), r.is_in_history = !0; break; case "K": this.resolveTempo(); var w = c.parseKey(line.substring(2)); !r.is_in_header && h.hasBeginMusic() && (w.foundClef && h.appendStartingElement("clef", y, x, r.clef), w.foundKey && h.appendStartingElement("key", y, x, c.fixKey(r.clef, r.key))), r.is_in_header = !1; break; case "L": this.setDefaultLength(line, 2, line.length); break; case "M": r.origMeter = r.meter = this.setMeter(line.substring(2)); break; case "P": r.is_in_header ? h.addMetaText("partOrder", e.translateString(e.stripComment(line.substring(2)))) : r.partForNextLine = { title: e.translateString(e.stripComment(line.substring(2))), startChar: y, endChar: x }; break; case "Q": var k = this.setTempo(line, 2, line.length); "delaySet" === k.type ? r.tempo = k.tempo : "immediate" === k.type && (l.metaText.tempo ? r.tempoForNextLine = ["tempo", y, x, k.tempo] : l.metaText.tempo = k.tempo); break; case "T": this.setTitle(line.substring(2)); break; case "U": this.addUserDefinition(line, 2, line.length); break; case "V": if (c.parseVoice(line, 2, line.length), !r.is_in_header) return { newline: !0 }; break; case "s": return { symbols: !0 }; case "w": return { words: !0 }; case "X": break; case "E": case "m": t("Ignored header", line, 0); break; default: return m.length && (m = "" + m), { regular: !0, str: line + m } }return m.length > 0 ? { recurse: !0, str: m } : {} } return { regular: !0, str: line } } } }, function (e, t, r) { var n, o, c, l, h, header, d = r(7), f = r(99), m = r(139), v = function (e, t, r, d, f, m) { n = e, o = t, c = r, l = d, h = f, header = m }, y = function (e, t, r) { if (void 0 === e.inTie[t]) return !1; var n = e.currentVoice ? e.currentVoice.index : 0; return !(!e.inTie[t][n] || void 0 === r.pitches && "spacer" === r.rest.type) }; v.prototype.parseMusic = function (line) { header.resolveTempo(), c.is_in_header = !1; for (var i = 0, e = c.iChar; n.isWhiteSpace(line.charAt(i)) && i < line.length;)i++; if (i !== line.length && "%" !== line.charAt(i)) { var t = c.start_new_line; void 0 === c.continueall ? c.start_new_line = !0 : c.start_new_line = !1; var r = 0, f = header.letter_to_body_header(line, i); f[0] > 0 && (i += f[0], "V" === f[1] && (t = !0)); for (var m = {}, v = 0; i < line.length;) { var A = i; if ("%" === line.charAt(i)) break; var S = header.letter_to_inline_header(line, i, t); if (S[0] > 0) i += S[0], "V" === S[1] && (t = !0); else { var _; for (t && (this.startNewLine(), t = !1); ;)if ((_ = n.eatWhiteSpace(line, i)) > 0 && (i += _), i > 0 && "" === line.charAt(i - 1) && (_ = header.letter_to_body_header(line, i))[0] > 0 && ("V" === _[1] && this.startNewLine(), i = _[0], c.start_new_line = !1), (_ = B(line, i))[0] > 0 && (i += _[0]), (_ = w(line, i))[0] > 0) { m.chord || (m.chord = []); var E = n.translateString(_[1]); E = E.replace(/;/g, "\n"); for (var M = !1, L = 0; L < m.chord.length; L++)m.chord[L].position === _[2] && (M = !0, m.chord[L].name += "\n" + E); !1 === M && (null === _[2] && _[3] ? m.chord.push({ name: E, rel_position: _[3] }) : m.chord.push({ name: E, position: _[2] })), i += _[0]; var z = n.skipWhiteSpace(line.substring(i)); z > 0 && (m.force_end_beam_last = !0), i += z } else if ((_ = -1 === "ABCDEFGabcdefgxyzZ[]|^_{".indexOf(line.charAt(i)) ? N(line, i) : [0])[0] > 0) null === _[1] ? i + 1 < line.length && this.startNewLine() : _[1].length > 0 && (0 === _[1].indexOf("style=") ? m.style = _[1].substr(6) : (void 0 === m.decoration && (m.decoration = []), "beambr1" === _[1] ? m.beambr = 1 : "beambr2" === _[1] ? m.beambr = 2 : m.decoration.push(_[1]))), i += _[0]; else { if (!((_ = k(line, i))[0] > 0)) break; m.gracenotes = _[1], i += _[0] } if ((_ = P(line, i))[0] > 0) { v = 0, void 0 !== m.gracenotes && (m.rest = { type: "spacer" }, m.duration = .125, c.addFormattingOptions(m, l.formatting, "note"), h.appendElement("note", e + i, e + i + _[0], m), c.measureNotEmpty = !0, m = {}); var D = { type: _[1] }; if (0 === D.type.length) o("Unknown bar type", line, i); else { if (c.inEnding && "bar_thin" !== D.type && (D.endEnding = !0, c.inEnding = !1), _[2] && (D.startEnding = _[2], c.inEnding && (D.endEnding = !0), c.inEnding = !0, "bar_right_repeat" === _[1] ? c.restoreStartEndingHoldOvers() : c.duplicateStartEndingHoldOvers()), void 0 !== m.decoration && (D.decoration = m.decoration), void 0 !== m.chord && (D.chord = m.chord), D.startEnding && void 0 === c.barFirstEndingNum ? c.barFirstEndingNum = c.currBarNumber : D.startEnding && D.endEnding && c.barFirstEndingNum ? c.currBarNumber = c.barFirstEndingNum : D.endEnding && (c.barFirstEndingNum = void 0), "bar_invisible" !== D.type && c.measureNotEmpty) (void 0 === c.currentVoice || 0 === c.currentVoice.staffNum && 0 === c.currentVoice.index) && (c.currBarNumber++, c.barNumbers && c.currBarNumber % c.barNumbers == 0 && (D.barNumber = c.currBarNumber)); c.addFormattingOptions(m, l.formatting, "bar"), h.appendElement("bar", e + i, e + i + _[0], D), c.measureNotEmpty = !1, m = {} } i += _[0] } else if ("&" === line[i]) (_ = T(line, i))[0] > 0 && (h.appendElement("overlay", e, e + 1, {}), i += 1, v++); else { if ((_ = H(line, i)).consumed > 0 && (void 0 !== _.startSlur && (m.startSlur = _.startSlur), _.dottedSlur && (m.dottedSlur = !0), void 0 !== _.triplet && (r > 0 ? o("Can't nest triplets", line, i) : (m.startTriplet = _.triplet, m.tripletMultiplier = _.tripletQ / _.triplet, r = void 0 === _.num_notes ? _.triplet : _.num_notes)), i += _.consumed), "[" === line.charAt(i)) { var F = i; i++; for (var V = null, Y = !1, G = !1; !G;) { var W = N(line, i); W[0] > 0 && (i += W[0]); var R = j(line, i, {}, !1); if (null !== R && void 0 !== R.pitch) W[0] > 0 && 0 !== W[1].indexOf("style=") && (void 0 === m.decoration && (m.decoration = []), m.decoration.push(W[1])), R.end_beam && (m.end_beam = !0, delete R.end_beam), void 0 === m.pitches ? (m.duration = R.duration, m.pitches = [R]) : m.pitches.push(R), delete R.duration, W[0] > 0 && 0 === W[1].indexOf("style=") && (m.pitches[m.pitches.length - 1].style = W[1].substr(6)), c.inTieChord[m.pitches.length] && (R.endTie = !0, c.inTieChord[m.pitches.length] = void 0), R.startTie && (c.inTieChord[m.pitches.length] = !0), i = R.endChar, delete R.endChar; else if (" " === line.charAt(i)) o("Spaces are not allowed in chords", line, i), i++; else { if (i < line.length && "]" === line.charAt(i)) { i++, 0 !== c.next_note_duration && (m.duration = m.duration * c.next_note_duration, c.next_note_duration = 0), y(c, v, m) && (d.each(m.pitches, (function (e) { e.endTie = !0 })), x(c, v, !1)), r > 0 && (!m.rest || "spacer" !== m.rest.type) && 0 === --r && (m.endTriplet = !0); for (var X = !1; i < line.length && !X;) { switch (line.charAt(i)) { case " ": case "\t": O(m); break; case ")": void 0 === m.endSlur ? m.endSlur = 1 : m.endSlur++; break; case "-": d.each(m.pitches, (function (e) { e.startTie = {} })), x(c, v, !0); break; case ">": case "<": var U = I(line, i); i += U[0] - 1, c.next_note_duration = U[2], V ? V *= U[1] : V = U[1]; break; case "1": case "2": case "3": case "4": case "5": case "6": case "7": case "8": case "9": case "/": var K = n.getFraction(line, i); V = K.value, i = K.index, " " === line.charAt(i) && (Y = !0), "-" === line.charAt(i) || ")" === line.charAt(i) || " " === line.charAt(i) || "<" === line.charAt(i) || ">" === line.charAt(i) ? i-- : X = !0; break; default: X = !0 }X || i++ } } else o("Expected ']' to end the chords", line, i); void 0 !== m.pitches && (null !== V && (m.duration = m.duration * V, Y && O(m)), c.addFormattingOptions(m, l.formatting, "note"), h.appendElement("note", e + F, e + i, m), c.measureNotEmpty = !0, m = {}), G = !0 } } } else { var $ = {}, Q = j(line, i, $, !0); if (void 0 !== $.endTie && x(c, v, !0), null !== Q) { void 0 !== Q.pitch ? (m.pitches = [{}], void 0 !== Q.accidental && (m.pitches[0].accidental = Q.accidental), m.pitches[0].pitch = Q.pitch, (Q.soundPitch || 0 === Q.soundPitch) && (m.pitches[0].soundPitch = Q.soundPitch), (Q.midipitch || 0 === Q.midipitch) && (m.pitches[0].midipitch = Q.midipitch), void 0 !== Q.endSlur && (m.pitches[0].endSlur = Q.endSlur), void 0 !== Q.endTie && (m.pitches[0].endTie = Q.endTie), void 0 !== Q.startSlur && (m.pitches[0].startSlur = Q.startSlur), void 0 !== m.startSlur && (m.pitches[0].startSlur = m.startSlur), void 0 !== m.dottedSlur && (m.pitches[0].dottedSlur = !0), void 0 !== Q.startTie && (m.pitches[0].startTie = Q.startTie), void 0 !== m.startTie && (m.pitches[0].startTie = m.startTie)) : (m.rest = Q.rest, void 0 !== Q.endSlur && (m.endSlur = Q.endSlur), void 0 !== Q.endTie && (m.rest.endTie = Q.endTie), void 0 !== Q.startSlur && (m.startSlur = Q.startSlur), void 0 !== Q.startTie && (m.rest.startTie = Q.startTie), void 0 !== m.startTie && (m.rest.startTie = m.startTie)), void 0 !== Q.chord && (m.chord = Q.chord), void 0 !== Q.duration && (m.duration = Q.duration), void 0 !== Q.decoration && (m.decoration = Q.decoration), void 0 !== Q.graceNotes && (m.graceNotes = Q.graceNotes), delete m.startSlur, delete m.dottedSlur, y(c, v, m) && (void 0 !== m.pitches ? m.pitches[0].endTie = !0 : "spacer" !== m.rest.type && (m.rest.endTie = !0), x(c, v, !1)), (Q.startTie || m.startTie) && x(c, v, !0), i = Q.endChar, r > 0 && (!Q.rest || "spacer" !== Q.rest.type) && 0 === --r && (m.endTriplet = !0), Q.end_beam && O(m), m.rest && "rest" === m.rest.type && 1 === m.duration && C(c) <= 1 && (m.rest.type = "whole", m.duration = C(c)); m.duration < 1 && -1 === [.5, .75, .875, .9375, .96875, .984375, .25, .375, .4375, .46875, .484375, .4921875, .125, .1875, .21875, .234375, .2421875, .24609375, .0625, .09375, .109375, .1171875, .12109375, .123046875, .03125, .046875, .0546875, .05859375, .060546875, .0615234375, .015625, .0234375, .02734375, .029296875, .0302734375, .03076171875].indexOf(m.duration) && 0 !== m.duration && (m.rest && "spacer" === m.rest.type || o("Duration not representable: " + line.substring(A, i), line, i)), c.addFormattingOptions(m, l.formatting, "note"), h.appendElement("note", e + A, e + i, m), c.measureNotEmpty = !0, m = {} } } i === A && (" " !== line.charAt(i) && "`" !== line.charAt(i) && o("Unknown character ignored", line, i), i++) } } } } }; var x = function (e, t, r) { var n = e.currentVoice ? e.currentVoice.index : 0; void 0 === e.inTie[t] && (e.inTie[t] = []), e.inTie[t][n] = r }, w = function (line, i) { if ('"' === line.charAt(i)) { var e = n.getBrackettedSubstring(line, i, 5); if (e[2] || o("Missing the closing quote while parsing the chord symbol", line, i), e[0] > 0 && e[1].length > 0 && "^" === e[1].charAt(0)) e[1] = e[1].substring(1), e[2] = "above"; else if (e[0] > 0 && e[1].length > 0 && "_" === e[1].charAt(0)) e[1] = e[1].substring(1), e[2] = "below"; else if (e[0] > 0 && e[1].length > 0 && "<" === e[1].charAt(0)) e[1] = e[1].substring(1), e[2] = "left"; else if (e[0] > 0 && e[1].length > 0 && ">" === e[1].charAt(0)) e[1] = e[1].substring(1), e[2] = "right"; else if (e[0] > 0 && e[1].length > 0 && "@" === e[1].charAt(0)) { e[1] = e[1].substring(1); var t = n.getFloat(e[1]); 0 === t.digits && o("Missing first position in absolutely positioned annotation.", line, i), e[1] = e[1].substring(t.digits), "," !== e[1][0] && o("Missing comma absolutely positioned annotation.", line, i), e[1] = e[1].substring(1); var r = n.getFloat(e[1]); 0 === r.digits && o("Missing second position in absolutely positioned annotation.", line, i), e[1] = e[1].substring(r.digits); var l = n.skipWhiteSpace(e[1]); e[1] = e[1].substring(l), e[2] = null, e[3] = { x: t.value, y: r.value } } else !0 !== c.freegchord && (e[1] = e[1].replace(/([ABCDEFG0-9])b/g, "$1â™­"), e[1] = e[1].replace(/([ABCDEFG0-9])#/g, "$1â™¯"), e[1] = e[1].replace(/^([ABCDEFG])([â™¯â™­]?)o([^A-Za-z])/g, "$1$2Â°$3"), e[1] = e[1].replace(/^([ABCDEFG])([â™¯â™­]?)o$/g, "$1$2Â°"), e[1] = e[1].replace(/^([ABCDEFG])([â™¯â™­]?)0([^A-Za-z])/g, "$1$2Ã¸$3"), e[1] = e[1].replace(/^([ABCDEFG])([â™¯â™­]?)\^([^A-Za-z])/g, "$1$2âˆ†$3")), e[2] = "default", e[1] = m.chordName(c, e[1]); return e } return [0, ""] }, k = function (line, i) { if ("{" === line.charAt(i)) { var e = n.getBrackettedSubstring(line, i, 1, "}"); e[2] || o("Missing the closing '}' while parsing grace note", line, i), ")" === line[i + e[0]] && (e[0]++, e[1] += ")"); for (var t = [], r = 0, l = !1; r < e[1].length;) { var h = !1; "/" === e[1].charAt(r) && (h = !0, r++); var d = j(e[1], r, {}, !1); null !== d ? (d.duration = d.duration / (8 * c.default_length), h && (d.acciaccatura = !0), t.push(d), l && (d.endTie = !0, l = !1), d.startTie && (l = !0), r = d.endChar, delete d.endChar) : (" " === e[1].charAt(r) ? t.length > 0 && (t[t.length - 1].end_beam = !0) : o("Unknown character '" + e[1].charAt(r) + "' while parsing grace note", line, i), r++) } if (t.length) return [e[0], t] } return [0] }; function T(line, i) { if ("&" === line.charAt(i)) { for (var e = i; line.charAt(i) && ":" !== line.charAt(i) && "|" !== line.charAt(i);)i++; return [i - e, line.substring(e + 1, i)] } return [0] } function C(e) { var meter = e.origMeter; return meter && "specified" === meter.type && meter.value && 0 !== meter.value.length ? parseInt(meter.value[0].num, 10) / parseInt(meter.value[0].den, 10) : 1 } var A = ["trill", "lowermordent", "uppermordent", "mordent", "pralltriller", "accent", "fermata", "invertedfermata", "tenuto", "0", "1", "2", "3", "4", "5", "+", "wedge", "open", "thumb", "snap", "turn", "roll", "breath", "shortphrase", "mediumphrase", "longphrase", "segno", "coda", "D.S.", "D.C.", "fine", "beambr1", "beambr2", "slide", "marcato", "upbow", "downbow", "/", "//", "///", "////", "trem1", "trem2", "trem3", "trem4", "turnx", "invertedturn", "invertedturnx", "trill(", "trill)", "arpeggio", "xstem", "mark", "umarcato", "style=normal", "style=harmonic", "style=rhythm", "style=x", "style=triangle"], S = ["p", "pp", "f", "ff", "mf", "mp", "ppp", "pppp", "fff", "ffff", "sfz"], _ = ["crescendo(", "crescendo)", "diminuendo(", "diminuendo)"], E = [["<", "accent"], [">", "accent"], ["tr", "trill"], ["plus", "+"], ["emphasis", "accent"], ["^", "umarcato"], ["marcato", "umarcato"]], M = [["<(", "crescendo("], ["<)", "crescendo)"], [">(", "diminuendo("], [">)", "diminuendo)"]], N = function (line, i) { var e = c.macros[line.charAt(i)]; if (void 0 !== e) return "!" !== e.charAt(0) && "+" !== e.charAt(0) || (e = e.substring(1)), "!" !== e.charAt(e.length - 1) && "+" !== e.charAt(e.length - 1) || (e = e.substring(0, e.length - 1)), d.detect(A, (function (t) { return e === t })) ? [1, e] : d.detect(S, (function (t) { return e === t })) ? ("hidden" === c.volumePosition && (e = ""), [1, e]) : d.detect(_, (function (t) { return "hidden" === c.dynamicPosition && (e = ""), e === t })) ? [1, e] : (d.detect(c.ignoredDecorations, (function (t) { return e === t })) || o("Unknown macro: " + e, line, i), [1, ""]); switch (line.charAt(i)) { case ".": if ("(" === line[i + 1] || "-" === line[i + 1]) break; return [1, "staccato"]; case "u": return [1, "upbow"]; case "v": return [1, "downbow"]; case "~": return [1, "irishroll"]; case "!": case "+": var t = n.getBrackettedSubstring(line, i, 5); return t[1].length > 1 && ("^" === t[1].charAt(0) || "_" === t[1].charAt(0)) && (t[1] = t[1].substring(1)), d.detect(A, (function (e) { return t[1] === e })) ? t : d.detect(S, (function (e) { return t[1] === e })) ? ("hidden" === c.volumePosition && (t[1] = ""), t) : d.detect(_, (function (e) { return t[1] === e })) ? ("hidden" === c.dynamicPosition && (t[1] = ""), t) : d.detect(E, (function (e) { return t[1] === e[0] && (t[1] = e[1], !0) })) ? t : d.detect(M, (function (e) { return t[1] === e[0] && (t[1] = e[1], !0) })) ? ("hidden" === c.dynamicPosition && (t[1] = ""), t) : "!" !== line.charAt(i) || 1 !== t[0] && "!" === line.charAt(i + t[0] - 1) ? (o("Unknown decoration: " + t[1], line, i), t[1] = "", t) : [1, null]; case "H": return [1, "fermata"]; case "J": return [1, "slide"]; case "L": return [1, "accent"]; case "M": return [1, "mordent"]; case "O": return [1, "coda"]; case "P": return [1, "pralltriller"]; case "R": return [1, "roll"]; case "S": return [1, "segno"]; case "T": return [1, "trill"] }return [0, 0] }, B = function (line, i) { for (var e = i; n.isWhiteSpace(line.charAt(i));)i++; return [i - e] }, P = function (line, e) { var t = n.getBarLine(line, e); if (0 === t.len) return [0, ""]; if (t.warn) return o(t.warn, line, e), [t.len, ""]; for (var r = 0; r < line.length && " " === line.charAt(e + t.len + r); r++); var c = t.len; if ("[" === line.charAt(e + t.len + r) && (t.len += r + 1), '"' === line.charAt(e + t.len) && "[" === line.charAt(e + t.len - 1)) { var l = n.getBrackettedSubstring(line, e + t.len, 5); return [t.len + l[0], t.token, l[1]] } var h = n.getTokenOf(line.substring(e + t.len), "1234567890-,"); return 0 === h.len || "-" === h.token[0] ? [c, t.token] : [t.len + h.len, t.token, h.token] }, L = { 2: 3, 3: 2, 4: 3, 5: 2, 6: 2, 7: 2, 8: 3, 9: 2 }, H = function (line, i) { var e = {}, t = i; for ("." === line[i] && "(" === line[i + 1] && (e.dottedSlur = !0, i++); "(" === line.charAt(i) || n.isWhiteSpace(line.charAt(i));)"(" === line.charAt(i) && (i + 1 < line.length && line.charAt(i + 1) >= "2" && line.charAt(i + 1) <= "9" ? (void 0 !== e.triplet ? o("Can't nest triplets", line, i) : (e.triplet = line.charAt(i + 1) - "0", e.tripletQ = L[e.triplet], e.num_notes = e.triplet, i + 2 < line.length && ":" === line.charAt(i + 2) && (i + 3 < line.length && ":" === line.charAt(i + 3) ? i + 4 < line.length && line.charAt(i + 4) >= "1" && line.charAt(i + 4) <= "9" ? (e.num_notes = line.charAt(i + 4) - "0", i += 3) : o("expected number after the two colons after the triplet to mark the duration", line, i) : i + 3 < line.length && line.charAt(i + 3) >= "1" && line.charAt(i + 3) <= "9" ? (e.tripletQ = line.charAt(i + 3) - "0", i + 4 < line.length && ":" === line.charAt(i + 4) ? i + 5 < line.length && line.charAt(i + 5) >= "1" && line.charAt(i + 5) <= "9" && (e.num_notes = line.charAt(i + 5) - "0", i += 4) : i += 2) : o("expected number after the triplet to mark the duration", line, i))), i++) : void 0 === e.startSlur ? e.startSlur = 1 : e.startSlur++), i++; return e.consumed = i - t, e }; v.prototype.startNewLine = function () { var e = { startChar: -1, endChar: -1 }; c.partForNextLine.title && (e.part = c.partForNextLine), e.clef = c.currentVoice && void 0 !== c.staves[c.currentVoice.staffNum].clef ? d.clone(c.staves[c.currentVoice.staffNum].clef) : d.clone(c.clef); var t = c.currentVoice ? c.currentVoice.scoreTranspose : 0; if (e.key = f.standardKey(c.key.root + c.key.acc + c.key.mode, c.key.root, c.key.acc, t), e.key.mode = c.key.mode, c.key.impliedNaturals && (e.key.impliedNaturals = c.key.impliedNaturals), c.key.explicitAccidentals) for (var i = 0; i < c.key.explicitAccidentals.length; i++) { for (var r = !1, n = 0; n < e.key.accidentals.length; n++)e.key.accidentals[n].note === c.key.explicitAccidentals[i].note && (e.key.accidentals[n].acc = c.key.explicitAccidentals[i].acc, r = !0); r || e.key.accidentals.push(c.key.explicitAccidentals[i]) } if (c.targetKey = e.key, e.key.explicitAccidentals && delete e.key.explicitAccidentals, f.addPosToKey(e.clef, e.key), null !== c.meter ? (c.currentVoice ? (d.each(c.staves, (function (e) { e.meter = c.meter })), e.meter = c.staves[c.currentVoice.staffNum].meter, c.staves[c.currentVoice.staffNum].meter = null) : e.meter = c.meter, c.meter = null) : c.currentVoice && c.staves[c.currentVoice.staffNum].meter && (e.meter = c.staves[c.currentVoice.staffNum].meter, c.staves[c.currentVoice.staffNum].meter = null), c.currentVoice && c.currentVoice.name && (e.name = c.currentVoice.name), c.vocalfont && (e.vocalfont = c.vocalfont), c.tripletfont && (e.tripletfont = c.tripletfont), c.gchordfont && (e.gchordfont = c.gchordfont), c.style && (e.style = c.style), c.currentVoice) { var o = c.staves[c.currentVoice.staffNum]; o.brace && (e.brace = o.brace), o.bracket && (e.bracket = o.bracket), o.connectBarLines && (e.connectBarLines = o.connectBarLines), o.name && (e.name = o.name[c.currentVoice.index]), o.subname && (e.subname = o.subname[c.currentVoice.index]), c.currentVoice.stem && (e.stem = c.currentVoice.stem), c.currentVoice.stafflines && (e.stafflines = c.currentVoice.stafflines), c.currentVoice.staffscale && (e.staffscale = c.currentVoice.staffscale), c.currentVoice.scale && (e.scale = c.currentVoice.scale), c.currentVoice.style && (e.style = c.currentVoice.style), c.currentVoice.transpose && (e.clef.transpose = c.currentVoice.transpose) } var l = void 0 === c.currentVoice || 0 === c.currentVoice.staffNum && 0 === c.currentVoice.index; 0 === c.barNumbers && l && 1 !== c.currBarNumber && (e.barNumber = c.currBarNumber), h.startNewLine(e), c.key.impliedNaturals && delete c.key.impliedNaturals, c.partForNextLine = {}, 4 === c.tempoForNextLine.length && h.appendElement(c.tempoForNextLine[0], c.tempoForNextLine[1], c.tempoForNextLine[2], c.tempoForNextLine[3]), c.tempoForNextLine = [] }; var O = function (e) { return void 0 !== e.duration && e.duration < .25 && (e.end_beam = !0), e }, z = { A: 5, B: 6, C: 0, D: 1, E: 2, F: 3, G: 4, a: 12, b: 13, c: 7, d: 8, e: 9, f: 10, g: 11 }, D = { x: "invisible", y: "spacer", z: "rest", Z: "multimeasure" }, j = function (line, e, t, r) { var o, d = function (e) { return "octave" === e || "duration" === e || "Zduration" === e || "broken_rhythm" === e || "end_slur" === e }; "." === line[e] && "-" === line[e + 1] && (o = !0, e++); for (var f = "startSlur", v = !1; ;) { switch (line.charAt(e)) { case "(": if ("startSlur" !== f) return d(f) ? (t.endChar = e, t) : null; void 0 === t.startSlur ? t.startSlur = 1 : t.startSlur++; break; case ")": if (!d(f)) return null; void 0 === t.endSlur ? t.endSlur = 1 : t.endSlur++; break; case "^": if ("startSlur" === f) t.accidental = "sharp", f = "sharp2"; else { if ("sharp2" !== f) return d(f) ? (t.endChar = e, t) : null; t.accidental = "dblsharp", f = "pitch" } break; case "_": if ("startSlur" === f) t.accidental = "flat", f = "flat2"; else { if ("flat2" !== f) return d(f) ? (t.endChar = e, t) : null; t.accidental = "dblflat", f = "pitch" } break; case "=": if ("startSlur" !== f) return d(f) ? (t.endChar = e, t) : null; t.accidental = "natural", f = "pitch"; break; case "A": case "B": case "C": case "D": case "E": case "F": case "G": case "a": case "b": case "c": case "d": case "e": case "f": case "g": if ("startSlur" !== f && "sharp2" !== f && "flat2" !== f && "pitch" !== f) return d(f) ? (t.endChar = e, t) : null; if (t.pitch = z[line.charAt(e)], m.note(c, t), f = "octave", r && 0 !== c.next_note_duration ? (t.duration = c.default_length * c.next_note_duration, c.next_note_duration = 0, v = !0) : t.duration = c.default_length, c.clef && "perc" === c.clef.type || c.currentVoice && "perc" === c.currentVoice.clef) { var y = line.charAt(e); if (t.accidental) { y = { dblflat: "__", flat: "_", natural: "=", sharp: "^", dblsharp: "^^" }[t.accidental] + y } l.formatting && l.formatting.midi && l.formatting.midi.drummap && (t.midipitch = l.formatting.midi.drummap[y]) } else c.clef && c.clef.type.indexOf("-") >= 0 ? t.soundPitch = t.pitch - 7 : c.clef && c.clef.type.indexOf("+") >= 0 && (t.soundPitch = t.pitch + 7); break; case ",": if ("octave" !== f) return d(f) ? (t.endChar = e, t) : null; t.pitch -= 7, void 0 !== t.soundPitch && (t.soundPitch -= 7); break; case "'": if ("octave" !== f) return d(f) ? (t.endChar = e, t) : null; t.pitch += 7, void 0 !== t.soundPitch && (t.soundPitch += 7); break; case "x": case "y": case "z": case "Z": if ("startSlur" !== f) return d(f) ? (t.endChar = e, t) : null; t.rest = { type: D[line.charAt(e)] }, delete t.accidental, delete t.startSlur, delete t.startTie, delete t.endSlur, delete t.endTie, delete t.end_beam, delete t.grace_notes, "multimeasure" === t.rest.type ? (t.duration = l.getBarLength(), t.rest.text = 1, f = "Zduration") : (r && 0 !== c.next_note_duration ? (t.duration = c.default_length * c.next_note_duration, c.next_note_duration = 0, v = !0) : t.duration = c.default_length, f = "duration"); break; case "1": case "2": case "3": case "4": case "5": case "6": case "7": case "8": case "9": case "0": case "/": if ("octave" === f || "duration" === f) { var x = n.getFraction(line, e); for (t.duration = t.duration * x.value, t.endChar = x.index; x.index < line.length && (n.isWhiteSpace(line.charAt(x.index)) || "-" === line.charAt(x.index));)"-" === line.charAt(x.index) ? t.startTie = {} : t = O(t), x.index++; e = x.index - 1, f = "broken_rhythm" } else if ("sharp2" === f) t.accidental = "quartersharp", f = "pitch"; else { if ("flat2" !== f) { if ("Zduration" === f) { var w = n.getNumber(line, e); return t.duration = w.num * l.getBarLength(), t.rest.text = w.num, t.endChar = w.index, t } return null } t.accidental = "quarterflat", f = "pitch" } break; case "-": if ("startSlur" === f) h.addTieToLastNote(o), t.endTie = !0; else { if ("octave" !== f && "duration" !== f && "end_slur" !== f) return "broken_rhythm" === f ? (t.endChar = e, t) : null; if (t.startTie = {}, v || !r) return n.isWhiteSpace(line.charAt(e + 1)) && O(t), t.endChar = e + 1, t; f = "broken_rhythm" } break; case " ": case "\t": if (!d(f)) return null; t.end_beam = !0, o = !1; do { "." === line.charAt(e) && "-" === line.charAt(e + 1) && (o = !0, e++), "-" === line.charAt(e) && (t.startTie = {}, o && (t.startTie.style = "dotted")), e++ } while (e < line.length && (n.isWhiteSpace(line.charAt(e)) || "-" === line.charAt(e)) || "." === line.charAt(e) && "-" === line.charAt(e + 1)); if (t.endChar = e, v || !r || "<" !== line.charAt(e) && ">" !== line.charAt(e)) return t; e--, f = "broken_rhythm"; break; case ">": case "<": if (!d(f)) return null; if (!r) return t.endChar = e, t; var k = I(line, e); e += k[0] - 1, c.next_note_duration = k[2], t.duration = k[1] * t.duration, f = "end_slur"; break; default: return d(f) ? (t.endChar = e, t) : null }if (++e === line.length) return d(f) ? (t.endChar = e, t) : null } return null }, I = function (line, e) { switch (line.charAt(e)) { case ">": return e < line.length - 2 && ">" === line.charAt(e + 1) && ">" === line.charAt(e + 2) ? [3, 1.875, .125] : e < line.length - 1 && ">" === line.charAt(e + 1) ? [2, 1.75, .25] : [1, 1.5, .5]; case "<": return e < line.length - 2 && "<" === line.charAt(e + 1) && "<" === line.charAt(e + 2) ? [3, .125, 1.875] : e < line.length - 1 && "<" === line.charAt(e + 1) ? [2, .25, 1.75] : [1, .5, 1.5] }return null }; e.exports = v }, function (e, t, r) { var n = r(7); e.exports = function () { this.skipWhiteSpace = function (e) { for (var i = 0; i < e.length; i++)if (!this.isWhiteSpace(e.charAt(i))) return i; return e.length }; var e = function (e, i) { return i >= e.length }; this.eatWhiteSpace = function (line, e) { for (var i = e; i < line.length; i++)if (!this.isWhiteSpace(line.charAt(i))) return i - e; return i - e }, this.getKeyPitch = function (t) { var i = this.skipWhiteSpace(t); if (e(t, i)) return { len: 0 }; switch (t.charAt(i)) { case "A": return { len: i + 1, token: "A" }; case "B": return { len: i + 1, token: "B" }; case "C": return { len: i + 1, token: "C" }; case "D": return { len: i + 1, token: "D" }; case "E": return { len: i + 1, token: "E" }; case "F": return { len: i + 1, token: "F" }; case "G": return { len: i + 1, token: "G" } }return { len: 0 } }, this.getSharpFlat = function (e) { if ("bass" === e) return { len: 0 }; switch (e.charAt(0)) { case "#": return { len: 1, token: "#" }; case "b": return { len: 1, token: "b" } }return { len: 0 } }, this.getMode = function (t) { var r = function (e, t) { for (; t < e.length && (e.charAt(t) >= "a" && e.charAt(t) <= "z" || e.charAt(t) >= "A" && e.charAt(t) <= "Z");)t++; return t }, i = this.skipWhiteSpace(t); if (e(t, i)) return { len: 0 }; var n = t.substring(i, i + 3).toLowerCase(); switch ((n.length > 1 && " " === n.charAt(1) || "^" === n.charAt(1) || "_" === n.charAt(1) || "=" === n.charAt(1)) && (n = n.charAt(0)), n) { case "mix": return { len: r(t, i), token: "Mix" }; case "dor": return { len: r(t, i), token: "Dor" }; case "phr": return { len: r(t, i), token: "Phr" }; case "lyd": return { len: r(t, i), token: "Lyd" }; case "loc": return { len: r(t, i), token: "Loc" }; case "aeo": return { len: r(t, i), token: "m" }; case "maj": case "ion": return { len: r(t, i), token: "" }; case "min": case "m": return { len: r(t, i), token: "m" } }return { len: 0 } }, this.getClef = function (t, r) { var o = t, i = this.skipWhiteSpace(t); if (e(t, i)) return { len: 0 }; var c = !1, l = t.substring(i); if (n.startsWith(l, "clef=") && (c = !0, l = l.substring(5), i += 5), 0 === l.length && c) return { len: i + 5, warn: "No clef specified: " + o }; var h = this.skipWhiteSpace(l); if (e(l, h)) return { len: 0 }; h > 0 && (i += h, l = l.substring(h)); var d = null; if (n.startsWith(l, "treble")) d = "treble"; else if (n.startsWith(l, "bass3")) d = "bass3"; else if (n.startsWith(l, "bass")) d = "bass"; else if (n.startsWith(l, "tenor")) d = "tenor"; else if (n.startsWith(l, "alto2")) d = "alto2"; else if (n.startsWith(l, "alto1")) d = "alto1"; else if (n.startsWith(l, "alto")) d = "alto"; else if (!r && c && n.startsWith(l, "none")) d = "none"; else if (n.startsWith(l, "perc")) d = "perc"; else if (!r && c && n.startsWith(l, "C")) d = "tenor"; else if (!r && c && n.startsWith(l, "F")) d = "bass"; else { if (r || !c || !n.startsWith(l, "G")) return { len: i + 5, warn: "Unknown clef specified: " + o }; d = "treble" } return l = l.substring(d.length), (h = this.isMatch(l, "+8")) > 0 ? d += "+8" : (h = this.isMatch(l, "-8")) > 0 && (d += "-8"), { len: i + d.length, token: d, explicit: c } }, this.getBarLine = function (line, i) { switch (line.charAt(i)) { case "]": switch (++i, line.charAt(i)) { case "|": return { len: 2, token: "bar_thick_thin" }; case "[": return ++i, line.charAt(i) >= "1" && line.charAt(i) <= "9" || '"' === line.charAt(i) ? { len: 2, token: "bar_invisible" } : { len: 1, warn: "Unknown bar symbol" }; default: return { len: 1, token: "bar_invisible" } }break; case ":": switch (++i, line.charAt(i)) { case ":": return { len: 2, token: "bar_dbl_repeat" }; case "|": switch (++i, line.charAt(i)) { case "]": switch (++i, line.charAt(i)) { case "|": return ++i, ":" === line.charAt(i) ? { len: 5, token: "bar_dbl_repeat" } : { len: 3, token: "bar_right_repeat" }; default: return { len: 3, token: "bar_right_repeat" } }break; case "|": return ++i, ":" === line.charAt(i) ? { len: 4, token: "bar_dbl_repeat" } : { len: 3, token: "bar_right_repeat" }; default: return { len: 2, token: "bar_right_repeat" } }break; default: return { len: 1, warn: "Unknown bar symbol" } }break; case "[": if (++i, "|" !== line.charAt(i)) return line.charAt(i) >= "1" && line.charAt(i) <= "9" || '"' === line.charAt(i) ? { len: 1, token: "bar_invisible" } : { len: 0 }; switch (++i, line.charAt(i)) { case ":": return { len: 3, token: "bar_left_repeat" }; case "]": return { len: 3, token: "bar_invisible" }; default: return { len: 2, token: "bar_thick_thin" } }break; case "|": switch (++i, line.charAt(i)) { case "]": return { len: 2, token: "bar_thin_thick" }; case "|": return ++i, ":" === line.charAt(i) ? { len: 3, token: "bar_left_repeat" } : { len: 2, token: "bar_thin_thin" }; case ":": for (var e = 0; ":" === line.charAt(i + e);)e++; return { len: 1 + e, token: "bar_left_repeat" }; default: return { len: 1, token: "bar_thin" } } }return { len: 0 } }, this.getTokenOf = function (e, t) { for (var i = 0; i < e.length; i++)if (t.indexOf(e.charAt(i)) < 0) return { len: i, token: e.substring(0, i) }; return { len: i, token: e } }, this.getToken = function (e, t, r) { for (var i = t; i < r && !this.isWhiteSpace(e.charAt(i));)i++; return e.substring(t, i) }, this.isMatch = function (t, r) { var i = this.skipWhiteSpace(t); return e(t, i) ? 0 : n.startsWith(t.substring(i), r) ? i + r.length : 0 }, this.getPitchFromTokens = function (e) { var t = {}; if (t.position = { A: 5, B: 6, C: 0, D: 1, E: 2, F: 3, G: 4, a: 12, b: 13, c: 7, d: 8, e: 9, f: 10, g: 11 }[e[0].token], void 0 === t.position) return { warn: "Pitch expected. Found: " + e[0].token }; for (e.shift(); e.length;)switch (e[0].token) { case ",": t.position -= 7, e.shift(); break; case "'": t.position += 7, e.shift(); break; default: return t }return t }, this.getKeyAccidentals2 = function (e) { for (var t; e.length > 0;) { var r; if ("^" === e[0].token) { if (r = "sharp", e.shift(), 0 === e.length) return { accs: t, warn: "Expected note name after " + r }; switch (e[0].token) { case "^": r = "dblsharp", e.shift(); break; case "/": r = "quartersharp", e.shift() } } else if ("=" === e[0].token) r = "natural", e.shift(); else { if ("_" !== e[0].token) return { accs: t }; if (r = "flat", e.shift(), 0 === e.length) return { accs: t, warn: "Expected note name after " + r }; switch (e[0].token) { case "_": r = "dblflat", e.shift(); break; case "/": r = "quarterflat", e.shift() } } if (0 === e.length) return { accs: t, warn: "Expected note name after " + r }; switch (e[0].token.charAt(0)) { case "a": case "b": case "c": case "d": case "e": case "f": case "g": case "A": case "B": case "C": case "D": case "E": case "F": case "G": void 0 === t && (t = []), t.push({ acc: r, note: e[0].token.charAt(0) }), 1 === e[0].token.length ? e.shift() : e[0].token = e[0].token.substring(1); break; default: return { accs: t, warn: "Expected note name after " + r + " Found: " + e[0].token } } } return { accs: t } }, this.getKeyAccidental = function (t) { var r = { "^": "sharp", "^^": "dblsharp", "=": "natural", _: "flat", __: "dblflat", "_/": "quarterflat", "^/": "quartersharp" }, i = this.skipWhiteSpace(t); if (e(t, i)) return { len: 0 }; var n = null; switch (t.charAt(i)) { case "^": case "_": case "=": n = t.charAt(i); break; default: return { len: 0 } }if (i++, e(t, i)) return { len: 1, warn: "Expected note name after accidental" }; switch (t.charAt(i)) { case "a": case "b": case "c": case "d": case "e": case "f": case "g": case "A": case "B": case "C": case "D": case "E": case "F": case "G": return { len: i + 1, token: { acc: r[n], note: t.charAt(i) } }; case "^": case "_": case "/": if (n += t.charAt(i), i++, e(t, i)) return { len: 2, warn: "Expected note name after accidental" }; switch (t.charAt(i)) { case "a": case "b": case "c": case "d": case "e": case "f": case "g": case "A": case "B": case "C": case "D": case "E": case "F": case "G": return { len: i + 1, token: { acc: r[n], note: t.charAt(i) } }; default: return { len: 2, warn: "Expected note name after accidental" } }break; default: return { len: 1, warn: "Expected note name after accidental" } } }, this.isWhiteSpace = function (e) { return " " === e || "\t" === e || "" === e }, this.getMeat = function (line, e, t) { var r = line.indexOf("%", e); for (r >= 0 && r < t && (t = r); e < t && (" " === line.charAt(e) || "\t" === line.charAt(e) || "" === line.charAt(e));)e++; for (; e < t && (" " === line.charAt(t - 1) || "\t" === line.charAt(t - 1) || "" === line.charAt(t - 1));)t--; return { start: e, end: t } }; var t = function (e) { return e >= "A" && e <= "Z" || e >= "a" && e <= "z" }, r = function (e) { return e >= "0" && e <= "9" }; this.tokenize = function (line, e, n, o) { var c = this.getMeat(line, e, n); e = c.start, n = c.end; for (var i, l = []; e < n;) { if ('"' === line.charAt(e)) { for (i = e + 1; i < n && '"' !== line.charAt(i);)i++; l.push({ type: "quote", token: line.substring(e + 1, i), start: e + 1, end: i }), i++ } else if (t(line.charAt(e))) { if (i = e + 1, o) for (; i < n && !this.isWhiteSpace(line.charAt(i));)i++; else for (; i < n && t(line.charAt(i));)i++; l.push({ type: "alpha", token: line.substring(e, i), continueId: r(line.charAt(i)), start: e, end: i }), e = i + 1 } else if ("." === line.charAt(e) && r(line.charAt(i + 1))) { i = e + 1; for (var h; i < n && r(line.charAt(i));)i++; h = parseFloat(line.substring(e, i)), l.push({ type: "number", token: line.substring(e, i), intt: null, floatt: h, continueId: t(line.charAt(i)), start: e, end: i }), e = i + 1 } else if (r(line.charAt(e)) || "-" === line.charAt(e) && r(line.charAt(i + 1))) { i = e + 1; for (var d, f = null; i < n && r(line.charAt(i));)i++; if ("." === line.charAt(i) && r(line.charAt(i + 1))) for (i++; i < n && r(line.charAt(i));)i++; else f = parseInt(line.substring(e, i)); d = parseFloat(line.substring(e, i)), l.push({ type: "number", token: line.substring(e, i), intt: f, floatt: d, continueId: t(line.charAt(i)), start: e, end: i }), e = i + 1 } else " " === line.charAt(e) || "\t" === line.charAt(e) || l.push({ type: "punct", token: line.charAt(e), start: e, end: e + 1 }), i = e + 1; e = i } return l }, this.getVoiceToken = function (line, e, t) { for (var i = e; i < t && this.isWhiteSpace(line.charAt(i)) || "=" === line.charAt(i);)i++; if ('"' === line.charAt(i)) { var r = line.indexOf('"', i + 1); return -1 === r || r >= t ? { len: 1, err: "Missing close quote" } : { len: r - e + 1, token: this.translateString(line.substring(i + 1, r)) } } for (var n = i; n < t && !this.isWhiteSpace(line.charAt(n)) && "=" !== line.charAt(n);)n++; return { len: n - e + 1, token: line.substring(i, n) } }; var o = { "`a": "Ã ", "'a": "Ã¡", "^a": "Ã¢", "~a": "Ã£", '"a': "Ã¤", oa: "Ã¥", aa: "Ã¥", "=a": "Ä", ua: "Äƒ", ";a": "Ä…", "`e": "Ã¨", "'e": "Ã©", "^e": "Ãª", '"e': "Ã«", "=e": "Ä“", ue: "Ä•", ";e": "Ä™", ".e": "Ä—", "`i": "Ã¬", "'i": "Ã­", "^i": "Ã®", '"i': "Ã¯", "=i": "Ä«", ui: "Ä­", ";i": "Ä¯", "`o": "Ã²", "'o": "Ã³", "^o": "Ã´", "~o": "Ãµ", '"o': "Ã¶", "=o": "Å", uo: "Å", "/o": "Ã¸", "`u": "Ã¹", "'u": "Ãº", "^u": "Ã»", "~u": "Å©", '"u': "Ã¼", ou: "Å¯", "=u": "Å«", uu: "Å­", ";u": "Å³", "`A": "Ã€", "'A": "Ã", "^A": "Ã‚", "~A": "Ãƒ", '"A': "Ã„", oA: "Ã…", AA: "Ã…", "=A": "Ä€", uA: "Ä‚", ";A": "Ä„", "`E": "Ãˆ", "'E": "Ã‰", "^E": "ÃŠ", '"E': "Ã‹", "=E": "Ä’", uE: "Ä”", ";E": "Ä˜", ".E": "Ä–", "`I": "ÃŒ", "'I": "Ã", "^I": "ÃŽ", "~I": "Ä¨", '"I': "Ã", "=I": "Äª", uI: "Ä¬", ";I": "Ä®", ".I": "Ä°", "`O": "Ã’", "'O": "Ã“", "^O": "Ã”", "~O": "Ã•", '"O': "Ã–", "=O": "ÅŒ", uO: "ÅŽ", "/O": "Ã˜", "`U": "Ã™", "'U": "Ãš", "^U": "Ã›", "~U": "Å¨", '"U': "Ãœ", oU: "Å®", "=U": "Åª", uU: "Å¬", ";U": "Å²", ae: "Ã¦", AE: "Ã†", oe: "Å“", OE: "Å’", ss: "ÃŸ", "'c": "Ä‡", "^c": "Ä‰", uc: "Ä", cc: "Ã§", ".c": "Ä‹", cC: "Ã‡", "'C": "Ä†", "^C": "Äˆ", uC: "ÄŒ", ".C": "ÄŠ", "~N": "Ã‘", "~n": "Ã±", "=s": "Å¡", vs: "Å¡", DH: "Ã", dh: "Ã°", HO: "Å", Ho: "Å‘", HU: "Å°", Hu: "Å±", "'Y": "Ã", "'y": "Ã½", "^Y": "Å¶", "^y": "Å·", '"Y': "Å¸", '"y': "Ã¿", vS: "Å ", vZ: "Å½", vz: "Å¾" }, c = { "#": "â™¯", b: "â™­", "=": "â™®" }, l = { 201: "â™¯", 202: "â™­", 203: "â™®", 241: "Â¡", 242: "Â¢", 252: "a", 262: "2", 272: "o", 302: "Ã‚", 312: "ÃŠ", 322: "Ã’", 332: "Ãš", 342: "Ã¢", 352: "Ãª", 362: "Ã²", 372: "Ãº", 243: "Â£", 253: "Â«", 263: "3", 273: "Â»", 303: "Ãƒ", 313: "Ã‹", 323: "Ã“", 333: "Ã›", 343: "Ã£", 353: "Ã«", 363: "Ã³", 373: "Ã»", 244: "Â¤", 254: "Â¬", 264: "  Ì", 274: "1â„4", 304: "Ã„", 314: "ÃŒ", 324: "Ã”", 334: "Ãœ", 344: "Ã¤", 354: "Ã¬", 364: "Ã´", 374: "Ã¼", 245: "Â¥", 255: "-", 265: "Î¼", 275: "1â„2", 305: "Ã…", 315: "Ã", 325: "Ã•", 335: "Ã", 345: "Ã¥", 355: "Ã­", 365: "Ãµ", 375: "Ã½", 246: "Â¦", 256: "Â®", 266: "Â¶", 276: "3â„4", 306: "Ã†", 316: "ÃŽ", 326: "Ã–", 336: "Ãž", 346: "Ã¦", 356: "Ã®", 366: "Ã¶", 376: "Ã¾", 247: "Â§", 257: " Ì„", 267: "Â·", 277: "Â¿", 307: "Ã‡", 317: "Ã", 327: "Ã—", 337: "ÃŸ", 347: "Ã§", 357: "Ã¯", 367: "Ã·", 377: "Ã¿", 250: " Ìˆ", 260: "Â°", 270: " Ì§", 300: "Ã€", 310: "Ãˆ", 320: "Ã", 330: "Ã˜", 340: "Ã ", 350: "Ã¨", 360: "Ã°", 370: "Ã¸", 251: "Â©", 261: "Â±", 271: "1", 301: "Ã", 311: "Ã‰", 321: "Ã‘", 331: "Ã™", 341: "Ã¡", 351: "Ã©", 361: "Ã±", 371: "Ã¹" }; this.translateString = function (e) { var t = e.split("\\"); if (1 === t.length) return e; var r = null; return n.each(t, (function (s) { if (null === r) r = s; else { var e = o[s.substring(0, 2)]; void 0 !== e ? r += e + s.substring(2) : void 0 !== (e = l[s.substring(0, 3)]) ? r += e + s.substring(3) : (e = c[s.substring(0, 1)], r += void 0 !== e ? e + s.substring(1) : "\\" + s) } })), r }, this.getNumber = function (line, e) { for (var t = 0; e < line.length;)switch (line.charAt(e)) { case "0": t *= 10, e++; break; case "1": t = 10 * t + 1, e++; break; case "2": t = 10 * t + 2, e++; break; case "3": t = 10 * t + 3, e++; break; case "4": t = 10 * t + 4, e++; break; case "5": t = 10 * t + 5, e++; break; case "6": t = 10 * t + 6, e++; break; case "7": t = 10 * t + 7, e++; break; case "8": t = 10 * t + 8, e++; break; case "9": t = 10 * t + 9, e++; break; default: return { num: t, index: e } }return { num: t, index: e } }, this.getFraction = function (line, e) { var t = 1, r = 1; if ("/" !== line.charAt(e)) { var n = this.getNumber(line, e); t = n.num, e = n.index } if ("/" === line.charAt(e)) { if (e++, "/" === line.charAt(e)) { for (var div = .5; "/" === line.charAt(e++);)div /= 2; return { value: t * div, index: e - 1 } } var o = e, c = this.getNumber(line, e); 0 === c.num && o === e && (c.num = 2), 0 !== c.num && (r = c.num), e = c.index } return { value: t / r, index: e } }, this.theReverser = function (e) { return n.endsWith(e, ", The") ? "The " + e.substring(0, e.length - 5) : n.endsWith(e, ", A") ? "A " + e.substring(0, e.length - 3) : e }, this.stripComment = function (e) { var i = e.indexOf("%"); return i >= 0 ? n.strip(e.substring(0, i)) : n.strip(e) }, this.getInt = function (e) { var t = parseInt(e); if (isNaN(t)) return { digits: 0 }; var s = "" + t; return { value: t, digits: e.indexOf(s) + s.length } }, this.getFloat = function (e) { var t = parseFloat(e); if (isNaN(t)) return { digits: 0 }; var s = "" + t; return { value: t, digits: e.indexOf(s) + s.length } }, this.getMeasurement = function (e) { if (0 === e.length) return { used: 0 }; var t = 1, r = ""; if ("-" === e[0].token) e.shift(), r = "-", t++; else if ("number" !== e[0].type) return { used: 0 }; if (r += e.shift().token, 0 === e.length) return { used: 1, value: parseInt(r) }; var n = e.shift(); if ("." === n.token) { if (t++, 0 === e.length) return { used: t, value: parseInt(r) }; if ("number" === e[0].type && (r = r + "." + (n = e.shift()).token, t++, 0 === e.length)) return { used: t, value: parseFloat(r) }; n = e.shift() } switch (n.token) { case "pt": return { used: t + 1, value: parseFloat(r) }; case "cm": return { used: t + 1, value: parseFloat(r) / 2.54 * 72 }; case "in": return { used: t + 1, value: 72 * parseFloat(r) }; default: return e.unshift(n), { used: t, value: parseFloat(r) } }return { used: 0 } }; var h = function (e) { for (; -1 !== e.indexOf("\\n");)e = e.replace("\\n", "\n"); return e }; this.getBrackettedSubstring = function (line, i, e, t) { for (var r = t || line.charAt(i), n = i + 1; n < line.length && line.charAt(n) !== r;)++n; return line.charAt(n) === r ? [n - i + 1, h(line.substring(i + 1, n)), !0] : ((n = i + e) > line.length - 1 && (n = line.length - 1), [n - i + 1, h(line.substring(i + 1, n)), !1]) } } }, function (e, t, r) { var n, o = r(7); !function () { "use strict"; var e, t = 128; function r(e, t, r) { for (var n = 0, i = t + 1; i < e.length; i++)if ("note" === e[i].el_type && n++, e[i].decoration && e[i].decoration.indexOf(r) >= 0) return n; return n } function c(e, t, r) { for (var n = Math.min(e.length, t + 3), i = t; i < n; i++)if ("note" === e[i].el_type && e[i].decoration) for (var o = 0; o < e[i].decoration.length; o++)if (r.indexOf(e[i].decoration[o]) >= 0) return e[i].decoration[o]; return null } function l(e) { for (var i = 0; i < e.length; i++)for (var t = e[i], r = t.length - 1; r >= 0 && "bar" !== t[r].el_type;)t[r].noChordVoice = !0, r-- } function h(e, t) { if (e && !(e.length <= t) && e[t].title) return e[t].title.join(" ") } function d(element, e) { var t = 1 / 4; element.duration && (t = element.duration[0]); var r = 60; return element.bpm && (r = element.bpm), t * r / e } function f(element) { var meter; switch (element.type) { case "common_time": meter = { el_type: "meter", num: 4, den: 4 }; break; case "cut_time": meter = { el_type: "meter", num: 2, den: 2 }; break; case "specified": meter = { el_type: "meter", num: element.value[0].num, den: element.value[0].den }; break; default: meter = { el_type: "meter" } }return e = meter.num / meter.den, meter } n = function (n, m) { var v, y = (m = m || {}).program || 0, x = m.midiTranspose || 0; n.visualTranspose && (x -= n.visualTranspose); var w = m.channel || 0, k = !1, T = m.drum || "", C = m.drumBars || 1, A = m.drumIntro || 0, S = "" !== T, style = []; y = parseInt(y, 10), x = parseInt(x, 10), 10 === (w = parseInt(w, 10)) && (y = t), T = T.split(" "), C = parseInt(C, 10), A = parseInt(A, 10); var _ = n.formatting.bagpipes; _ && (y = 71); var E = []; if (n.formatting.midi) { var M = n.formatting.midi; M.program && M.program.length > 0 && (y = M.program[0], M.program.length > 1 && (y = M.program[1], w = M.program[0]), k = !0), M.transpose && (x = M.transpose[0]), M.channel && (w = M.channel[0], k = !0), M.drum && (T = M.drum), M.drumbars && (C = M.drumbars[0]), M.drumon && (S = !0), 10 === w && (y = t), M.beat && E.push({ el_type: "beat", beats: M.beat }), M.nobeataccents && E.push({ el_type: "beataccents", value: !1 }) } v = m.qpm ? parseInt(m.qpm, 10) : n.metaText.tempo ? d(n.metaText.tempo, n.getBeatLength()) : m.defaultQpm ? m.defaultQpm : 180; var N = []; _ && N.push({ el_type: "bagpipes" }), N.push({ el_type: "instrument", program: y }), w && N.push({ el_type: "channel", channel: w }), x && N.push({ el_type: "transpose", transpose: x }), N.push({ el_type: "tempo", qpm: v }); for (var B = 0; B < E.length; B++)N.push(E[B]); var P, L = [], H = [], O = [], z = [0], D = {}; D[0] = { el_type: "tempo", qpm: v, timing: 0 }; for (var j = [], I = [], F = !1, i = 0; i < n.lines.length; i++) { var line = n.lines[i]; if (line.staff) { for (var V = line.staff, Y = 0, G = 0; G < V.length; G++)for (var W = V[G], R = 0; R < W.voices.length; R++) { var X = W.voices[R]; if (!L[Y]) { L[Y] = [].concat(JSON.parse(JSON.stringify(N))); var U = h(line.staff, Y); U && L[Y].unshift({ el_type: "name", trackName: U }) } if (x && "perc" === W.clef.type && L[Y].push({ el_type: "transpose", transpose: 0 }), W.clef && "perc" === W.clef.type && !k) for (var K = 0; K < L[Y].length; K++)"instrument" === L[Y][K].el_type && (L[Y][K].program = t); else W.key && ("HP" === W.key.root ? L[Y].push({ el_type: "key", accidentals: [{ acc: "natural", note: "g" }, { acc: "sharp", note: "f" }, { acc: "sharp", note: "c" }] }) : L[Y].push({ el_type: "key", accidentals: W.key.accidentals })); W.meter && L[Y].push(f(W.meter)), !F && S && (L[Y].push({ el_type: "drum", params: { pattern: T, bars: C, on: S, intro: A } }), F = !0), W.clef && "perc" !== W.clef.type && W.clef.transpose && (W.clef.el_type = "clef", L[Y].push({ el_type: "transpose", transpose: W.clef.transpose })), W.clef && W.clef.type && (W.clef.type.indexOf("-8") >= 0 ? L[Y].push({ el_type: "transpose", transpose: -12 }) : W.clef.type.indexOf("+8") >= 0 && L[Y].push({ el_type: "transpose", transpose: 12 })), n.formatting.midi && n.formatting.midi.drumoff && (L[Y].push({ el_type: "bar" }), L[Y].push({ el_type: "drum", params: { pattern: "", on: !1 } })); var $ = 0, Q = 0, J = 0, Z = 0; P = [105, 95, 85, 1]; for (var ee = 0; ee < X.length; ee++) { var te = X[ee]; switch (te.el_type) { case "note": if (H[R] && (P[0] += H[R], P[1] += H[R], P[2] += H[R], L[Y].push({ el_type: "beat", beats: P.slice(0) })), O[R] && (P[0] += O[R], P[1] += O[R], P[2] += O[R], L[Y].push({ el_type: "beat", beats: P.slice(0) })), he(te), !te.rest || "spacer" !== te.rest.type) { var re = { elem: te, el_type: "note", timing: z[Y] }; te.style ? re.style = te.style : style[Y] && (re.style = style[Y]), re.duration = 0 === te.duration ? .25 : te.duration, te.startTriplet ? (Q = te.tripletMultiplier, J = te.startTriplet * Q * te.duration, re.duration = re.duration * Q, re.duration = Math.round(1e6 * re.duration) / 1e6, Z = re.duration) : Q && (te.endTriplet ? (Q = 0, re.duration = Math.round(1e6 * (J - Z)) / 1e6) : (re.duration = re.duration * Q, re.duration = Math.round(1e6 * re.duration) / 1e6, Z += re.duration)), te.rest && (re.rest = te.rest), te.decoration && (re.decoration = te.decoration.slice(0)), te.pitches && (re.pitches = o.cloneArray(te.pitches)), te.gracenotes && (re.gracenotes = o.cloneArray(te.gracenotes)), te.chord && (re.chord = o.cloneArray(te.chord)), L[Y].push(re), "rhythm" === te.style && (!0, l(L)), $++, z[Y] += re.duration } break; case "key": "HP" === te.root ? L[Y].push({ el_type: "key", accidentals: [{ acc: "natural", note: "g" }, { acc: "sharp", note: "f" }, { acc: "sharp", note: "c" }] }) : L[Y].push({ el_type: "key", accidentals: te.accidentals }); break; case "meter": L[Y].push(f(te)); break; case "clef": te.transpose && L[Y].push({ el_type: "transpose", transpose: te.transpose }), te.type && (te.type.indexOf("-8") >= 0 ? L[Y].push({ el_type: "transpose", transpose: -12 }) : te.type.indexOf("+8") >= 0 && L[Y].push({ el_type: "transpose", transpose: 12 })); break; case "tempo": v = d(te, n.getBeatLength()), L[Y].push({ el_type: "tempo", qpm: v, timing: z[Y] }), D["" + z[Y]] = { el_type: "tempo", qpm: v, timing: z[Y] }; break; case "bar": $ > 0 && L[Y].push({ el_type: "bar" }), he(te), $ = 0; var ne = "bar_right_repeat" === te.type || "bar_dbl_repeat" === te.type, ie = "1" === te.startEnding, ae = "bar_left_repeat" === te.type || "bar_dbl_repeat" === te.type || "bar_right_repeat" === te.type; if (ne) { var s = j[Y]; s || (s = 0); var se = I[Y]; se || (se = L[Y].length); for (var oe = s; oe < se; oe++) { var ce = o.clone(L[Y][oe]); ce.pitches && (ce.pitches = o.cloneArray(ce.pitches)), L[Y].push(ce) } I[Y] = void 0, j[Y] = void 0 } ie && (I[Y] = L[Y].length), ae && (j[Y] = L[Y].length), !1; break; case "style": style[Y] = te.head; break; case "timeSignature": L[Y].push(f(te)); break; case "part": break; case "stem": case "scale": break; case "midi": var le = !1; switch (te.cmd) { case "drumon": S = !0, le = !0; break; case "drumoff": S = !1, le = !0; break; case "drum": T = te.params, le = !0; break; case "drumbars": C = te.params[0], le = !0; break; case "drummap": break; case "channel": 10 === te.params[0] && L[Y].push({ el_type: "instrument", program: t }); break; case "program": L[Y].push({ el_type: "instrument", program: te.params[0] }), k = !0; break; case "transpose": L[Y].push({ el_type: "transpose", transpose: te.params[0] }); break; case "gchordoff": L[Y].push({ el_type: "gchord", tacet: !0 }); break; case "gchordon": L[Y].push({ el_type: "gchord", tacet: !1 }); break; case "beat": L[Y].push({ el_type: "beat", beats: te.params }); break; case "nobeataccents": L[Y].push({ el_type: "beataccents", value: !1 }); break; case "beataccents": L[Y].push({ el_type: "beataccents", value: !0 }); break; case "vol": L[Y].push({ el_type: "vol", volume: te.params[0] }); break; case "volinc": L[Y].push({ el_type: "volinc", volume: te.params[0] }); break; default: console.log("MIDI seq: midi cmd not handled: ", te.cmd, te) }le && (L[0].push({ el_type: "drum", params: { pattern: T, bars: C, intro: A, on: S } }), F = !0); break; default: console.log("MIDI: element type " + te.el_type + " not handled.") } } z[++Y] || (z[Y] = 0) } function he(e) { var t, n = { pppp: [15, 10, 5, 1], ppp: [30, 20, 10, 1], pp: [45, 35, 20, 1], p: [60, 50, 35, 1], mp: [75, 65, 50, 1], mf: [90, 80, 65, 1], f: [105, 95, 80, 1], ff: [120, 110, 95, 1], fff: [127, 125, 110, 1], ffff: [127, 125, 110, 1] }; if (e.decoration) if (e.decoration.indexOf("pppp") >= 0 ? t = "pppp" : e.decoration.indexOf("ppp") >= 0 ? t = "ppp" : e.decoration.indexOf("pp") >= 0 ? t = "pp" : e.decoration.indexOf("p") >= 0 ? t = "p" : e.decoration.indexOf("mp") >= 0 ? t = "mp" : e.decoration.indexOf("mf") >= 0 ? t = "mf" : e.decoration.indexOf("f") >= 0 ? t = "f" : e.decoration.indexOf("ff") >= 0 ? t = "ff" : e.decoration.indexOf("fff") >= 0 ? t = "fff" : e.decoration.indexOf("ffff") >= 0 && (t = "ffff"), t && (P = n[t].slice(0), L[Y].push({ el_type: "beat", beats: P.slice(0) }), H[R] = !1, O[R] = !1), e.decoration.indexOf("crescendo(") >= 0) { var o = r(X, ee, "crescendo)"), l = Math.min(127, P[0] + 50), h = c(X, ee + o + 1, Object.keys(n)); h && (l = n[h][0]), H[R] = o > 0 && Math.floor((l - P[0]) / o), O[R] = !1 } else if (e.decoration.indexOf("crescendo)") >= 0) H[R] = !1; else if (e.decoration.indexOf("diminuendo(") >= 0) { var d = r(X, ee, "diminuendo)"), f = Math.max(15, P[0] - 50), m = c(X, ee + d + 1, Object.keys(n)); m && (f = n[m][0]), H[R] = !1, O[R] = d > 0 && Math.floor((f - P[0]) / d) } else e.decoration.indexOf("diminuendo)") >= 0 && (O[R] = !1) } } } if (function (e, t) { if (!t || 0 === t.length) return; for (var r = Object.keys(t), i = 0; i < e.length; i++)for (var n = e[i], o = t[0] ? t[0].qpm : 0, c = 0; c < n.length; c++) { var l = n[c]; "tempo" === l.el_type && (o = l.qpm), r.indexOf("" + l.timing) >= 0 && o !== t["" + l.timing].qpm && (o = t["" + l.timing].qpm, "tempo" === l.el_type ? (l.qpm = t["" + l.timing].qpm, c++) : (e[i].splice(c, 0, { el_type: "tempo", qpm: t["" + l.timing].qpm, timing: l.timing }), c += 2)) } }(L, D), A) for (var ue = n.getPickupLength(), de = 0; de < L.length; de++) { for (var fe = 0; "note" !== L[de][fe].el_type && L[de].length > fe;)fe++; if (L[de].length > fe) for (var pe = 0; pe < A; pe++)0 === ue || pe < A - 1 ? L[de].splice(fe, 0, { el_type: "note", rest: { type: "rest" }, duration: e }, { el_type: "bar" }) : L[de].splice(fe, 0, { el_type: "note", rest: { type: "rest" }, duration: e - ue }) } return L.length > 0 && L[0].length > 0 && (L[0][0].pickupLength = n.getPickupLength()), L } }(), e.exports = n }, function (e, t, r) { var n, o = r(7), c = r(142); !function () { "use strict"; var e, t, r, l, h, d, f, m, v, y, x, w, k, T, C, A, S, _, E, M, N, B, P, L = 1, meter = { num: 4, den: 4 }, H = 64, O = 48, z = !1, D = !1, j = !0, I = 105, F = 95, V = 85, Y = .25, G = 0, W = {}, R = 0; function X(e) { for (var i = v.length - 1; i >= 0; i--)if ("program" === v[i].cmd) return void (v[i].channel = e) } function U(time) { return time / 1e6 } function K(e) { return Math.round(e * L * 1e6) / 1e6 } function $(meter) { switch (parseInt(meter.den, 10)) { case 2: return .5; case 4: return .25; case 8: return meter.num % 3 == 0 ? .375 : .125; case 16: return .125 }return .25 } n = function (n, o, c) { o || (o = {}), e = [], t = [0, 0, 0, 0, 0, 0, 0], !1, l = [], h = void 0, d = void 0, L = 1, f = void 0, m = void 0, v = void 0, y = void 0, x = 0, P = c, meter = { num: 4, den: 4 }, w = [], k = !1, C = n.length, T = !1, A = [], H = 64, O = 48, S = void 0, _ = void 0, z = !!o.chordsOff, D = !1, j = !0, I = 105, F = 95, V = 85, Y = .25, M = void 0, N = void 0, G = 0, B = [], !1, W = {}, n.length > 0 && n[0].length > 0 && (R = n[0][0].pickupLength), function (e) { for (var i = 0; i < e.length; i++) { for (var t = e[i], r = {}, n = 0, o = 0, c = 1, l = 0; l < t.length; l++) { var element = t[l]; if ("tempo" !== element.el_type) { element.time = o; var h = element.duration ? element.duration : 0; if (o += Math.round(h * c * 1e6), element.pitches) { for (var d = 0; d < element.pitches.length; d++) { var f = element.pitches[d]; if (f) if (f.duration = element.duration, f.startTie) void 0 === r[f.pitch] ? r[f.pitch] = { el: l, pitch: d } : (t[r[f.pitch].el].pitches[r[f.pitch].pitch].duration += f.duration, element.pitches[d] = null); else if (f.endTie) { var m = r[f.pitch]; if (m) { var v = f.duration; delete t[m.el].pitches[m.pitch].startTie, t[m.el].pitches[m.pitch].duration += v, element.pitches[d] = null, delete r[f.pitch] } else delete f.endTie } } delete element.duration } } else n ? c = element.qpm ? n / element.qpm : 1 : n = element.qpm } for (var y in r) if (r.hasOwnProperty(y)) { var x = r[y]; delete t[x.el].pitches[x.pitch].startTie } } }(n); for (var i = 0; i < n.length; i++) { r = 0, -1; var K = n[i]; v = [{ cmd: "program", channel: i, instrument: f }], y = void 0, E = 0; var Q = !1; (!0 === o.voicesOff || o.voicesOff && o.voicesOff.length && o.voicesOff.indexOf(i) >= 0) && (Q = !0); for (var J = 0; J < K.length; J++) { var element = K[J]; switch (element.el_type) { case "name": y = { cmd: "text", type: "name", text: element.trackName }; break; case "note": te(element, Q) && (k = i); break; case "key": t = ie(element); break; case "meter": d || (d = element), Y = $(meter = element); break; case "tempo": h ? L = element.qpm ? h / element.qpm : 1 : h = element.qpm; break; case "transpose": r = element.transpose; break; case "bar": w.length > 0 && (!1 === k || i === k) && (de(E, U(element.time)), A = []), e = [], 0 === i && pe(n.length + 1), D = !1, _ = S, E = U(element.time); break; case "bagpipes": !0; break; case "instrument": if (void 0 === f && (f = element.program), m = element.program, v.length > 0 && "program" === v[v.length - 1].cmd) v[v.length - 1].instrument = element.program; else { var Z; for (Z = v.length - 1; Z >= 0 && "program" !== v[Z].cmd; Z--); (Z < 0 || v[Z].instrument !== element.program) && v.push({ cmd: "program", channel: 0, instrument: element.program }) } break; case "channel": X(element.channel); break; case "drum": W = fe(element.params); break; case "gchord": o.chordsOff || (z = element.tacet); break; case "beat": I = element.beats[0], F = element.beats[1], V = element.beats[2]; break; case "vol": M = element.volume; break; case "volinc": N = element.volume; break; case "beataccents": j = element.value; break; default: console.log("MIDI creation. Unknown el_type: " + element.el_type + "\n") } } void 0 === v[0].instrument && (v[0].instrument = f || 0), y && v.unshift(y), l.push(v), w.length > 0 && (T = !0), B.length > 0 && !0 } return w.length > 0 && l.push(w), B.length > 0 && l.push(B), { tempo: h, instrument: f, tracks: l, totalDuration: x } }; var Q = ["break", "(break)", "no chord", "n.c.", "tacet"]; function J(e, t, r) { return (r - e) / t } function Z(e) { var t = !1, n = function (e) { if (z) return "break"; if (T || !e.chord || 0 === e.chord.length) return null; for (var i = 0; i < e.chord.length; i++) { var t = e.chord[i]; if ("default" === t.position) return t.name; if (Q.indexOf(t.name.toLowerCase()) >= 0) return "break" } return null }(e); if (n) { var o = function (e) { if (0 === e.length) return; if ("break" === e) return { chick: [] }; var t = e.substring(0, 1); if ("(" === t) { if (0 === (e = e.substring(1, e.length - 2)).length) return; t = e.substring(0, 1) } var n = se[t]; if (!n) return; var o = r; for (; o < -8;)o += 12; for (; o > 8;)o -= 12; var c, l = (n += o) - 5; 1 === e.length && (c = ce(n, "")); var h = e.substring(1), d = h.substring(0, 1); "b" === d || "â™­" === d ? (n--, l--, h = h.substring(1)) : "#" !== d && "â™¯" !== d || (n++, l++, h = h.substring(1)); var f = h.split("/"); if ((c = ce(n, f[0])).length >= 3) { l = l + (c[2] - c[0]) - 7 } if (2 === f.length) { if (se[f[1].substring(0, 1)]) { var m = { "#": 1, "â™¯": 1, b: -1, "â™­": -1 }[f[1].substring(1)] || 0; l = n = se[f[1].substring(0, 1)] + m + o } } return { boom: n, boom2: l, chick: c } }(n); if (o) { 0 === w.length && (t = !0, w.push({ cmd: "program", channel: C, instrument: 0 })), S = o; var c = J(E, $(meter), U(e.time)); A.push({ chord: S, beat: c, start: U(e.time) }) } } return t } function ee(e, p) { var t = p.start, r = p.duration, n = K(1 / 32); switch (e) { case "trill": for (var o = 1; r > 0;)v.push({ cmd: "note", pitch: p.pitch + o, volume: p.volume, start: t, duration: n, gap: 0, instrument: m, style: "decoration" }), o = 1 === o ? 0 : 1, r -= n, t += n; break; case "mordent": v.push({ cmd: "note", pitch: p.pitch, volume: p.volume, start: t, duration: n, gap: 0, instrument: m, style: "decoration" }), r -= n, t += n, v.push({ cmd: "note", pitch: p.pitch + 1, volume: p.volume, start: t, duration: n, gap: 0, instrument: m, style: "decoration" }), r -= n, t += n, v.push({ cmd: "note", pitch: p.pitch, volume: p.volume, start: t, duration: r, gap: 0, instrument: m }); break; case "lowermordent": v.push({ cmd: "note", pitch: p.pitch, volume: p.volume, start: t, duration: n, gap: 0, instrument: m, style: "decoration" }), r -= n, t += n, v.push({ cmd: "note", pitch: p.pitch - 1, volume: p.volume, start: t, duration: n, gap: 0, instrument: m, style: "decoration" }), r -= n, t += n, v.push({ cmd: "note", pitch: p.pitch, volume: p.volume, start: t, duration: r, gap: 0, instrument: m }); break; case "turn": n = p.duration / 5, v.push({ cmd: "note", pitch: p.pitch, volume: p.volume, start: t, duration: n, gap: 0, instrument: m, style: "decoration" }), v.push({ cmd: "note", pitch: p.pitch + 1, volume: p.volume, start: t + n, duration: n, gap: 0, instrument: m, style: "decoration" }), v.push({ cmd: "note", pitch: p.pitch, volume: p.volume, start: t + 2 * n, duration: n, gap: 0, instrument: m, style: "decoration" }), v.push({ cmd: "note", pitch: p.pitch + 1, volume: p.volume, start: t + 3 * n, duration: n, gap: 0, instrument: m, style: "decoration" }), v.push({ cmd: "note", pitch: p.pitch, volume: p.volume, start: t + 4 * n, duration: n, gap: 0, instrument: m }); break; case "roll": for (; r > 0;)v.push({ cmd: "note", pitch: p.pitch, volume: p.volume, start: t, duration: n, gap: 0, instrument: m, style: "decoration" }), r -= 2 * n, t += 2 * n } } function te(e, t) { v.length; var r, n = function (e, t) { if (t) return 0; var r; if (M) r = M, M = void 0; else if (j) if (R > e) r = V; else { meter.num, meter.den; var n = J(E, $(meter), e); r = 0 === n ? I : parseInt(n, 10) === n ? F : V } else r = F; return N && (r += N, N = void 0), r < 0 && (r = 0), r > 127 && (r = 127), t ? 0 : r }(U(e.time), t), l = Z(e); if (e.gracenotes && e.pitches && e.pitches.length > 0 && e.pitches[0] && (r = function (e, t) { for (var r, n = 0, o = [], g = 0; g < e.length; g++)n += (r = e[g]).duration; var c = t / 2 / n; for (g = 0; g < e.length; g++) { var l = ne(r = e[g]); o.push({ pitch: l, duration: r.duration * c }) } return o }(e.gracenotes, e.pitches[0].duration), e.elem && (e.elem.midiGraceNotePitches = function (e, t, r, n) { var o = []; r = Math.round(r); for (var g = 0; g < e.length; g++) { var c = e[g]; v.push({ cmd: "note", pitch: c.pitch, volume: r, start: t, duration: c.duration, gap: 0, instrument: n, style: "grace" }), o.push({ pitch: c.pitch, durationInMeasures: c.duration, volume: r, instrument: n }), t += c.duration } return o }(r, U(e.time), 2 * n / 3, m))), e.elem) { var rt = U(e.time), d = rt / Y / h * 60 * 1e3; if (void 0 === e.elem.currentTrackMilliseconds) e.elem.currentTrackMilliseconds = d, e.elem.currentTrackWholeNotes = rt; else if (void 0 === e.elem.currentTrackMilliseconds.length) e.elem.currentTrackMilliseconds !== d && (e.elem.currentTrackMilliseconds = [e.elem.currentTrackMilliseconds, d], e.elem.currentTrackWholeNotes = [e.elem.currentTrackWholeNotes, rt]); else { for (var f = !1, y = 0; y < e.elem.currentTrackMilliseconds.length; y++)e.elem.currentTrackMilliseconds[y] === d && (f = !0); f || (e.elem.currentTrackMilliseconds.push(d), e.elem.currentTrackWholeNotes.push(rt)) } } if (e.pitches) { var w = "", k = function (e, t) { var r = {}; if (e.decoration) for (var n = 0; n < e.decoration.length; n++)"staccato" === e.decoration[n] ? r.thisBreakBetweenNotes = "staccato" : "tenuto" === e.decoration[n] ? r.thisBreakBetweenNotes = "tenuto" : "accent" === e.decoration[n] ? r.velocity = Math.min(127, 1.5 * t) : "trill" === e.decoration[n] ? r.noteModification = "trill" : "lowermordent" === e.decoration[n] ? r.noteModification = "lowermordent" : "uppermordent" === e.decoration[n] || "mordent" === e.decoration[n] ? r.noteModification = "mordent" : "turn" === e.decoration[n] ? r.noteModification = "turn" : "roll" === e.decoration[n] && (r.noteModification = "roll"); return r }(e, n); k.thisBreakBetweenNotes && (w = k.thisBreakBetweenNotes), k.velocity && (n = k.velocity); var T = e.pitches; if ("rhythm" === e.style && (D = !0, S && S.chick)) { T = []; for (var C = 0; C < S.chick.length; C++) { var A = o.clone(e.pitches[0]); A.actualPitch = S.chick[C], T.push(A) } } e.elem && (e.elem.midiPitches = []); for (var i = 0; i < T.length; i++) { var _ = T[i]; if (_) { _.startSlur && (G += _.startSlur.length), _.endSlur && (G -= _.endSlur.length); var B = _.actualPitch ? _.actualPitch : ne(_); if (128 === m && P) { var L = c(_); L && P[L] && (B = P[L].sound) } var p = { cmd: "note", pitch: B, volume: n, start: U(e.time), duration: K(_.duration), instrument: m }; if (e.gracenotes && (p.duration = p.duration / 2, p.start = p.start + p.duration), e.elem && e.elem.midiPitches.push(p), k.noteModification) ee(k.noteModification, p); else { switch (G > 0 ? p.endType = "tenuto" : w && (p.endType = w), p.endType) { case "tenuto": p.gap = -.001; break; case "staccato": var H = .4 * p.duration; p.gap = h / 60 * H; break; default: p.gap = 0 }v.push(p) } } } v.length - 1 } var O = function (e) { return e.pitches && e.pitches.length > 0 && e.pitches[0] ? e.pitches[0].duration : e.elem ? e.elem.duration : e.duration }(e); return x = Math.max(x, U(e.time) + K(O)), l } var re = [0, 2, 4, 5, 7, 9, 11]; function ne(n) { if (void 0 !== n.midipitch) return n.midipitch; var o = n.soundPitch || 0 === n.soundPitch ? n.soundPitch : n.pitch; if (n.accidental) switch (n.accidental) { case "sharp": e[o] = 1; break; case "flat": e[o] = -1; break; case "natural": e[o] = 0; break; case "dblsharp": e[o] = 2; break; case "dblflat": e[o] = -2 }var c = 12 * function (e) { return Math.floor(e / 7) }(o) + re[ae(o)] + 60; if (void 0 !== e[o]) { var l = t[ae(o)], h = e[o], d = 0; -1 === l ? d = h + 1 : 0 === l ? d = h : 1 === l && (d = h - 1), c += l + d } else c += t[ae(o)]; return c += r } function ie(e) { var t = [0, 0, 0, 0, 0, 0, 0]; if (!e.accidentals) return t; for (var i = 0; i < e.accidentals.length; i++) { var r = e.accidentals[i], n = "sharp" === r.acc ? 1 : "natural" === r.acc ? 0 : -1; t[ae(r.note.toLowerCase().charCodeAt(0) - "c".charCodeAt(0))] += n } return t } function ae(e) { return (e %= 7) < 0 && (e += 7), e } var se = { A: 33, B: 35, C: 36, D: 38, E: 40, F: 41, G: 43 }; var oe = { dim: [0, 3, 6], "Â°": [0, 3, 6], "Ëš": [0, 3, 6], dim7: [0, 3, 6, 9], "Â°7": [0, 3, 6, 9], "Ëš7": [0, 3, 6, 9], "Ã¸7": [0, 3, 6, 10], "m7(b5)": [0, 3, 6, 10], m7b5: [0, 3, 6, 10], "m7â™­5": [0, 3, 6, 10], "-7(b5)": [0, 3, 6, 10], "-7b5": [0, 3, 6, 10], "7b5": [0, 4, 6, 10], "7(b5)": [0, 4, 6, 10], "7â™­5": [0, 4, 6, 10], "7(b9,b5)": [0, 4, 6, 10, 13], "7b9,b5": [0, 4, 6, 10, 13], "7(#9,b5)": [0, 4, 6, 10, 15], "7#9b5": [0, 4, 6, 10, 15], "maj7(b5)": [0, 4, 6, 11], maj7b5: [0, 4, 6, 11], "13(b5)": [0, 4, 6, 10, 14, 21], "13b5": [0, 4, 6, 10, 14, 21], m: [0, 3, 7], "-": [0, 3, 7], m6: [0, 3, 7, 9], "-6": [0, 3, 7, 9], m7: [0, 3, 7, 10], "-7": [0, 3, 7, 10], "-(b6)": [0, 3, 7, 8], "-b6": [0, 3, 7, 8], "-6/9": [0, 3, 7, 9, 14], "-7(b9)": [0, 3, 7, 10, 13], "-7b9": [0, 3, 7, 10, 13], "-maj7": [0, 3, 7, 11], "-9+7": [0, 3, 7, 11, 13], "-11": [0, 3, 7, 11, 14, 17], m11: [0, 3, 7, 11, 14, 17], "-maj9": [0, 3, 7, 11, 14], "-âˆ†9": [0, 3, 7, 11, 14], mM9: [0, 3, 7, 11, 14], M: [0, 4, 7], 6: [0, 4, 7, 9], "6/9": [0, 4, 7, 9, 14], "6add9": [0, 4, 7, 9, 14], 69: [0, 4, 7, 9, 14], 7: [0, 4, 7, 10], 9: [0, 4, 7, 10, 14], 11: [0, 7, 10, 14, 17], 13: [0, 4, 7, 10, 14, 21], "7b9": [0, 4, 7, 10, 13], "7â™­9": [0, 4, 7, 10, 13], "7(b9)": [0, 4, 7, 10, 13], "7(#9)": [0, 4, 7, 10, 15], "7#9": [0, 4, 7, 10, 15], "(13)": [0, 4, 7, 10, 14, 21], "7(9,13)": [0, 4, 7, 10, 14, 21], "7(#9,b13)": [0, 4, 7, 10, 15, 20], "7(#11)": [0, 4, 7, 10, 14, 18], "7#11": [0, 4, 7, 10, 14, 18], "7(b13)": [0, 4, 7, 10, 20], "7b13": [0, 4, 7, 10, 20], "9(#11)": [0, 4, 7, 10, 14, 18], "9#11": [0, 4, 7, 10, 14, 18], "13(#11)": [0, 4, 7, 10, 18, 21], "13#11": [0, 4, 7, 10, 18, 21], maj7: [0, 4, 7, 11], "âˆ†7": [0, 4, 7, 11], "Î”7": [0, 4, 7, 11], maj9: [0, 4, 7, 11, 14], "maj7(9)": [0, 4, 7, 11, 14], "maj7(11)": [0, 4, 7, 11, 17], "maj7(#11)": [0, 4, 7, 11, 18], "maj7(13)": [0, 4, 7, 14, 21], "maj7(9,13)": [0, 4, 7, 11, 14, 21], "7sus4": [0, 5, 7, 10], m7sus4: [0, 3, 7, 10, 17], sus4: [0, 5, 7], sus2: [0, 2, 7], "7sus2": [0, 2, 7, 10], "9sus4": [0, 5, 7, 10, 14], "13sus4": [0, 5, 7, 10, 14, 21], aug7: [0, 4, 8, 10], "+7": [0, 4, 8, 10], "+": [0, 4, 8], "7#5": [0, 4, 8, 10], "7â™¯5": [0, 4, 8, 10], "7+5": [0, 4, 8, 10], "9#5": [0, 4, 8, 10, 14], "9â™¯5": [0, 4, 8, 10, 14], "9+5": [0, 4, 8, 10, 14], "-7(#5)": [0, 3, 8, 10], "-7#5": [0, 3, 8, 10], "7(#5)": [0, 4, 8, 10], "7(b9,#5)": [0, 4, 8, 10, 13], "7b9#5": [0, 4, 8, 10, 13], "maj7(#5)": [0, 4, 8, 11], "maj7#5": [0, 4, 8, 11], "maj7(#5,#11)": [0, 4, 8, 11, 18], "maj7#5#11": [0, 4, 8, 11, 18], "9(#5)": [0, 4, 8, 10, 14], "13(#5)": [0, 4, 8, 10, 14, 21], "13#5": [0, 4, 8, 10, 14, 21] }; function ce(e, t) { var r = oe[t]; r || (r = "ma" === t.slice(0, 2).toLowerCase() || "M" === t.charAt(0) ? oe.M : "m" === t.charAt(0) || "-" === t.charAt(0) ? oe.m : oe.M), e += 12; for (var n = [], i = 0; i < r.length; i++)n.push(e + r[i]); return n } function le(e, t, r, n, o) { void 0 !== e && w.push({ cmd: "note", pitch: e, volume: r, start: E + n * K(t), duration: K(o), gap: 0, instrument: 0 }) } function he(e, t, r, n, o) { for (var c = 0; c < e.length; c++)w.push({ cmd: "note", pitch: e[c], volume: r, start: E + n * K(t), duration: K(o), gap: 0, instrument: 0 }) } var ue = { "2/2": ["boom", "chick"], "2/4": ["boom", "chick"], "3/4": ["boom", "chick", "chick"], "4/4": ["boom", "chick", "boom2", "chick"], "5/4": ["boom", "chick", "chick", "boom2", "chick"], "6/8": ["boom", "", "chick", "boom2", "", "chick"], "9/8": ["boom", "", "chick", "boom2", "", "chick", "boom2", "", "chick"], "12/8": ["boom", "", "chick", "boom2", "", "chick", "boom", "", "chick", "boom2", "", "chick"] }; function de(e, t) { var r = meter.num, n = meter.den, o = 1 / n, c = o / 2, pattern = ue[r + "/" + n], l = parseInt(r, 10) / parseInt(n, 10) - (t - e) / L; if (Math.abs(l) < 1e-5 && (l = !1), !pattern || l) { pattern = []; for (var h = (t - e) / L / o, p = 0; p < h; p++)pattern.push("chick") } if (0 === A.length && A.push({ beat: 0, chord: S }), 0 !== A[0].beat && S && _ && A.unshift({ beat: 0, chord: _ }), 1 !== A.length) { for (var d = .125 === o ? 3 : 1, f = {}, i = 0; i < A.length; i++) { var m = A[i]; f["" + Math.round(m.beat * d)] = m } for (var v = 0; v < pattern.length; v++) { var y, x; if (f["" + v] && (y = f["" + v]), !D && y) switch (pattern[v]) { case "boom": f["" + (v + 1)] ? he(y.chord.chick, o, O, v, c) : (le(y.chord.boom, o, H, v, c), x = y.chord.boom); break; case "boom2": f["" + (v + 1)] ? he(y.chord.chick, o, O, v, c) : x === y.chord.boom ? (le(y.chord.boom2, o, H, v, c), x = void 0) : (le(y.chord.boom, o, H, v, c), x = y.chord.boom); break; case "chick": he(y.chord.chick, o, O, v, c); break; case "": f["" + v] && he(y.chord.chick, o, O, v, c) } } } else for (var w = A[0].beat; w < pattern.length; w++)if (!D) switch (pattern[w]) { case "boom": le(A[0].chord.boom, o, H, w, c); break; case "boom2": le(A[0].chord.boom2, o, H, w, c); break; case "chick": he(A[0].chord.chick, o, O, w, c) } } function fe(e) { if (0 === e.pattern.length || !1 === e.on) return { on: !1 }; for (var t = e.pattern[0], r = [], n = "", o = 0, i = 0; i < t.length; i++)if ("d" === t[i] && o++, "d" === t[i] || "z" === t[i]) 0 !== n.length ? (r.push(n), n = t[i]) : n += t[i]; else { if (0 === n.length) return { on: !1 }; n += t[i] } if (0 !== n.length && r.push(n), e.pattern.length !== 2 * o + 1) return { on: !1 }; for (var c = { on: !0, bars: e.bars, pattern: [] }, l = $(meter), h = 0, d = 0; d < r.length; d++) { n = r[d]; for (var f = 1, div = !1, m = 0, v = 1; v < n.length; v++)switch (n[v]) { case "/": 0 !== m && (f *= m), m = 0, div = !0; break; case "1": case "2": case "3": case "4": case "5": case "6": case "7": case "8": case "9": m = 10 * m + n[v]; break; default: return { on: !1 } }div ? (0 === m && (m = 2), f /= m) : m && (f *= m), "d" === n[0] ? (c.pattern.push({ len: f * l, pitch: e.pattern[1 + h], velocity: e.pattern[1 + h + o] }), h++) : c.pattern.push({ len: f * l, pitch: null }) } for (var y = 0, x = meter.num / meter.den, w = 0; w < c.pattern.length; w++)y += c.pattern[w].len; var k = y / (e.bars ? e.bars : 1) / x; for (w = 0; w < c.pattern.length; w++)c.pattern[w].len = c.pattern[w].len / k; return c } function pe(e) { if (0 !== B.length || W.on) { var t = meter.num / meter.den; if (0 === B.length) { if (x < t) return; B.push({ cmd: "program", channel: e, instrument: 128 }) } if (W.on) for (var r = E, i = 0; i < W.pattern.length; i++) { var n = K(W.pattern[i].len); W.pattern[i].pitch && B.push({ cmd: "note", pitch: W.pattern[i].pitch, volume: W.pattern[i].velocity, start: r, duration: n, gap: 0, instrument: 128 }), r += n } } } }(), e.exports = n }, function (e, t, r) { var n = r(99), o = r(7); e.exports = function (e) { var t = this; function r(e, t) { for (var i = t - 1; i > 0 && "bar" !== e[i].el_type; i--); return i } this.reset = function () { e.version = "1.1.0", e.media = "screen", e.metaText = {}, e.formatting = {}, e.lines = [], e.staffNum = 0, e.voiceNum = 0, e.lineNum = 0, e.runningFonts = {}, delete e.visualTranspose }, this.setVisualTranspose = function (t) { t && (e.visualTranspose = t) }, this.resolveOverlays = function () { for (var t = !1, n = [], i = 0; i < e.lines.length; i++) { var line = e.lines[i]; if (line.staff) for (var c = 0; c < line.staff.length; c++) { for (var l = line.staff[c], h = [], d = 0; d < l.voices.length; d++) { var f = l.voices[d]; h.push({ hasOverlay: !1, voice: [], snip: [] }), n[i] = 0; for (var m = 0, v = !1, y = 0, x = -1, w = 0; w < f.length; w++) { var k = f[w]; if ("overlay" !== k.el_type || v) "bar" === k.el_type ? (v ? (v = !1, h[d].snip.push({ start: x, len: w - x }), h[d].voice.push(k)) : (m > 0 && h[d].voice.push({ el_type: "note", duration: m, rest: { type: "invisible" }, startChar: k.startChar, endChar: k.endChar }), h[d].voice.push(k)), m = 0) : "note" === k.el_type ? v ? h[d].voice.push(k) : (m += k.duration, n[i] += k.duration) : "scale" !== k.el_type && "stem" !== k.el_type && "overlay" !== k.el_type && "style" !== k.el_type && "transpose" !== k.el_type || h[d].voice.push(k); else { t = !0, v = !0, x = w, h[d].hasOverlay = !0, 0 === y && (y = n[i]); for (var T = 0; T < i; T++)n[T] && e.lines[T].staff && l.voices.length >= e.lines[T].staff[0].voices.length && e.lines[T].staff[0].voices.push([{ el_type: "note", duration: n[T], rest: { type: "invisible" }, startChar: k.startChar, endChar: k.endChar }]) } } h[d].hasOverlay && 0 === h[d].snip.length && h[d].snip.push({ start: x, len: f.length - x }) } for (d = 0; d < h.length; d++) { var C = h[d]; if (C.hasOverlay) { C.voice.splice(0, 0, { el_type: "stem", direction: "down" }), l.voices.push(C.voice); for (var A = C.snip.length - 1; A >= 0; A--) { var S = C.snip[A]; l.voices[d].splice(S.start, S.len), l.voices[d].splice(S.start + 1, 0, { el_type: "stem", direction: "auto" }); var _ = r(l.voices[d], S.start); l.voices[d].splice(_, 0, { el_type: "stem", direction: "up" }) } for (A = 0; A < l.voices[l.voices.length - 1].length; A++) { l.voices[l.voices.length - 1][A] = o.clone(l.voices[l.voices.length - 1][A]); var E = l.voices[l.voices.length - 1][A]; "bar" === E.el_type && E.startEnding && delete E.startEnding, "bar" === E.el_type && E.endEnding && delete E.endEnding } } } } } return t }, this.cleanUp = function (t, r, c, l, h) { this.closeLine(), delete e.runningFonts, e.metaText.tempo && e.metaText.tempo.bpm && !e.metaText.tempo.duration && (e.metaText.tempo.duration = [e.getBeatLength()]); var i, s, d, f = !1; for (i = 0; i < e.lines.length; i++)if (void 0 !== e.lines[i].staff) { var m = !1; for (s = 0; s < e.lines[i].staff.length; s++)if (void 0 === e.lines[i].staff[s]) f = !0, e.lines[i].staff[s] = null; else for (d = 0; d < e.lines[i].staff[s].voices.length; d++)void 0 === e.lines[i].staff[s].voices[d] ? e.lines[i].staff[s].voices[d] = [] : this.containsNotes(e.lines[i].staff[s].voices[d]) && (m = !0); m || (e.lines[i] = null, f = !0) } if (f && (e.lines = o.compact(e.lines), o.each(e.lines, (function (line) { line.staff && (line.staff = o.compact(line.staff)) }))), c) for (; w(e.lines, c);); if (l) { for (f = !1, i = 0; i < e.lines.length; i++)if (void 0 !== e.lines[i].staff) for (s = 0; s < e.lines[i].staff.length; s++) { var v = !1; for (d = 0; d < e.lines[i].staff[s].voices.length; d++)this.containsNotesStrict(e.lines[i].staff[s].voices[d]) && (v = !0); v || (f = !0, e.lines[i].staff[s] = null) } f && o.each(e.lines, (function (line) { line.staff && (line.staff = o.compact(line.staff)) })) } for (function (e) { for (var t = !0, i = 0; i < e.length; i++) { var line = e[i]; if (line.staff) { for (var r = 0; r < line.staff.length; r++) { var n = line.staff[r]; if (n.title) { for (var o = !1, c = 0; c < n.title.length; c++)n.title[c] ? (n.title[c] = t ? n.title[c].name : n.title[c].subname, n.title[c] ? o = !0 : n.title[c] = "") : n.title[c] = ""; o || delete n.title } } t = !1 } } }(e.lines), i = 0; i < e.lines.length; i++)if (e.lines[i].staff) for (s = 0; s < e.lines[i].staff.length; s++)delete e.lines[i].staff[s].workingClef; for (; this.resolveOverlays();); function y(line, e, t) { var r; h[e] || (h[e] = []), h[e][t] || (h[e][t] = []); for (var n = function (n, c, l) { if (void 0 === h[e][t][l]) { for (r = 0; r < h[e][t].length; r++)if (void 0 !== h[e][t][r]) { l = r; break } if (void 0 === h[e][t][l]) { var d = 100 * l + 1; o.each(n.endSlur, (function (e) { d === e && --d })), h[e][t][l] = [d] } } for (var f, i = 0; i < c; i++)f = h[e][t][l].pop(), n.endSlur.push(f); return 0 === h[e][t][l].length && delete h[e][t][l], f }, c = function (r, n, c, l) { r.startSlur = [], void 0 === h[e][t][c] && (h[e][t][c] = []); for (var d = 100 * c + 1, i = 0; i < n; i++)l && (o.each(l, (function (e) { d === e && ++d })), o.each(l, (function (e) { d === e && ++d })), o.each(l, (function (e) { d === e && ++d }))), o.each(h[e][t][c], (function (e) { d === e && ++d })), o.each(h[e][t][c], (function (e) { d === e && ++d })), h[e][t][c].push(d), r.startSlur.push({ label: d }), r.dottedSlur && (r.startSlur[r.startSlur.length - 1].style = "dotted", delete r.dottedSlur), d++ }, i = 0; i < line.length; i++) { var l = line[i]; if ("note" === l.el_type) { if (l.gracenotes) for (var g = 0; g < l.gracenotes.length; g++) { if (l.gracenotes[g].endSlur) { var d = l.gracenotes[g].endSlur; l.gracenotes[g].endSlur = []; for (var f = 0; f < d; f++)n(l.gracenotes[g], 1, 20) } l.gracenotes[g].startSlur && (r = l.gracenotes[g].startSlur, c(l.gracenotes[g], r, 20)) } if (l.endSlur && (r = l.endSlur, l.endSlur = [], n(l, r, 0)), l.startSlur && c(l, r = l.startSlur, 0), l.pitches) { for (var m = [], p = 0; p < l.pitches.length; p++)if (l.pitches[p].endSlur) { var v = l.pitches[p].endSlur; l.pitches[p].endSlur = []; for (var y = 0; y < v; y++) { var x = n(l.pitches[p], 1, p + 1); m.push(x) } } for (p = 0; p < l.pitches.length; p++)l.pitches[p].startSlur && (r = l.pitches[p].startSlur, c(l.pitches[p], r, p + 1, m)); l.gracenotes && l.pitches[0].endSlur && 100 === l.pitches[0].endSlur[0] && l.pitches[0].startSlur && (l.gracenotes[0].endSlur ? l.gracenotes[0].endSlur.push(l.pitches[0].startSlur[0].label) : l.gracenotes[0].endSlur = [l.pitches[0].startSlur[0].label], 1 === l.pitches[0].endSlur.length ? delete l.pitches[0].endSlur : 100 === l.pitches[0].endSlur[0] ? l.pitches[0].endSlur.shift() : 100 === l.pitches[0].endSlur[l.pitches[0].endSlur.length - 1] && l.pitches[0].endSlur.pop(), 1 === h[e][t][1].length ? delete h[e][t][1] : h[e][t][1].pop()) } } } } function x(e) { n.fixClef(e) } function w(e, t) { for (i = 0; i < e.length; i++)if (void 0 !== e[i].staff) for (s = 0; s < e[i].staff.length; s++) { var r = []; for (d = 0; d < e[i].staff[s].voices.length; d++)for (var n = e[i].staff[s].voices[d], c = 0, l = 0; l < n.length; l++)if ("bar" === n[l].el_type) { if (++c >= t && l < n.length - 1) { var h = k(e, i); if (!h) { var f = JSON.parse(JSON.stringify(e[i])); e.push(o.clone(f)), h = e[e.length - 1]; for (var m = 0; m < h.staff.length; m++)for (var v = 0; v < h.staff[m].voices.length; v++)h.staff[m].voices[v] = [] } var y = l + 1, section = e[i].staff[s].voices[d].slice(y); return e[i].staff[s].voices[d] = e[i].staff[s].voices[d].slice(0, y), h.staff[s].voices[d] = r.concat(section.concat(h.staff[s].voices[d])), !0 } } else n[l].duration || r.push(n[l]) } return !1 } function k(e, t) { for (t++; e.length > t;) { if (e[t].staff) return e[t]; t++ } return null } for (e.lineNum = 0; e.lineNum < e.lines.length; e.lineNum++) { var T = e.lines[e.lineNum].staff; if (T) for (e.staffNum = 0; e.staffNum < T.length; e.staffNum++)for (T[e.staffNum].clef && x(T[e.staffNum].clef), e.voiceNum = 0; e.voiceNum < T[e.staffNum].voices.length; e.voiceNum++) { var C = T[e.staffNum].voices[e.voiceNum]; y(C, e.staffNum, e.voiceNum); for (var A = 0; A < C.length; A++)"clef" === C[A].el_type && x(C[A]); if (C.length > 0 && C[C.length - 1].barNumber) { var S = k(e.lines, e.lineNum); S && (S.staff[0].barNumber = C[C.length - 1].barNumber), delete C[C.length - 1].barNumber } } } return e.formatting.pagewidth || (e.formatting.pagewidth = t), e.formatting.pageheight || (e.formatting.pageheight = r), delete e.staffNum, delete e.voiceNum, delete e.lineNum, delete e.potentialStartBeam, delete e.potentialEndBeam, delete e.vskipPending, h }, this.reset(), this.getLastNote = function () { if (e.lines[e.lineNum] && e.lines[e.lineNum].staff && e.lines[e.lineNum].staff[e.staffNum] && e.lines[e.lineNum].staff[e.staffNum].voices[e.voiceNum]) for (var i = e.lines[e.lineNum].staff[e.staffNum].voices[e.voiceNum].length - 1; i >= 0; i--) { var t = e.lines[e.lineNum].staff[e.staffNum].voices[e.voiceNum][i]; if ("note" === t.el_type) return t } return null }, this.addTieToLastNote = function (e) { var t = this.getLastNote(); return !!(t && t.pitches && t.pitches.length > 0) && (t.pitches[0].startTie = {}, e && (t.pitches[0].startTie.style = "dotted"), !0) }, this.getDuration = function (e) { return e.duration ? e.duration : 0 }, this.closeLine = function () { e.potentialStartBeam && e.potentialEndBeam && (e.potentialStartBeam.startBeam = !0, e.potentialEndBeam.endBeam = !0), delete e.potentialStartBeam, delete e.potentialEndBeam }, this.appendElement = function (r, n, c, l) { var h = e; l.el_type = r, null !== n && (l.startChar = n), null !== c && (l.endChar = c); var d = function () { void 0 !== h.potentialStartBeam && void 0 !== h.potentialEndBeam && (h.potentialStartBeam.startBeam = !0, h.potentialEndBeam.endBeam = !0), delete h.potentialStartBeam, delete h.potentialEndBeam }; "note" === r ? t.getDuration(l) >= .25 || l.force_end_beam_last && void 0 !== h.potentialStartBeam ? d() : l.end_beam && void 0 !== h.potentialStartBeam ? void 0 === l.rest ? (h.potentialStartBeam.startBeam = !0, l.endBeam = !0, delete h.potentialStartBeam, delete h.potentialEndBeam) : d() : void 0 === l.rest && (void 0 === h.potentialStartBeam ? l.end_beam || (h.potentialStartBeam = l, delete h.potentialEndBeam) : h.potentialEndBeam = l) : d(); delete l.end_beam, delete l.force_end_beam_last, function (e) { var t = h.lines[h.lineNum].staff[h.staffNum]; if (t) { if (void 0 !== e.pitches) { var r = t.workingClef.verticalPos; o.each(e.pitches, (function (p) { p.verticalPos = p.pitch - r })) } if (void 0 !== e.gracenotes) { var n = t.workingClef.verticalPos; o.each(e.gracenotes, (function (p) { p.verticalPos = p.pitch - n })) } t.voices[h.voiceNum].push(e) } }(l) }, this.appendStartingElement = function (t, r, n, c) { var l; this.closeLine(), "key" === t && (l = c.impliedNaturals, delete c.impliedNaturals, delete c.explicitAccidentals); var h = o.clone(c); if (e.lines[e.lineNum].staff) { e.lines[e.lineNum].staff.length <= e.staffNum && (e.lines[e.lineNum].staff[e.staffNum] = {}, e.lines[e.lineNum].staff[e.staffNum].clef = o.clone(e.lines[e.lineNum].staff[0].clef), e.lines[e.lineNum].staff[e.staffNum].key = o.clone(e.lines[e.lineNum].staff[0].key), e.lines[e.lineNum].staff[0].meter && (e.lines[e.lineNum].staff[e.staffNum].meter = o.clone(e.lines[e.lineNum].staff[0].meter)), e.lines[e.lineNum].staff[e.staffNum].workingClef = o.clone(e.lines[e.lineNum].staff[0].workingClef), e.lines[e.lineNum].staff[e.staffNum].voices = [[]]), "clef" === t && (e.lines[e.lineNum].staff[e.staffNum].workingClef = h); for (var d = e.lines[e.lineNum].staff[e.staffNum].voices[e.voiceNum], i = 0; i < d.length; i++) { if ("note" === d[i].el_type || "bar" === d[i].el_type) return h.el_type = t, h.startChar = r, h.endChar = n, l && (h.accidentals = l.concat(h.accidentals)), void d.push(h); if (d[i].el_type === t) return h.el_type = t, h.startChar = r, h.endChar = n, l && (h.accidentals = l.concat(h.accidentals)), void (d[i] = h) } e.lines[e.lineNum].staff[e.staffNum][t] = c } }, this.getNumLines = function () { return e.lines.length }, this.pushLine = function (t) { e.vskipPending && (t.vskip = e.vskipPending, delete e.vskipPending), e.lines.push(t) }, this.addSubtitle = function (e) { this.pushLine({ subtitle: e }) }, this.addSpacing = function (t) { e.vskipPending = t }, this.addNewPage = function (e) { this.pushLine({ newpage: e }) }, this.addSeparator = function (e, t, r) { this.pushLine({ separator: { spaceAbove: Math.round(e), spaceBelow: Math.round(t), lineLength: Math.round(r) } }) }, this.addText = function (e) { this.pushLine({ text: e }) }, this.addCentered = function (e) { this.pushLine({ text: [{ text: e, center: !0 }] }) }, this.containsNotes = function (e) { for (var i = 0; i < e.length; i++)if ("note" === e[i].el_type || "bar" === e[i].el_type) return !0; return !1 }, this.containsNotesStrict = function (e) { for (var i = 0; i < e.length; i++)if ("note" === e[i].el_type && void 0 === e[i].rest) return !0; return !1 }, this.changeVoiceScale = function (e) { t.appendElement("scale", null, null, { size: e }) }, this.startNewLine = function (r) { var n = e; this.closeLine(); var o = function (e) { var r = n.lines[n.lineNum].staff[n.staffNum]; if (r.voices[n.voiceNum] = [], r.title || (r.title = []), r.title[n.voiceNum] = { name: e.name, subname: e.subname }, e.style && t.appendElement("style", null, null, { head: e.style }), e.stem) t.appendElement("stem", null, null, { direction: e.stem }); else if (n.voiceNum > 0) { if (void 0 !== r.voices[0]) { for (var o = !1, i = 0; i < r.voices[0].length; i++)"stem" === r.voices[0].el_type && (o = !0); if (!o) { r.voices[0].splice(0, 0, { el_type: "stem", direction: "up" }) } } t.appendElement("stem", null, null, { direction: "down" }) } e.scale && t.appendElement("scale", null, null, { size: e.scale }) }, c = function (e) { e.key && e.key.impliedNaturals && (e.key.accidentals = e.key.accidentals.concat(e.key.impliedNaturals), delete e.key.impliedNaturals), n.lines[n.lineNum].staff[n.staffNum] = { voices: [], clef: e.clef, key: e.key, workingClef: e.clef }, void 0 !== e.stafflines && (n.lines[n.lineNum].staff[n.staffNum].clef.stafflines = e.stafflines, n.lines[n.lineNum].staff[n.staffNum].workingClef.stafflines = e.stafflines), e.staffscale && (n.lines[n.lineNum].staff[n.staffNum].staffscale = e.staffscale), e.annotationfont && t.setLineFont("annotationfont", e.annotationfont), e.gchordfont && t.setLineFont("gchordfont", e.gchordfont), e.tripletfont && t.setLineFont("tripletfont", e.tripletfont), e.vocalfont && t.setLineFont("vocalfont", e.vocalfont), e.bracket && (n.lines[n.lineNum].staff[n.staffNum].bracket = e.bracket), e.brace && (n.lines[n.lineNum].staff[n.staffNum].brace = e.brace), e.connectBarLines && (n.lines[n.lineNum].staff[n.staffNum].connectBarLines = e.connectBarLines), e.barNumber && (n.lines[n.lineNum].staff[n.staffNum].barNumber = e.barNumber), o(e), e.part && t.appendElement("part", e.part.startChar, e.part.endChar, { title: e.part.title }), void 0 !== e.meter && (n.lines[n.lineNum].staff[n.staffNum].meter = e.meter), n.vskipPending && (n.lines[n.lineNum].vskip = n.vskipPending, delete n.vskipPending) }; void 0 === e.lines[e.lineNum] ? function (e) { n.lines[n.lineNum] = { staff: [] }, c(e) }(r) : void 0 === e.lines[e.lineNum].staff ? (e.lineNum++, this.startNewLine(r)) : void 0 === e.lines[e.lineNum].staff[e.staffNum] ? c(r) : void 0 === e.lines[e.lineNum].staff[e.staffNum].voices[e.voiceNum] ? o(r) : this.containsNotes(e.lines[e.lineNum].staff[e.staffNum].voices[e.voiceNum]) ? (e.lineNum++, this.startNewLine(r)) : r.part && t.appendElement("part", r.part.startChar, r.part.endChar, { title: r.part.title }) }, this.setRunningFont = function (t, r) { e.runningFonts[t] = r }, this.setLineFont = function (t, r) { if (e.runningFonts[t]) { for (var n = !1, o = Object.keys(r), i = 0; i < o.length; i++)e.runningFonts[t][o[i]] !== r[o[i]] && (n = !0); n && (e.lines[e.lineNum].staff[e.staffNum][t] = r) } e.runningFonts[t] = r }, this.setBarNumberImmediate = function (e) { var t = this.getCurrentVoice(); if (t && t.length > 0) { var r = t[t.length - 1]; if ("bar" !== r.el_type) return e - 1; void 0 !== r.barNumber && (r.barNumber = e) } return e }, this.hasBeginMusic = function () { for (var i = 0; i < e.lines.length; i++)if (e.lines[i].staff) return !0; return !1 }, this.isFirstLine = function (t) { for (var i = t - 1; i >= 0; i--)if (void 0 !== e.lines[i].staff) return !1; return !0 }, this.getCurrentVoice = function () { var t = e.lines[e.lineNum]; if (!t) return null; var r = t.staff[e.staffNum]; return r && void 0 !== r.voices[e.voiceNum] ? r.voices[e.voiceNum] : null }, this.setCurrentVoice = function (t, r) { e.staffNum = t, e.voiceNum = r; for (var i = 0; i < e.lines.length; i++)if (e.lines[i].staff && (void 0 === e.lines[i].staff[t] || void 0 === e.lines[i].staff[t].voices[r] || !this.containsNotes(e.lines[i].staff[t].voices[r]))) return void (e.lineNum = i); e.lineNum = i }, this.addMetaText = function (t, r) { void 0 === e.metaText[t] ? e.metaText[t] = r : e.metaText[t] += "\n" + r }, this.addMetaTextArray = function (t, r) { void 0 === e.metaText[t] ? e.metaText[t] = [r] : e.metaText[t].push(r) }, this.addMetaTextObj = function (t, r) { e.metaText[t] = r } } }, function (e, t, r) { var n = r(7); e.exports = function (e) { "use strict"; for (var t = "", r = (e = n.strip(e)).split("\nX:"), i = 1; i < r.length; i++)r[i] = "X:" + r[i]; var o = 0, c = []; if (n.each(r, (function (e) { c.push({ abc: e, startPos: o }), o += e.length + 1 })), c.length > 1 && !n.startsWith(c[0].abc, "X:")) { var l = c.shift().abc.split("\n"); n.each(l, (function (line) { n.startsWith(line, "%%") && (t += line + "\n") })) } var header = t; return n.each(c, (function (e) { var r = e.abc.indexOf("\n\n"); r > 0 && (e.abc = e.abc.substring(0, r)), e.pure = e.abc, e.abc = t + e.abc, e.title = ""; var title = e.pure.split("T:"); title.length > 1 && (title = title[1].split("\n"), e.title = n.strip(title[0])); var o = e.pure.substring(2, e.pure.indexOf("\n")); e.id = n.strip(o) })), { header: header, tunes: c } } }, function (e, t, r) { var n = r(9), o = r(218), c = r(234), l = r(236), h = r(237), d = r(238), f = r(239), m = r(240), v = r(241), y = r(242), x = r(250), w = r(251), k = r(252), T = r(253), C = (r(147), function (e, t) { t = t || {}, this.selectionColor = t.selectionColor, this.dragColor = t.dragColor ? t.dragColor : t.selectionColor, this.dragging = !!t.dragging, this.selectTypes = t.selectTypes, this.responsive = t.responsive, this.space = 3 * n.SPACE, this.scale = t.scale ? parseFloat(t.scale) : 0, this.classes = new x({ shouldAddClasses: t.add_classes }), this.scale > .1 || (this.scale = void 0), t.staffwidth ? (this.staffwidthScreen = t.staffwidth, this.staffwidthPrint = t.staffwidth) : (this.staffwidthScreen = 740, this.staffwidthPrint = 680), this.listeners = [], t.clickListener && this.addSelectListener(t.clickListener), this.renderer = new c(e), this.renderer.setPaddingOverride(t), t.showDebug && (this.renderer.showDebug = t.showDebug), this.renderer.controller = this, this.renderer.foregroundColor = t.foregroundColor ? t.foregroundColor : "currentColor", t.ariaLabel && (this.renderer.ariaLabel = t.ariaLabel), this.renderer.minPadding = t.minPadding ? t.minPadding : 0, this.reset() }); C.prototype.reset = function () { this.selected = [], this.staffgroups = [], this.engraver && this.engraver.reset(), this.engraver = null, this.renderer.reset(), this.dragTarget = null, this.dragIndex = -1, this.dragMouseStart = { x: -1, y: -1 }, this.dragYStep = 0 }, C.prototype.engraveABC = function (e, t) { void 0 === e[0] && (e = [e]), this.reset(); for (var i = 0; i < e.length; i++)void 0 === t && (t = i), this.getFontAndAttr = new w(e[i].formatting, this.classes), this.getTextSize = new k(this.getFontAndAttr, this.renderer.paper), this.engraveTune(e[i], t) }, C.prototype.adjustNonScaledItems = function (e) { this.width /= e, this.renderer.adjustNonScaledItems(e) }, C.prototype.getMeasureWidths = function (e) { this.reset(), this.getFontAndAttr = new w(e.formatting, this.classes), this.getTextSize = new k(this.getFontAndAttr, this.renderer.paper), this.setupTune(e, 0), this.constructTuneElements(e), y(this.renderer, e, 0, this.space); for (var section, t = [], r = !0, i = 0; i < e.lines.length; i++) { var n = e.lines[i]; if (n.staff) { if (r && (section = { left: 0, measureWidths: [], total: 0 }, t.push(section), r = !1), n.staffGroup.voices.length > 0) for (var o = n.staffGroup.voices[0], c = !1, l = 0, h = 0; h < o.children.length; h++) { var d = o.children[h]; c || d.isClef || d.isKeySig || (c = !0, section.left = d.x, l = d.x), "bar" === d.type && (section.measureWidths.push(d.x - l), section.total += d.x - l, l = d.x) } } else r = !0 } return t }, C.prototype.setupTune = function (e, t) { this.classes.reset(), this.renderer.newTune(e), this.engraver = new o(this.getTextSize, t, { bagpipes: e.formatting.bagpipes, flatbeams: e.formatting.flatbeams, graceSlurs: !1 !== e.formatting.graceSlurs, percmap: e.formatting.percmap }), this.engraver.setStemHeight(this.renderer.spacing.stemHeight), this.engraver.measureLength = e.getMeterFraction().num / e.getMeterFraction().den, e.formatting.staffwidth ? this.width = 1.33 * e.formatting.staffwidth : this.width = this.renderer.isPrint ? this.staffwidthPrint : this.staffwidthScreen; var r = e.formatting.scale ? e.formatting.scale : this.scale; return "resize" === this.responsive && (r = void 0), void 0 === r && (r = this.renderer.isPrint ? .75 : 1), this.adjustNonScaledItems(r), r }, C.prototype.constructTuneElements = function (e) { var i, t; e.topText = new f(e.metaText, e.formatting, e.lines, this.width, this.renderer.isPrint, this.renderer.padding.left, this.renderer.spacing, this.getTextSize); var r = !1, n = !1; for (i = 0; i < e.lines.length; i++)if ((t = e.lines[i]).staff) n = !0, t.staffGroup = this.engraver.createABCLine(t.staff, r ? null : e.metaText.tempo), r = !0; else if (t.subtitle) { if (n) { var o = this.width / 2 + this.renderer.padding.left; t.nonMusic = new d(this.renderer.spacing.subtitle, e.formatting, t.subtitle, o, this.renderer.padding.left, this.getTextSize) } } else void 0 !== t.text ? (n = !0, t.nonMusic = new l(t.text, t.vskip, this.getFontAndAttr, this.renderer.padding.left, this.width, this.getTextSize)) : void 0 !== t.separator && t.separator.lineLength && (n = !0, t.nonMusic = new h(t.separator.spaceAbove, t.separator.lineLength, t.separator.spaceBelow)); e.bottomText = new m(e.metaText, this.width, this.renderer.isPrint, this.renderer.padding.left, this.renderer.spacing, this.getTextSize) }, C.prototype.engraveTune = function (e, t) { var r = this.setupTune(e, t); this.constructTuneElements(e); var n = y(this.renderer, e, this.width, this.space), o = T(this.renderer, this.classes, e, this.width, n, this.responsive, r, this.selectTypes, t); this.staffgroups = o.staffgroups, this.selectables = o.selectables, v(this) }, C.prototype.getDim = function (e) { if (!e.dim) { var t = e.svgEl.getBBox(); e.dim = { left: Math.round(t.x), top: Math.round(t.y), right: Math.round(t.x + t.width), bottom: Math.round(t.y + t.height) } } return e.dim }, C.prototype.addSelectListener = function (e) { this.listeners[this.listeners.length] = e }, e.exports = C }, function (e, t, r) { var n = r(59), o = r(219), c = r(220), l = r(221), h = r(222), d = r(223), f = r(224), m = r(225), v = r(228), y = r(29), x = r(22), w = r(9), k = r(229), T = r(230), C = r(146), A = r(231), S = r(232), _ = r(233), E = r(142), M = r(7), N = function (e) { var t = 0; return e.duration && (t = e.duration), t }, B = !1, P = { rest: { 0: "rests.whole", 1: "rests.half", 2: "rests.quarter", 3: "rests.8th", 4: "rests.16th", 5: "rests.32nd", 6: "rests.64th", 7: "rests.128th", multi: "rests.multimeasure" }, note: { "-1": "noteheads.dbl", 0: "noteheads.whole", 1: "noteheads.half", 2: "noteheads.quarter", 3: "noteheads.quarter", 4: "noteheads.quarter", 5: "noteheads.quarter", 6: "noteheads.quarter", 7: "noteheads.quarter", nostem: "noteheads.quarter" }, rhythm: { "-1": "noteheads.slash.whole", 0: "noteheads.slash.whole", 1: "noteheads.slash.whole", 2: "noteheads.slash.quarter", 3: "noteheads.slash.quarter", 4: "noteheads.slash.quarter", 5: "noteheads.slash.quarter", 6: "noteheads.slash.quarter", 7: "noteheads.slash.quarter", nostem: "noteheads.slash.nostem" }, x: { "-1": "noteheads.indeterminate", 0: "noteheads.indeterminate", 1: "noteheads.indeterminate", 2: "noteheads.indeterminate", 3: "noteheads.indeterminate", 4: "noteheads.indeterminate", 5: "noteheads.indeterminate", 6: "noteheads.indeterminate", 7: "noteheads.indeterminate", nostem: "noteheads.indeterminate" }, harmonic: { "-1": "noteheads.harmonic.quarter", 0: "noteheads.harmonic.quarter", 1: "noteheads.harmonic.quarter", 2: "noteheads.harmonic.quarter", 3: "noteheads.harmonic.quarter", 4: "noteheads.harmonic.quarter", 5: "noteheads.harmonic.quarter", 6: "noteheads.harmonic.quarter", 7: "noteheads.harmonic.quarter", nostem: "noteheads.harmonic.quarter" }, triangle: { "-1": "noteheads.triangle.quarter", 0: "noteheads.triangle.quarter", 1: "noteheads.triangle.quarter", 2: "noteheads.triangle.quarter", 3: "noteheads.triangle.quarter", 4: "noteheads.triangle.quarter", 5: "noteheads.triangle.quarter", 6: "noteheads.triangle.quarter", 7: "noteheads.triangle.quarter", nostem: "noteheads.triangle.quarter" }, uflags: { 3: "flags.u8th", 4: "flags.u16th", 5: "flags.u32nd", 6: "flags.u64th" }, dflags: { 3: "flags.d8th", 4: "flags.d16th", 5: "flags.d32nd", 6: "flags.d64th" } }, L = function (e, t, r) { this.decoration = new m, this.getTextSize = e, this.tuneNumber = t, this.isBagpipes = r.bagpipes, this.flatBeams = r.flatbeams, this.graceSlurs = r.graceSlurs, this.percmap = r.percmap, this.reset() }; function H(e, t) { var r = e[t]; if ("note" !== r.el_type || !r.startBeam || r.endBeam) return { count: 1, elem: r }; for (var n = []; t < e.length && "note" === e[t].el_type && (n.push(e[t]), !e[t].endBeam);)t++; return { count: n.length, elem: n } } function O(e) { if (e.pitches) { z(e); for (var t = 0, p = 0; p < e.pitches.length; p++)t += e.pitches[p].verticalPos; e.averagepitch = t / e.pitches.length, e.minpitch = e.pitches[0].verticalPos, e.maxpitch = e.pitches[e.pitches.length - 1].verticalPos } } L.prototype.reset = function () { this.slurs = {}, this.ties = [], this.voiceScale = 1, this.slursbyvoice = {}, this.tiesbyvoice = {}, this.endingsbyvoice = {}, this.scaleByVoice = {}, this.tripletmultiplier = 1, this.abcline = void 0, this.accidentalSlot = void 0, this.accidentalshiftx = void 0, this.dotshiftx = void 0, this.hasVocals = !1, this.minY = void 0, this.partstartelem = void 0, this.startlimitelem = void 0, this.stemdir = void 0 }, L.prototype.setStemHeight = function (e) { this.stemHeight = Math.round(10 * e / w.STEP) / 10 }, L.prototype.getCurrentVoiceId = function (s, e) { return "s" + s + "v" + e }, L.prototype.pushCrossLineElems = function (s, e) { this.slursbyvoice[this.getCurrentVoiceId(s, e)] = this.slurs, this.tiesbyvoice[this.getCurrentVoiceId(s, e)] = this.ties, this.endingsbyvoice[this.getCurrentVoiceId(s, e)] = this.partstartelem, this.scaleByVoice[this.getCurrentVoiceId(s, e)] = this.voiceScale }, L.prototype.popCrossLineElems = function (s, e) { this.slurs = this.slursbyvoice[this.getCurrentVoiceId(s, e)] || {}, this.ties = this.tiesbyvoice[this.getCurrentVoiceId(s, e)] || [], this.partstartelem = this.endingsbyvoice[this.getCurrentVoiceId(s, e)], this.voiceScale = this.scaleByVoice[this.getCurrentVoiceId(s, e)], void 0 === this.voiceScale && (this.voiceScale = 1) }, L.prototype.containsLyrics = function (e) { for (var i = 0; i < e.length; i++)for (var t = 0; t < e[i].voices.length; t++)for (var r = 0; r < e[i].voices[t].length; r++) { var n = e[i].voices[t][r]; if (n.lyric) return void (n.positioning && "below" !== n.positioning.vocalPosition || (this.hasVocals = !0)) } }, L.prototype.createABCLine = function (e, t) { this.minY = 2, this.containsLyrics(e); var r = new k(this.getTextSize); this.tempoSet = !1; for (var s = 0; s < e.length; s++)B && this.restoreState(), B = !1, this.createABCStaff(r, e[s], t, s); return r }, L.prototype.createABCStaff = function (e, t, r, s) { e.getTextSize.updateFonts(t); for (var n = 0; n < t.voices.length; n++) { var o = new S(n, t.voices.length); 0 === n ? (o.barfrom = "start" === t.connectBarLines || "continue" === t.connectBarLines, o.barto = "continue" === t.connectBarLines || "end" === t.connectBarLines) : o.duplicate = !0, t.title && t.title[n] && (o.header = t.title[n].replace(/\\n/g, "\n"), o.headerPosition = 6 + e.getTextSize.baselineToCenter(o.header, "voicefont", "staff-extra voice-name", n, t.voices.length) / w.STEP), t.clef && "perc" === t.clef.type && (o.isPercussion = !0); var d = l(t.clef, this.tuneNumber); d && (0 === n && t.barNumber && this.addMeasureNumber(t.barNumber, d), o.addChild(d), this.startlimitelem = d); var m = h(t.key, this.tuneNumber); if (m && (o.addChild(m), this.startlimitelem = m), t.meter) { "specified" === t.meter.type ? this.measureLength = t.meter.value[0].num / t.meter.value[0].den : this.measureLength = 1; var v = f(t.meter, this.tuneNumber); o.addChild(v), this.startlimitelem = v } o.duplicate && (o.children = []); var y = t.clef.stafflines || 0 === t.clef.stafflines ? t.clef.stafflines : 5; e.addVoice(o, s, y); var x = 1 === y; this.createABCVoice(t.voices[n], r, s, n, x, o), e.setStaffLimits(o), 0 === n && ("start" === t.brace || !e.brace && t.brace ? (e.brace || (e.brace = []), e.brace.push(new c(o, "brace"))) : "end" === t.brace && e.brace ? e.brace[e.brace.length - 1].setBottomStaff(o) : "continue" === t.brace && e.brace && e.brace[e.brace.length - 1].continuing(o), "start" === t.bracket || !e.bracket && t.bracket ? (e.bracket || (e.bracket = []), e.bracket.push(new c(o, "bracket"))) : "end" === t.bracket && e.bracket ? e.bracket[e.bracket.length - 1].setBottomStaff(o) : "continue" === t.bracket && e.bracket && e.bracket[e.bracket.length - 1].continuing(o)) } }, L.prototype.createABCVoice = function (e, t, s, r, o, c) { this.popCrossLineElems(s, r), this.stemdir = this.isBagpipes ? "down" : null, this.abcline = e, this.partstartelem && (this.partstartelem = new v("", null, null), c.addOther(this.partstartelem)); var l = c.voicetotal < 2 ? -1 : c.voicenumber; for (var h in this.slurs) this.slurs.hasOwnProperty(h) && (this.slurs[h] = new C({ force: this.slurs[h].force, voiceNumber: l, stemDir: this.slurs[h].stemDir, style: this.slurs[h].dotted }), B && this.slurs[h].setHint(), c.addOther(this.slurs[h])); for (var i = 0; i < this.ties.length; i++)this.ties[i] = new C({ force: this.ties[i].force, stemDir: this.ties[i].stemDir, voiceNumber: l, style: this.ties[i].dotted }), B && this.ties[i].setHint(), c.addOther(this.ties[i]); for (var f = 0; f < this.abcline.length; f++)O(this.abcline[f]), this.minY = Math.min(this.abcline[f].minpitch, this.minY); for (var m = 0 === s, y = 0; y < this.abcline.length;) { var x = H(this.abcline, y), w = this.createABCElement(m, o, c, x.elem); if (w) for (i = 0; i < w.length; i++) { if (!this.tempoSet && t && !t.suppress) { this.tempoSet = !0; var k = new n(t, 0, 0, "tempo", this.tuneNumber, {}); k.addFixedX(new T(t, this.tuneNumber, d)), c.addChild(k) } c.addChild(w[i]) } y += x.count } this.pushCrossLineElems(s, r) }, L.prototype.saveState = function () { this.tiesSave = M.cloneArray(this.ties), this.slursSave = M.cloneHashOfHash(this.slurs), this.slursbyvoiceSave = M.cloneHashOfHash(this.slursbyvoice), this.tiesbyvoiceSave = M.cloneHashOfArrayOfHash(this.tiesbyvoice) }, L.prototype.restoreState = function () { this.ties = M.cloneArray(this.tiesSave), this.slurs = M.cloneHashOfHash(this.slursSave), this.slursbyvoice = M.cloneHashOfHash(this.slursbyvoiceSave), this.tiesbyvoice = M.cloneHashOfArrayOfHash(this.tiesbyvoiceSave) }, L.prototype.createABCElement = function (e, t, r, o) { var c = []; switch (o.el_type) { case void 0: c = this.createBeam(t, r, o); break; case "note": c[0] = this.createNote(o, !1, t, r), this.triplet && this.triplet.isClosed() && (r.addOther(this.triplet), this.triplet = null, this.tripletmultiplier = 1); break; case "bar": c[0] = this.createBarLine(r, o, e), r.duplicate && c.length > 0 && (c[0].invisible = !0); break; case "meter": c[0] = f(o, this.tuneNumber), this.startlimitelem = c[0], r.duplicate && c.length > 0 && (c[0].invisible = !0); break; case "clef": if (c[0] = l(o, this.tuneNumber), !c[0]) return null; r.duplicate && c.length > 0 && (c[0].invisible = !0); break; case "key": var m = h(o, this.tuneNumber); m && (c[0] = m, this.startlimitelem = c[0]), r.duplicate && c.length > 0 && (c[0].invisible = !0); break; case "stem": this.stemdir = o.direction; break; case "part": var v = new n(o, 0, 0, "part", this.tuneNumber), y = this.getTextSize.calc(o.title, "partsfont", "part"); v.addFixedX(new x(o.title, 0, 0, void 0, { type: "part", height: y.height / w.STEP })), c[0] = v; break; case "tempo": var k = new n(o, 0, 0, "tempo", this.tuneNumber); k.addFixedX(new T(o, this.tuneNumber, d)), c[0] = k; break; case "style": "normal" === o.head ? delete this.style : this.style = o.head; break; case "hint": B = !0, this.saveState(); break; case "midi": break; case "scale": this.voiceScale = o.size; break; default: var C = new n(o, 0, 0, "unsupported", this.tuneNumber); C.addFixed(new x("element type " + o.el_type, 0, 0, void 0, { type: "debug" })), c[0] = C }return c }, L.prototype.createBeam = function (e, t, r) { var n = [], c = new o(this.stemHeight * this.voiceScale, this.stemdir, this.flatBeams, r[0]); B && c.setHint(); for (var i = 0; i < r.length; i++) { var l = r[i], h = this.createNote(l, !0, e, t); n.push(h), c.add(h), this.triplet && this.triplet.isClosed() && (t.addOther(this.triplet), this.triplet = null, this.tripletmultiplier = 1) } return c.calcDir(), t.addBeam(c), n }; var z = function (e) { var t; do { t = !0; for (var p = 0; p < e.pitches.length - 1; p++)if (e.pitches[p].pitch > e.pitches[p + 1].pitch) { t = !1; var r = e.pitches[p]; e.pitches[p] = e.pitches[p + 1], e.pitches[p + 1] = r } } while (!t) }, D = function (e, t, r, n, o, c, l, h, d) { for (var i = r; i > 11; i--)i % 2 != 0 || n || e.addFixed(new x(null, h, (o + 4) * d, i, { type: "ledger" })); for (i = t; i < 1; i++)i % 2 != 0 || n || e.addFixed(new x(null, h, (o + 4) * d, i, { type: "ledger" })); for (i = 0; i < c.length; i++) { var f = o; "down" === l && (f = -f), e.addFixed(new x(null, f + h, (o + 4) * d, c[i], { type: "ledger" })) } }; function j(e, t) { for (var i = 0; i < e.length; i++)if (JSON.stringify(e[i]) === JSON.stringify(t)) return; e.push(t) } L.prototype.addGraceNotes = function (e, t, r, n, c, l, h) { var f = .6; c = Math.round(.7 * c); var m, i, v = null; e.gracenotes.length > 1 && (v = new o(c, "grace", l), B && v.setHint(), v.mainNote = r); var w = []; for (i = e.gracenotes.length - 1; i >= 0; i--)h += 10, w[i] = h, e.gracenotes[i].accidental && (h += 7); for (i = 0; i < e.gracenotes.length; i++) { var k = e.gracenotes[i].verticalPos; m = v ? null : P.uflags[l ? 5 : 3]; var T = d(r, "noteheads.quarter", e.gracenotes[i], { dir: "up", headx: -w[i], extrax: -w[i], flag: m, scale: f * this.voiceScale, accidentalSlot: [] }); T.notehead.highestVert = T.notehead.pitch + c; var A = T.notehead; if (this.addSlursAndTies(r, e.gracenotes[i], A, t, "up", !0), r.addExtra(A), e.gracenotes[i].acciaccatura) { var S = e.gracenotes[i].verticalPos + 4.2, _ = v ? 5 : 6; r.addRight(new x("flags.ugrace", -w[i] + _, 0, S, { scalex: f, scaley: f })) } if (v) { var E = e.gracenotes[i].duration / 2; l && (E /= 2); var M = { heads: [A], abcelem: { averagepitch: k, minpitch: k, maxpitch: k, duration: E } }; v.add(M) } else { var N = k + 1 / 3 * f, L = k + 4.2, H = A.dx + A.w; r.addExtra(new x(null, H, 0, N, { type: "stem", pitch2: L, linewidth: -.6 })) } D(r, k, k, !1, y.getSymbolWidth("noteheads.quarter"), [], !0, A.dx - 1, .6); var O = e.rest && ("spacer" === e.rest.type || "invisible" === e.rest.type); 0 !== i || l || !this.graceSlurs || O || t.addOther(new C({ anchor1: A, anchor2: n, isGrace: !0 })) } return v && (v.calcDir(), t.addBeam(v)), h }, L.prototype.addNoteToAbcElement = function (e, t, r, n, style, o, c, l, h) { var f, m, i, v, p, w = 0, k = 0, T = 0, C = [], A = [], S = 0, _ = t.averagepitch >= 6 ? "down" : "up"; for (n && (_ = n), (style = t.style ? t.style : style) && "normal" !== style || (style = "note"), (v = o ? P[style].nostem : P[style][-c]) || console.log("noteSymbol:", style, c, o), p = "down" === _ ? t.pitches.length - 2 : 1; "down" === _ ? p >= 0 : p < t.pitches.length; p = "down" === _ ? p - 1 : p + 1) { var M = t.pitches["down" === _ ? p + 1 : p - 1], B = t.pitches[p], L = "down" === _ ? M.pitch - B.pitch : B.pitch - M.pitch; L <= 1 && !M.printer_shift && (B.printer_shift = L ? "different" : "same", (B.verticalPos > 11 || B.verticalPos < 1) && C.push(B.verticalPos - B.verticalPos % 2), "down" === _ ? k = y.getSymbolWidth(v) + 2 : w = y.getSymbolWidth(v) + 2) } var H = t.pitches.length; for (p = 0; p < t.pitches.length; p++) { var O, z; if (!l) O = "down" === _ && 0 !== p || "up" === _ && p !== H - 1 ? null : P["down" === _ ? "dflags" : "uflags"][-c]; if (t.pitches[p].style) z = P[t.pitches[p].style][-c]; else if (h.isPercussion && this.percmap) { z = v; var D = this.percmap[E(t.pitches[p])]; D && D.noteHead && P[D.noteHead] && (z = P[D.noteHead][-c]) } else z = v; if (t.pitches[p].highestVert = t.pitches[p].verticalPos, ("up" === n || "up" === _) && 0 === p || ("down" === n || "down" === _) && p === H - 1) { if ((t.startSlur || 1 === H) && (t.pitches[p].highestVert = t.pitches[H - 1].verticalPos, N(t) < 1 && ("up" === n || "up" === _) && (t.pitches[p].highestVert += 6)), t.startSlur) for (t.pitches[p].startSlur || (t.pitches[p].startSlur = []), i = 0; i < t.startSlur.length; i++)j(t.pitches[p].startSlur, t.startSlur[i]); if (t.endSlur) for (t.pitches[p].highestVert = t.pitches[H - 1].verticalPos, N(t) < 1 && ("up" === n || "up" === _) && (t.pitches[p].highestVert += 6), t.pitches[p].endSlur || (t.pitches[p].endSlur = []), i = 0; i < t.endSlur.length; i++)j(t.pitches[p].endSlur, t.endSlur[i]) } var I = !l && c <= -1, F = d(e, z, t.pitches[p], { dir: _, extrax: -k, flag: O, dot: r, dotshiftx: w, scale: this.voiceScale, accidentalSlot: A, shouldExtendStem: !n, printAccidentals: !h.isPercussion }); S = Math.max(y.getSymbolWidth(z), S), e.extraw -= F.extraLeft, (f = F.notehead) && (this.addSlursAndTies(e, t.pitches[p], f, h, I ? _ : null, !1), t.gracenotes && t.gracenotes.length > 0 && (f.bottom = f.bottom - 1), e.addHead(f)), k += F.accidentalshiftx, T = Math.max(T, F.dotshiftx) } if (I) { var V = Math.round(70 * this.voiceScale) / 10, Y = "down" === _ ? t.minpitch - V : t.minpitch + 1 / 3; Y > 6 && !n && (Y = 6); var G = "down" === _ ? t.maxpitch - 1 / 3 : t.maxpitch + V; G < 6 && !n && (G = 6); var W = "down" === _ || 0 === e.heads.length ? 0 : e.heads[0].w, R = "down" === _ ? 1 : -1; "noteheads.slash.quarter" === f.c && ("down" === _ ? G -= 1 : Y += 1), e.addRight(new x(null, W, 0, Y, { type: "stem", pitch2: G, linewidth: R })), m = Math.min(Y, G) } return { noteHead: f, roomTaken: k, roomTakenRight: T, min: m, additionalLedgers: C, dir: _, symbolWidth: S } }, L.prototype.addLyric = function (e, t) { var r = ""; M.each(t.lyric, (function (e) { var div = " " === e.divider ? "" : e.divider; r += e.syllable + div + "\n" })); var n = this.getTextSize.calc(r, "vocalfont", "lyric"), o = t.positioning ? t.positioning.vocalPosition : "below"; e.addCentered(new x(r, 0, n.width, void 0, { type: "lyric", position: o, height: n.height / w.STEP, dim: this.getTextSize.attr("vocalfont", "lyric") })) }, L.prototype.createNote = function (e, t, r, o) { var c, l = null, h = 0, f = 0, m = 0, v = [], w = N(e), k = !1; 0 === w && (k = !0, w = .25, t = !0); for (var T = Math.floor(Math.log(w) / Math.log(2)), C = 0, S = Math.pow(2, T), E = S / 2; S < w; C++, S += E, E /= 2); e.startTriplet && (this.tripletmultiplier = e.tripletMultiplier); var M = w * this.tripletmultiplier; e.rest && "multimeasure" === e.rest.type && (M = 1); var L = e.rest ? "rest" : "note", H = new n(e, M, 1, L, this.tuneNumber, { durationClassOveride: e.duration * this.tripletmultiplier }); if (B && H.setHint(), e.rest) { this.measureLength === w && "invisible" !== e.rest.type && "spacer" !== e.rest.type && "multimeasure" !== e.rest.type && (e.rest.type = "whole"); var O = function (e, t, r, n, o, c, l, h, f) { var m, v, w, k, T = 7; switch (o && ("down" === c && (T = 3), "up" === c && (T = 11)), l && (T = r < .5 || r < 1 ? 7 : 5), t.rest.type) { case "whole": m = P.rest[0], t.averagepitch = T, t.minpitch = T, t.maxpitch = T, n = 0; break; case "rest": m = "rhythm" === t.style ? P.rhythm[-h] : P.rest[-h], t.averagepitch = T, t.minpitch = T, t.maxpitch = T; break; case "invisible": case "spacer": m = "", t.averagepitch = T, t.minpitch = T, t.maxpitch = T; break; case "multimeasure": m = P.rest.multi, t.averagepitch = T, t.minpitch = T, t.maxpitch = T, n = 0; var C = y.getSymbolWidth(m); e.addHead(new x(m, C, 2 * C, 7)); var A = new x("" + t.rest.text, C, C, 16, { type: "multimeasure-text" }); e.addExtra(A) }if ("multimeasure" !== t.rest.type) { var S = d(e, m, { verticalPos: T }, { dot: n, scale: f }); (v = S.notehead) && (e.addHead(v), w = S.accidentalshiftx, k = S.dotshiftx) } return { noteHead: v, roomTaken: w, roomTakenRight: k } }(H, e, w, C, o.voicetotal > 1, this.stemdir, r, T, this.voiceScale); l = O.noteHead, h = O.roomTaken, f = O.roomTakenRight } else { var z = this.addNoteToAbcElement(H, e, C, this.stemdir, this.style, k, T, t, o); void 0 !== z.min && (this.minY = Math.min(z.min, this.minY)), l = z.noteHead, h = z.roomTaken, f = z.roomTakenRight, v = z.additionalLedgers, c = z.dir, m = z.symbolWidth } if (void 0 !== e.lyric && this.addLyric(H, e), void 0 !== e.gracenotes && (h += this.addGraceNotes(e, o, H, l, this.stemHeight * this.voiceScale, this.isBagpipes, h)), e.decoration && this.decoration.createDecoration(o, e.decoration, H.top, l ? l.w : 0, H, h, c, H.bottom, e.positioning, this.hasVocals), e.barNumber && H.addFixed(new x(e.barNumber, -10, 0, 0, { type: "barNumber" })), D(H, e.minpitch, e.maxpitch, e.rest, m, v, c, -2, 1), void 0 !== e.chord) { var j = _(this.getTextSize, H, e, h, f, m); h = j.roomTaken, f = j.roomTakenRight } return e.startTriplet && (this.triplet = new A(e.startTriplet, l, { flatBeams: this.flatBeams })), e.endTriplet && this.triplet && this.triplet.setCloseAnchor(l), !this.triplet || e.startTriplet || e.endTriplet || e.rest && "spacer" === e.rest.type || this.triplet.middleNote(l), H }, L.prototype.addSlursAndTies = function (e, t, r, n, o, c) { if (t.endTie && this.ties.length > 0) { for (var l = !1, h = 0; h < this.ties.length; h++)if (this.ties[h].anchor1 && this.ties[h].anchor1.pitch === r.pitch) { this.ties[h].setEndAnchor(r), this.ties.splice(h, 1), l = !0; break } l || (this.ties[0].setEndAnchor(r), this.ties.splice(0, 1)) } var d, f, m = n.voicetotal < 2 ? -1 : n.voicenumber; if (t.startTie) { var v = new C({ anchor1: r, force: "down" === this.stemdir || "up" === this.stemdir, stemDir: this.stemdir, isGrace: c, voiceNumber: m, style: t.startTie.style }); B && v.setHint(), this.ties[this.ties.length] = v, n.addOther(v), e.startTie = !0 } if (t.endSlur) for (var i = 0; i < t.endSlur.length; i++)f = t.endSlur[i], this.slurs[f] ? ((d = this.slurs[f]).setEndAnchor(r), delete this.slurs[f]) : (d = new C({ anchor2: r, stemDir: this.stemdir, voiceNumber: m }), B && d.setHint(), n.addOther(d)), this.startlimitelem && d.setStartX(this.startlimitelem); else if (!c) for (var s in this.slurs) this.slurs.hasOwnProperty(s) && this.slurs[s].addInternalNote(r); if (t.startSlur) for (i = 0; i < t.startSlur.length; i++)f = t.startSlur[i].label, d = new C({ anchor1: r, stemDir: this.stemdir, voiceNumber: m, style: t.startSlur[i].style }), B && d.setHint(), this.slurs[f] = d, n.addOther(d) }, L.prototype.addMeasureNumber = function (e, t) { var r = this.getTextSize.calc(e, "measurefont", "bar-number"), n = r.width > 18 && "treble" === t.abcelem.type ? -7 : 0; t.addFixed(new x(e, n, r.width, 11 + r.height / w.STEP, { type: "barNumber", dim: this.getTextSize.attr("measurefont", "bar-number") })) }, L.prototype.createBarLine = function (e, t, r) { var o = new n(t, 0, 10, "bar", this.tuneNumber), c = null, l = 0; t.barNumber && this.addMeasureNumber(t.barNumber, o); var h = "bar_right_repeat" === t.type || "bar_dbl_repeat" === t.type, d = "bar_left_repeat" !== t.type && "bar_thick_thin" !== t.type && "bar_invisible" !== t.type, f = "bar_right_repeat" === t.type || "bar_dbl_repeat" === t.type || "bar_left_repeat" === t.type || "bar_thin_thick" === t.type || "bar_thick_thin" === t.type, m = "bar_left_repeat" === t.type || "bar_thick_thin" === t.type || "bar_thin_thin" === t.type || "bar_dbl_repeat" === t.type, y = "bar_left_repeat" === t.type || "bar_dbl_repeat" === t.type; if (h || y) { for (var w in this.slurs) this.slurs.hasOwnProperty(w) && this.slurs[w].setEndX(o); this.startlimitelem = o } if (h && (o.addRight(new x("dots.dot", l, 1, 7)), o.addRight(new x("dots.dot", l, 1, 5)), l += 6), d && (c = new x(null, l, 1, 2, { type: "bar", pitch2: 10, linewidth: .6 }), o.addRight(c)), "bar_invisible" === t.type && (c = new x(null, l, 1, 2, { type: "none", pitch2: 10, linewidth: .6 }), o.addRight(c)), t.decoration && this.decoration.createDecoration(e, t.decoration, 12, f ? 3 : 1, o, 0, "down", 2, t.positioning, this.hasVocals), f && (c = new x(null, l += 4, 4, 2, { type: "bar", pitch2: 10, linewidth: 4 }), o.addRight(c), l += 5), this.partstartelem && t.endEnding && (this.partstartelem.anchor2 = c, this.partstartelem = null), m && (c = new x(null, l += 3, 1, 2, { type: "bar", pitch2: 10, linewidth: .6 }), o.addRight(c)), y && (l += 3, o.addRight(new x("dots.dot", l, 1, 7)), o.addRight(new x("dots.dot", l, 1, 5))), t.startEnding && r) { var k = this.getTextSize.calc(t.startEnding, "repeatfont", "").width; o.minspacing += k + 10, this.partstartelem = new v(t.startEnding, c, null), e.addOther(this.partstartelem) } return o.extraw -= 5, o }, e.exports = L }, function (e, t) { var r = function (e, t, r, n) { this.type = "BeamElem", this.isflat = !!r, this.isgrace = !(!t || "grace" !== t), this.forceup = !!(this.isgrace || t && "up" === t), this.forcedown = !(!t || "down" !== t), this.elems = [], this.total = 0, this.average = 6, this.allrests = !0, this.stemHeight = e, this.beams = [], n && n.duration ? (this.duration = n.duration, n.startTriplet && (this.duration *= n.tripletMultiplier), this.duration = Math.round(1e3 * this.duration) / 1e3) : this.duration = 0 }; r.prototype.setHint = function () { this.hint = !0 }, r.prototype.add = function (e) { var t = e.abcelem.averagepitch; void 0 !== t && (e.abcelem.rest || (this.allrests = !1), e.beam = this, this.elems.push(e), this.total = Math.round(this.total + t), (void 0 === this.min || e.abcelem.minpitch < this.min) && (this.min = e.abcelem.minpitch), (void 0 === this.max || e.abcelem.maxpitch > this.max) && (this.max = e.abcelem.maxpitch)) }, r.prototype.addBeam = function (e) { this.beams.push(e) }, r.prototype.calcDir = function () { var e, t; if (this.average = (e = this.total, (t = this.elems.length) ? e / t : 0), this.forceup) this.stemsUp = !0; else if (this.forcedown) this.stemsUp = !1; else { this.stemsUp = this.average < 6 } for (var r = this.stemsUp ? "up" : "down", i = 0; i < this.elems.length; i++)for (var n = 0; n < this.elems[i].heads.length; n++)this.elems[i].heads[n].stemDir = r }, e.exports = r }, function (e, t) { var r = function (e, t) { this.startVoice = e, this.type = t }; r.prototype.setBottomStaff = function (e) { this.endVoice = e, this.startVoice.header && !this.endVoice.header && (this.header = this.startVoice.header, delete this.startVoice.header) }, r.prototype.continuing = function (e) { this.lastContinuedVoice = e }, r.prototype.getWidth = function () { return 10 }, r.prototype.isStartVoice = function (e) { return !!(this.startVoice && this.startVoice.staff && this.startVoice.staff.voices.length > 0 && this.startVoice.staff.voices[0] === e) }, e.exports = r }, function (e, t, r) { var n = r(59), o = r(29), c = r(22); e.exports = function (e, t) { var r, l = 0; e.el_type = "clef"; var h = new n(e, 0, 10, "staff-extra clef", t); switch (h.isClef = !0, e.type) { case "treble": r = "clefs.G"; break; case "tenor": case "alto": r = "clefs.C"; break; case "bass": r = "clefs.F"; break; case "treble+8": r = "clefs.G", l = 1; break; case "tenor+8": r = "clefs.C", l = 1; break; case "bass+8": r = "clefs.F", l = 1; break; case "alto+8": r = "clefs.C", l = 1; break; case "treble-8": r = "clefs.G", l = -1; break; case "tenor-8": r = "clefs.C", l = -1; break; case "bass-8": r = "clefs.F", l = -1; break; case "alto-8": r = "clefs.C", l = -1; break; case "none": return null; case "perc": r = "clefs.perc"; break; default: h.addFixed(new c("clef=" + e.type, 0, 0, void 0, { type: "debug" })) }if (r) { var d = o.symbolHeightInPitches(r), f = function (e) { switch (e) { case "clefs.G": return -5; case "clefs.C": case "clefs.F": return -4; case "clefs.perc": return -2; default: return 0 } }(r); if (h.addRight(new c(r, 5, o.getSymbolWidth(r), e.clefPos, { top: d + e.clefPos + f, bottom: e.clefPos + f })), 0 !== l) { var m = 2 / 3, v = (o.getSymbolWidth(r) - o.getSymbolWidth("8") * m) / 2, y = l > 0 ? h.top + 3 : h.bottom - 1, x = l > 0 ? h.top + 3 : h.bottom - 3, w = x - 2; "bass-8" === e.type && (y = 3, v = 0), h.addRight(new c("8", 5 + v, o.getSymbolWidth("8") * m, y, { scalex: m, scaley: m, top: x, bottom: w })) } } return h } }, function (e, t, r) { var n = r(59), o = r(29), c = r(22), l = r(7); e.exports = function (e, t) { if (!e.accidentals || 0 === e.accidentals.length) return null; e.el_type = "keySignature"; var r = new n(e, 0, 10, "staff-extra key-signature", t); r.isKeySig = !0; var h = 0; return l.each(e.accidentals, (function (e) { var symbol, t = 0; switch (e.acc) { case "sharp": symbol = "accidentals.sharp", t = -3; break; case "natural": symbol = "accidentals.nat"; break; case "flat": symbol = "accidentals.flat", t = -1.2; break; case "quartersharp": symbol = "accidentals.halfsharp", t = -2.5; break; case "quarterflat": symbol = "accidentals.halfflat", t = -1.2; break; default: symbol = "accidentals.flat" }r.addRight(new c(symbol, h, o.getSymbolWidth(symbol), e.verticalPos, { thickness: o.symbolHeightInPitches(symbol), top: e.verticalPos + o.symbolHeightInPitches(symbol) + t, bottom: e.verticalPos + t })), h += o.getSymbolWidth(symbol) + 2 }), this), r } }, function (e, t, r) { var n = r(29), o = r(22); e.exports = function (e, t, r, c) { c || (c = {}); var l, h = void 0 !== c.dir ? c.dir : null, d = void 0 !== c.headx ? c.headx : 0, f = void 0 !== c.extrax ? c.extrax : 0, m = void 0 !== c.flag ? c.flag : null, v = void 0 !== c.dot ? c.dot : 0, y = void 0 !== c.dotshiftx ? c.dotshiftx : 0, x = void 0 !== c.scale ? c.scale : 1, w = void 0 !== c.accidentalSlot ? c.accidentalSlot : [], k = void 0 !== c.shouldExtendStem && c.shouldExtendStem, T = void 0 === c.printAccidentals || c.printAccidentals, C = r.verticalPos, A = 0, S = 0, _ = 0; if (void 0 === t) e.addFixed(new o("pitch is undefined", 0, 0, 0, { type: "debug" })); else if ("" === t) l = new o(null, 0, 0, C); else { var E = d; if (r.printer_shift) { var M = "same" === r.printer_shift ? 1 : 0; E = "down" === h ? -n.getSymbolWidth(t) * x + M : n.getSymbolWidth(t) * x - M } var N = { scalex: x, scaley: x, thickness: n.symbolHeightInPitches(t) * x }; if ((l = new o(t, E, n.getSymbolWidth(t) * x, C, N)).stemDir = h, m) { var B = C + ("down" === h ? -7 : 7) * x; k && ("down" === h && B > 6 && (B = 6), "up" === h && B < 6 && (B = 6)); var P = "down" === h ? d : d + l.w - .6; e.addRight(new o(m, P, n.getSymbolWidth(m) * x, B, { scalex: x, scaley: x })) } for (S = l.w + y - 2 + 5 * v; v > 0; v--) { var L = 1 - Math.abs(C) % 2; e.addRight(new o("dots.dot", l.w + y - 2 + 5 * v, n.getSymbolWidth("dots.dot"), C + L)) } } if (l && (l.highestVert = r.highestVert), T && r.accidental) { var H; switch (r.accidental) { case "quartersharp": H = "accidentals.halfsharp"; break; case "dblsharp": H = "accidentals.dblsharp"; break; case "sharp": H = "accidentals.sharp"; break; case "quarterflat": H = "accidentals.halfflat"; break; case "flat": H = "accidentals.flat"; break; case "dblflat": H = "accidentals.dblflat"; break; case "natural": H = "accidentals.nat" }for (var O = !1, z = f, D = 0; D < w.length; D++)if (C - w[D][0] >= 6) { w[D][0] = C, z = w[D][1], O = !0; break } !1 === O && (z -= n.getSymbolWidth(H) * x + 2, w.push([C, z]), A = n.getSymbolWidth(H) * x + 2); var j = n.symbolHeightInPitches(H); e.addExtra(new o(H, z, n.getSymbolWidth(H), C, { scalex: x, scaley: x, top: C + j / 2, bottom: C - j / 2 })), _ = n.getSymbolWidth(H) / 2 } return { notehead: l, accidentalshiftx: A, dotshiftx: S, extraLeft: _ } } }, function (e, t, r) { var n = r(59), o = r(29), c = r(22); e.exports = function (e, t) { e.el_type = "timeSignature"; var r = new n(e, 0, 10, "staff-extra time-signature", t); if ("specified" === e.type) for (var l = 0, i = 0; i < e.value.length; i++)if (0 !== i && (r.addRight(new c("+", l + 1, o.getSymbolWidth("+"), 6, { thickness: o.symbolHeightInPitches("+") })), l += o.getSymbolWidth("+") + 2), e.value[i].den) { for (var h = 0, d = 0; d < e.value[i].num.length; d++)h += o.getSymbolWidth(e.value[i].num.charAt(d)); var f = 0; for (d = 0; d < e.value[i].num.length; d++)f += o.getSymbolWidth(e.value[i].den.charAt(d)); var m = Math.max(h, f); r.addRight(new c(e.value[i].num, l + (m - h) / 2, h, 8, { thickness: o.symbolHeightInPitches(e.value[i].num.charAt(0)) })), r.addRight(new c(e.value[i].den, l + (m - f) / 2, f, 4, { thickness: o.symbolHeightInPitches(e.value[i].den.charAt(0)) })), l += m } else { for (var v = 0, y = 0; y < e.value[i].num.length; y++)v += o.getSymbolWidth(e.value[i].num.charAt(y)); r.addRight(new c(e.value[i].num, l, v, 6, { thickness: o.symbolHeightInPitches(e.value[i].num.charAt(0)) })), l += v } else "common_time" === e.type ? r.addRight(new c("timesig.common", 0, o.getSymbolWidth("timesig.common"), 6, { thickness: o.symbolHeightInPitches("timesig.common") })) : "cut_time" === e.type ? r.addRight(new c("timesig.cut", 0, o.getSymbolWidth("timesig.cut"), 6, { thickness: o.symbolHeightInPitches("timesig.cut") })) : "tempus_imperfectum" === e.type ? r.addRight(new c("timesig.imperfectum", 0, o.getSymbolWidth("timesig.imperfectum"), 6, { thickness: o.symbolHeightInPitches("timesig.imperfectum") })) : "tempus_imperfectum_prolatio" === e.type ? r.addRight(new c("timesig.imperfectum2", 0, o.getSymbolWidth("timesig.imperfectum2"), 6, { thickness: o.symbolHeightInPitches("timesig.imperfectum2") })) : "tempus_perfectum" === e.type ? r.addRight(new c("timesig.perfectum", 0, o.getSymbolWidth("timesig.perfectum"), 6, { thickness: o.symbolHeightInPitches("timesig.perfectum") })) : "tempus_perfectum_prolatio" === e.type ? r.addRight(new c("timesig.perfectum2", 0, o.getSymbolWidth("timesig.perfectum2"), 6, { thickness: o.symbolHeightInPitches("timesig.perfectum2") })) : console.log("time signature:", e); return r } }, function (e, t, r) { var n = r(226), o = r(227), c = r(29), l = r(22), h = r(146), d = function () { this.startDiminuendoX = void 0, this.startCrescendoX = void 0, this.minTop = 12, this.minBottom = 0 }, f = function (e, t, r, n, o) { function h(symbol, e) { var t = "down" === o ? function () { if (0 === n.heads.length) return 2; for (var e = n.heads[0].pitch, i = 1; i < n.heads.length; i++)e = Math.min(e, n.heads[i].pitch); return e }() + 1 : function () { if (0 === n.heads.length) return 10; for (var e = n.heads[0].pitch, i = 1; i < n.heads.length; i++)e = Math.max(e, n.heads[i].pitch); return e }() + 9; "down" !== o && 1 === e && t--; var h = r / 2; h += "down" === o ? -5 : 3; for (var i = 0; i < e; i++)t -= 1, n.addFixedX(new l(symbol, h, c.getSymbolWidth(symbol), t)) } for (var i = 0; i < e.length; i++)switch (e[i]) { case "/": h("flags.ugrace", 1); break; case "//": h("flags.ugrace", 2); break; case "///": h("flags.ugrace", 3); break; case "////": h("flags.ugrace", 4) } }; d.prototype.dynamicDecoration = function (e, t, r, n) { for (var c, l, i = 0; i < t.length; i++)switch (t[i]) { case "diminuendo(": this.startDiminuendoX = r, c = void 0; break; case "diminuendo)": c = { start: this.startDiminuendoX, stop: r }, this.startDiminuendoX = void 0; break; case "crescendo(": this.startCrescendoX = r, l = void 0; break; case "crescendo)": l = { start: this.startCrescendoX, stop: r }, this.startCrescendoX = void 0 }c && e.addOther(new o(c.start, c.stop, ">", n)), l && e.addOther(new o(l.start, l.stop, "<", n)) }, d.prototype.createDecoration = function (e, t, r, o, d, m, v, y, x, w) { x || (x = { ornamentPosition: "above", volumePosition: w ? "above" : "below", dynamicPosition: w ? "above" : "below" }), function (e, t, r, o) { for (var i = 0; i < t.length; i++)switch (t[i]) { case "p": case "mp": case "pp": case "ppp": case "pppp": case "f": case "ff": case "fff": case "ffff": case "sfz": case "mf": var c = new n(r, t[i], o); e.addOther(c) } }(e, t, d, x.volumePosition), this.dynamicDecoration(e, t, d, x.dynamicPosition), f(t, 0, o, d, v); var k = function (e, t, r, n, o, d, f, m) { for (var v, i = 0; i < t.length; i++) { if ("staccato" === t[i] || "tenuto" === t[i] || "accent" === t[i]) { var symbol = "scripts." + t[i]; if ("accent" === t[i] && (symbol = "scripts.sforzato"), v = void 0 === v ? "down" === f ? r + 2 : m - 2 : "down" === f ? v + 2 : v - 2, "accent" === t[i]) "up" === f ? v-- : v++; else switch (v) { case 2: case 4: case 6: case 8: case 10: "up" === f ? v-- : v++ }r > 9 && v++; var y = n / 2; "center" !== c.getSymbolAlign(symbol) && (y -= c.getSymbolWidth(symbol) / 2), o.addFixedX(new l(symbol, y, c.getSymbolWidth(symbol), v)) } if ("slide" === t[i] && o.heads[0]) { var x = o.heads[0].pitch, w = new l("", -d - 15, 0, (x -= 2) - 1), k = new l("", -d - 5, 0, x + 1); o.addFixedX(w), o.addFixedX(k), e.addOther(new h({ anchor1: w, anchor2: k, fixedY: !0 })) } } return void 0 === v && (v = r), { above: v, below: o.bottom } }(e, t, r, o, d, m, v, y); k.above = Math.max(k.above, this.minTop); !function (e, t, r, n, o, h, d) { function f(e, t) { "above" === e ? n.above += t : n.below -= t } function m(e) { var t; return "above" === e ? (t = n.above) < h && (t = h) : (t = n.below) > d && (t = d), t } function v(text, e) { var n = m(e); r.addFixedX(new l(text, t / 2, 0, n + 2, { type: "decoration", klass: "ornament", thickness: 3 })), f(e, 5) } function y(symbol, e) { var n = t / 2; "center" !== c.getSymbolAlign(symbol) && (n -= c.getSymbolWidth(symbol) / 2); var o = c.symbolHeightInPitches(symbol) + 1, h = m(e); h = "above" === e ? h + o / 2 : h - o / 2, r.addFixedX(new l(symbol, n, c.getSymbolWidth(symbol), h, { klass: "ornament", thickness: c.symbolHeightInPitches(symbol) })), f(e, o) } for (var x = { "+": "scripts.stopped", open: "scripts.open", snap: "scripts.snap", wedge: "scripts.wedge", thumb: "scripts.thumb", shortphrase: "scripts.shortphrase", mediumphrase: "scripts.mediumphrase", longphrase: "scripts.longphrase", trill: "scripts.trill", roll: "scripts.roll", irishroll: "scripts.roll", marcato: "scripts.umarcato", dmarcato: "scripts.dmarcato", umarcato: "scripts.umarcato", turn: "scripts.turn", uppermordent: "scripts.prall", pralltriller: "scripts.prall", mordent: "scripts.mordent", lowermordent: "scripts.mordent", downbow: "scripts.downbow", upbow: "scripts.upbow", fermata: "scripts.ufermata", invertedfermata: "scripts.dfermata", breath: ",", coda: "scripts.coda", segno: "scripts.segno" }, w = !1, i = 0; i < e.length; i++)switch (e[i]) { case "0": case "1": case "2": case "3": case "4": case "5": case "D.C.": case "D.S.": v(e[i], o), w = !0; break; case "fine": v("FINE", o), w = !0; break; case "+": case "open": case "snap": case "wedge": case "thumb": case "shortphrase": case "mediumphrase": case "longphrase": case "trill": case "roll": case "irishroll": case "marcato": case "dmarcato": case "turn": case "uppermordent": case "pralltriller": case "mordent": case "lowermordent": case "downbow": case "upbow": case "fermata": case "breath": case "umarcato": case "coda": case "segno": y(x[e[i]], o), w = !0; break; case "invertedfermata": y(x[e[i]], "below"), w = !0; break; case "mark": r.klass = "mark" } }(t, o, d, k, x.ornamentPosition, this.minTop, this.minBottom); !function (e, t, r) { for (var i = 0; i < e.length; i++)switch (e[i]) { case "arpeggio": for (var n = t.abcelem.minpitch - 1; n <= t.abcelem.maxpitch; n += 2)t.addExtra(new l("scripts.arpeggio", 2 * -c.getSymbolWidth("scripts.arpeggio") - r, 0, n + 2, { klass: "ornament", thickness: c.symbolHeightInPitches("scripts.arpeggio") })) } }(t, d, m) }, e.exports = d }, function (e, t) { e.exports = function (e, t, r) { this.type = "DynamicDecoration", this.anchor = e, this.dec = t, "below" === r ? this.volumeHeightBelow = 6 : this.volumeHeightAbove = 6, this.pitch = void 0 } }, function (e, t) { e.exports = function (e, t, r, n) { this.type = "CrescendoElem", this.anchor1 = e, this.anchor2 = t, this.dir = r, "above" === n ? this.dynamicHeightAbove = 6 : this.dynamicHeightBelow = 6, this.pitch = void 0 } }, function (e, t) { e.exports = function (text, e, t) { this.type = "EndingElem", this.text = text, this.anchor1 = e, this.anchor2 = t, this.endingHeightAbove = 5, this.pitch = void 0 } }, function (e, t, r) { var n = r(147), o = function (e) { this.getTextSize = e, this.voices = [], this.staffs = [], this.brace = void 0, this.bracket = void 0 }; o.prototype.setLimit = function (e, t) { t.specialY[e] && (t.staff.specialY[e] ? t.staff.specialY[e] = Math.max(t.staff.specialY[e], t.specialY[e]) : t.staff.specialY[e] = t.specialY[e]) }, o.prototype.addVoice = function (e, t, r) { var n = this.voices.length; this.voices[n] = e, this.staffs[t] ? this.staffs[t].voices.push(n) : this.staffs[this.staffs.length] = { top: 10, bottom: 2, lines: r, voices: [n], specialY: { tempoHeightAbove: 0, partHeightAbove: 0, volumeHeightAbove: 0, dynamicHeightAbove: 0, endingHeightAbove: 0, chordHeightAbove: 0, lyricHeightAbove: 0, lyricHeightBelow: 0, chordHeightBelow: 0, volumeHeightBelow: 0, dynamicHeightBelow: 0 } }, e.staff = this.staffs[t] }, o.prototype.setHeight = function () { this.height = n(this) }, o.prototype.setWidth = function (e) { this.w = e; for (var i = 0; i < this.voices.length; i++)this.voices[i].setWidth(e) }, o.prototype.setStaffLimits = function (e) { e.staff.top = Math.max(e.staff.top, e.top), e.staff.bottom = Math.min(e.staff.bottom, e.bottom), this.setLimit("tempoHeightAbove", e), this.setLimit("partHeightAbove", e), this.setLimit("volumeHeightAbove", e), this.setLimit("dynamicHeightAbove", e), this.setLimit("endingHeightAbove", e), this.setLimit("chordHeightAbove", e), this.setLimit("lyricHeightAbove", e), this.setLimit("lyricHeightBelow", e), this.setLimit("chordHeightBelow", e), this.setLimit("volumeHeightBelow", e), this.setLimit("dynamicHeightBelow", e) }, e.exports = o }, function (e, t, r) { var n = r(59), o = r(22), c = function (e, t, r) { this.type = "TempoElement", this.tempo = e, this.tempo.type = "tempo", this.tuneNumber = t, this.totalHeightInPitches = 6, this.tempoHeightAbove = this.totalHeightInPitches, this.pitch = void 0, this.tempo.duration && !this.tempo.suppressBpm && (this.note = this.createNote(r, e, t)) }; c.prototype.setX = function (e) { this.x = e }, c.prototype.createNote = function (e, t, r) { var c, l, h, d = .75, f = t.duration[0], m = new n(t, f, 1, "tempo", r); f <= 1 / 32 ? (h = "noteheads.quarter", l = "flags.u32nd", c = 0) : f <= 1 / 16 ? (h = "noteheads.quarter", l = "flags.u16th", c = 0) : f <= 3 / 32 ? (h = "noteheads.quarter", l = "flags.u16nd", c = 1) : f <= 1 / 8 ? (h = "noteheads.quarter", l = "flags.u8th", c = 0) : f <= 3 / 16 ? (h = "noteheads.quarter", l = "flags.u8th", c = 1) : f <= 1 / 4 ? (h = "noteheads.quarter", c = 0) : f <= 3 / 8 ? (h = "noteheads.quarter", c = 1) : f <= .5 ? (h = "noteheads.half", c = 0) : f <= 3 / 4 ? (h = "noteheads.half", c = 1) : f <= 1 ? (h = "noteheads.whole", c = 0) : f <= 1.5 ? (h = "noteheads.whole", c = 1) : f <= 2 ? (h = "noteheads.dbl", c = 0) : (h = "noteheads.dbl", c = 1); var v, y = e(m, h, { verticalPos: 0 }, { dir: "up", flag: l, dot: c, scale: d }).notehead; if (m.addHead(y), "noteheads.whole" !== h && "noteheads.dbl" !== h) { var x = y.dx + y.w; v = new o(null, x, 0, .25, { type: "stem", pitch2: 3.75, linewidth: -.6 }), m.addRight(v) } return m }, e.exports = c }, function (e, t) { var r = function (e, t, r) { this.type = "TripletElem", this.anchor1 = t, this.number = e, this.durationClass = ("d" + Math.round(1e3 * t.parent.durationClass) / 1e3).replace(/\./, "-"), this.middleElems = [], this.flatBeams = r.flatBeams }; r.prototype.isClosed = function () { return !!this.anchor2 }, r.prototype.middleNote = function (e) { this.middleElems.push(e) }, r.prototype.setCloseAnchor = function (e) { this.anchor2 = e, this.anchor1.parent.beam && (this.endingHeightAbove = 4) }, e.exports = r }, function (e, t) { var r = function (e, t) { this.children = [], this.beams = [], this.otherchildren = [], this.w = 0, this.duplicate = !1, this.voicenumber = e, this.voicetotal = t, this.bottom = 7, this.top = 7, this.specialY = { tempoHeightAbove: 0, partHeightAbove: 0, volumeHeightAbove: 0, dynamicHeightAbove: 0, endingHeightAbove: 0, chordHeightAbove: 0, lyricHeightAbove: 0, lyricHeightBelow: 0, chordHeightBelow: 0, volumeHeightBelow: 0, dynamicHeightBelow: 0 } }; r.prototype.addChild = function (e) { if ("bar" === e.type) { for (var t = !0, i = 0; t && i < this.children.length; i++)this.children[i].type.indexOf("staff-extra") < 0 && "tempo" !== this.children[i].type && (t = !1); t || (this.beams.push("bar"), this.otherchildren.push("bar")) } this.children[this.children.length] = e, this.setRange(e) }, r.prototype.setLimit = function (e, t) { var r = t.specialY; r || (r = t), r[e] && (this.specialY[e] ? this.specialY[e] = Math.max(this.specialY[e], r[e]) : this.specialY[e] = r[e]) }, r.prototype.adjustRange = function (e) { void 0 !== e.bottom && (this.bottom = Math.min(this.bottom, e.bottom)), void 0 !== e.top && (this.top = Math.max(this.top, e.top)) }, r.prototype.setRange = function (e) { this.adjustRange(e), this.setLimit("tempoHeightAbove", e), this.setLimit("partHeightAbove", e), this.setLimit("volumeHeightAbove", e), this.setLimit("dynamicHeightAbove", e), this.setLimit("endingHeightAbove", e), this.setLimit("chordHeightAbove", e), this.setLimit("lyricHeightAbove", e), this.setLimit("lyricHeightBelow", e), this.setLimit("chordHeightBelow", e), this.setLimit("volumeHeightBelow", e), this.setLimit("dynamicHeightBelow", e) }, r.prototype.addOther = function (e) { this.otherchildren.push(e), this.setRange(e) }, r.prototype.addBeam = function (e) { this.beams.push(e) }, r.prototype.setWidth = function (e) { this.w = e }, e.exports = r }, function (e, t, r) { var n = r(22), o = r(9); e.exports = function (e, t, r, c, l, h) { for (var i = 0; i < r.chord.length; i++)for (var d = r.chord[i].position, f = r.chord[i].rel_position, m = r.chord[i].name.split("\n"), v = m.length - 1; v >= 0; v--) { var y, x, w, k = m[v], T = 0; "left" === d || "right" === d || "below" === d || "above" === d ? (x = "annotationfont", w = "annotation") : (x = "gchordfont", w = "chord"); var C = e.attr(x, w), A = e.calc(k, x, w), S = A.width, _ = A.height / o.STEP; switch (d) { case "left": T = -(c += S + 7), y = r.averagepitch, t.addExtra(new n(k, T, S + 4, y, { type: "text", height: _, dim: C, position: "left" })); break; case "right": T = l += 4, y = r.averagepitch, t.addRight(new n(k, T, S + 4, y, { type: "text", height: _, dim: C, position: "right" })); break; case "below": t.addRight(new n(k, 0, 0, void 0, { type: "text", position: "below", height: _, dim: C, realWidth: S })); break; case "above": t.addRight(new n(k, 0, 0, void 0, { type: "text", position: "above", height: _, dim: C, realWidth: S })); break; default: if (f) { var E = f.y + 3 * o.STEP; t.addRight(new n(k, T + f.x, 0, r.minpitch + E / o.STEP, { position: "relative", type: "text", height: _, dim: C })) } else { var M = "above"; r.positioning && r.positioning.chordPosition && (M = r.positioning.chordPosition), "hidden" !== M && t.addCentered(new n(k, h / 2, S, void 0, { type: "chord", position: M, height: _, dim: C, realWidth: S })) } } } return { roomTaken: c, roomTakenRight: l } } }, function (e, t, r) { var n = r(9), o = r(235), c = function (e) { this.paper = new o(e), this.controller = null, this.space = 3 * n.SPACE, this.padding = {}, this.reset() }; c.prototype.reset = function () { this.paper.clear(), this.y = 0, this.abctune = null, this.path = null, this.isPrint = !1, this.initVerticalSpace() }, c.prototype.newTune = function (e) { this.abctune = e, this.setVerticalSpace(e.formatting), this.isPrint = "print" === e.media, this.setPadding(e) }, c.prototype.setPaddingOverride = function (e) { this.paddingOverride = { top: e.paddingtop, bottom: e.paddingbottom, right: e.paddingright, left: e.paddingleft } }, c.prototype.setPadding = function (e) { function t(t, r, n, o, c) { void 0 !== e.formatting[n] ? t.padding[r] = e.formatting[n] : void 0 !== t.paddingOverride[r] ? t.padding[r] = t.paddingOverride[r] : t.isPrint ? t.padding[r] = o : t.padding[r] = c } t(this, "top", "topmargin", 38, 15), t(this, "bottom", "botmargin", 38, 15), t(this, "left", "leftmargin", 68, 15), t(this, "right", "rightmargin", 68, 15) }, c.prototype.adjustNonScaledItems = function (e) { this.padding.top /= e, this.padding.bottom /= e, this.padding.left /= e, this.padding.right /= e, this.abctune.formatting.headerfont.size /= e, this.abctune.formatting.footerfont.size /= e }, c.prototype.initVerticalSpace = function () { this.spacing = { composer: 7.56, graceBefore: 8.67, graceInside: 10.67, graceAfter: 16, info: 0, lineSkipFactor: 1.1, music: 7.56, paragraphSkipFactor: .4, parts: 11.33, slurHeight: 1, staffSeparation: 61.33, stemHeight: 36.67, subtitle: 3.78, systemStaffSeparation: 48, text: 18.9, title: 7.56, top: 30.24, vocal: 0, words: 0 } }, c.prototype.setVerticalSpace = function (e) { void 0 !== e.staffsep && (this.spacing.staffSeparation = 4 * e.staffsep / 3), void 0 !== e.composerspace && (this.spacing.composer = 4 * e.composerspace / 3), void 0 !== e.partsspace && (this.spacing.parts = 4 * e.partsspace / 3), void 0 !== e.textspace && (this.spacing.text = 4 * e.textspace / 3), void 0 !== e.musicspace && (this.spacing.music = 4 * e.musicspace / 3), void 0 !== e.titlespace && (this.spacing.title = 4 * e.titlespace / 3), void 0 !== e.sysstaffsep && (this.spacing.systemStaffSeparation = 4 * e.sysstaffsep / 3), void 0 !== e.subtitlespace && (this.spacing.subtitle = 4 * e.subtitlespace / 3), void 0 !== e.topspace && (this.spacing.top = 4 * e.topspace / 3), void 0 !== e.vocalspace && (this.spacing.vocal = 4 * e.vocalspace / 3), void 0 !== e.wordsspace && (this.spacing.words = 4 * e.wordsspace / 3) }, c.prototype.calcY = function (e) { return this.y - e * n.STEP }, c.prototype.moveY = function (em, e) { void 0 === e && (e = 1), this.y += em * e }, e.exports = c }, function (e, t) { var r = "http://www.w3.org/2000/svg"; function n(e) { this.svg = h(), e.appendChild(this.svg) } function o(e, t, r) { var n = r - e; return "M " + e + " " + t + " l " + n + " 0 l 0 1  l " + -n + " 0  z " } function c(e, t, r) { var n = r - t; return "M " + e + " " + t + " l 0 " + n + " l 1 0  l 0 " + -n + "  z " } n.prototype.clear = function () { if (this.svg) { var e = this.svg.parentNode; this.svg = h(), e && (e.innerHTML = "", e.appendChild(this.svg)) } }, n.prototype.setTitle = function (title) { var e = document.createElement("title"), t = document.createTextNode(title); e.appendChild(t), this.svg.insertBefore(e, this.svg.firstChild) }, n.prototype.setResponsiveWidth = function (e, t) { if (this.svg.setAttribute("viewBox", "0 0 " + e + " " + t), this.svg.setAttribute("preserveAspectRatio", "xMinYMin meet"), this.svg.removeAttribute("height"), this.svg.removeAttribute("width"), this.svg.style.display = "inline-block", this.svg.style.position = "absolute", this.svg.style.top = "0", this.svg.style.left = "0", this.svg.parentNode) { var r = this.svg.parentNode.getAttribute("class"); r ? r.indexOf("abcjs-container") < 0 && this.svg.parentNode.setAttribute("class", r + " abcjs-container") : this.svg.parentNode.setAttribute("class", "abcjs-container"), this.svg.parentNode.style.display = "inline-block", this.svg.parentNode.style.position = "relative", this.svg.parentNode.style.width = "100%"; var n = t / e * 100; this.svg.parentNode.style["padding-bottom"] = n + "%", this.svg.parentNode.style["vertical-align"] = "middle", this.svg.parentNode.style.overflow = "hidden" } }, n.prototype.setSize = function (e, t) { this.svg.setAttribute("width", e), this.svg.setAttribute("height", t) }, n.prototype.setAttribute = function (e, t) { this.svg.setAttribute(e, t) }, n.prototype.setScale = function (e) { 1 !== e ? (this.svg.style.transform = "scale(" + e + "," + e + ")", this.svg.style["-ms-transform"] = "scale(" + e + "," + e + ")", this.svg.style["-webkit-transform"] = "scale(" + e + "," + e + ")", this.svg.style["transform-origin"] = "0 0", this.svg.style["-ms-transform-origin-x"] = "0", this.svg.style["-ms-transform-origin-y"] = "0", this.svg.style["-webkit-transform-origin-x"] = "0", this.svg.style["-webkit-transform-origin-y"] = "0") : (this.svg.style.transform = "", this.svg.style["-ms-transform"] = "", this.svg.style["-webkit-transform"] = "") }, n.prototype.insertStyles = function (e) { var t = document.createElementNS(r, "style"); t.textContent = e, this.svg.insertBefore(t, this.svg.firstChild) }, n.prototype.setParentStyles = function (e) { for (var t in e) e.hasOwnProperty(t) && this.svg.parentNode && (this.svg.parentNode.style[t] = e[t]); this.dummySvg && (document.querySelector("body").removeChild(this.dummySvg), this.dummySvg = null) }, n.prototype.rect = function (e) { var t = [], r = e.x, n = e.y, l = e.x + e.width, h = e.y + e.height; return t.push(o(r, n, l)), t.push(o(r, h, l)), t.push(c(l, n, h)), t.push(c(r, h, n)), this.path({ path: t.join(" "), stroke: "none" }) }, n.prototype.dottedLine = function (e) { var t = document.createElementNS(r, "line"); t.setAttribute("x1", e.x1), t.setAttribute("x2", e.x2), t.setAttribute("y1", e.y1), t.setAttribute("y2", e.y2), t.setAttribute("stroke", e.stroke), t.setAttribute("stroke-dasharray", "5,5"), this.svg.insertBefore(t, this.svg.firstChild) }, n.prototype.rectBeneath = function (e) { var t = document.createElementNS(r, "rect"); t.setAttribute("x", e.x), t.setAttribute("width", e.width), t.setAttribute("y", e.y), t.setAttribute("height", e.height), e.stroke && t.setAttribute("stroke", e.stroke), e["stroke-opacity"] && t.setAttribute("stroke-opacity", e["stroke-opacity"]), e.fill && t.setAttribute("fill", e.fill), e["fill-opacity"] && t.setAttribute("fill-opacity", e["fill-opacity"]), this.svg.insertBefore(t, this.svg.firstChild) }, n.prototype.text = function (text, e, t) { var n = document.createElementNS(r, "text"); for (var o in n.setAttribute("stroke", "none"), e) e.hasOwnProperty(o) && n.setAttribute(o, e[o]); for (var c = ("" + text).split("\n"), i = 0; i < c.length; i++) { var line = document.createElementNS(r, "tspan"); line.textContent = c[i], line.setAttribute("x", e.x ? e.x : 0), 0 !== i && line.setAttribute("dy", "1.2em"), n.appendChild(line) } return t ? t.appendChild(n) : this.append(n), n }, n.prototype.guessWidth = function (text, e) { var t, svg = this.createDummySvg(), r = this.text(text, e, svg); try { t = r.getBBox(), t = isNaN(t.height) || !t.height ? { width: e["font-size"] / 2, height: e["font-size"] + 2 } : { width: t.width, height: t.height } } catch (r) { t = { width: e["font-size"] / 2, height: e["font-size"] + 2 } } return svg.removeChild(r), t }, n.prototype.createDummySvg = function () { if (!this.dummySvg) { this.dummySvg = h(); this.dummySvg.setAttribute("style", ["display: block !important;", "height: 1px;", "width: 1px;", "position: absolute;"].join("")), document.querySelector("body").appendChild(this.dummySvg) } return this.dummySvg }; var l = {}; function h() { var svg = document.createElementNS(r, "svg"); return svg.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:xlink", "http://www.w3.org/1999/xlink"), svg.setAttribute("role", "img"), svg.setAttribute("fill", "currentColor"), svg.setAttribute("stroke", "currentColor"), svg } n.prototype.getTextSize = function (text, e, t) { if ("number" == typeof text && (text = "" + text), !text || text.match(/^\s+$/)) return { width: 0, height: 0 }; var r; if (text.length < 20 && (r = text + JSON.stringify(e), l[r])) return l[r]; var n, o = !t; t || (t = this.text(text, e)); try { n = t.getBBox(), n = isNaN(n.height) || !n.height ? this.guessWidth(text, e) : { width: n.width, height: n.height } } catch (t) { n = this.guessWidth(text, e) } return o && (this.currentGroup ? this.currentGroup.removeChild(t) : this.svg.removeChild(t)), r && (l[r] = n), n }, n.prototype.openGroup = function (e) { e = e || {}; var t = document.createElementNS(r, "g"); return e.klass && t.setAttribute("class", e.klass), e.fill && t.setAttribute("fill", e.fill), e.stroke && t.setAttribute("stroke", e.stroke), e.prepend ? this.svg.insertBefore(t, this.svg.firstChild) : this.svg.appendChild(t), this.currentGroup = t, t }, n.prototype.closeGroup = function () { var g = this.currentGroup; return this.currentGroup = null, g }, n.prototype.path = function (e) { var t = document.createElementNS(r, "path"); for (var n in e) e.hasOwnProperty(n) && ("path" === n ? t.setAttributeNS(null, "d", e.path) : t.setAttributeNS(null, n, e[n])); return this.append(t), t }, n.prototype.pathToBack = function (e) { var t = document.createElementNS(r, "path"); for (var n in e) e.hasOwnProperty(n) && ("path" === n ? t.setAttributeNS(null, "d", e.path) : t.setAttributeNS(null, n, e[n])); return this.prepend(t), t }, n.prototype.append = function (e) { this.currentGroup ? this.currentGroup.appendChild(e) : this.svg.appendChild(e) }, n.prototype.prepend = function (e) { this.currentGroup ? this.currentGroup.appendChild(e) : this.svg.insertBefore(e, this.svg.firstChild) }, n.prototype.setAttributeOnElement = function (e, t) { for (var r in t) t.hasOwnProperty(r) && e.setAttributeNS(null, r, t[r]) }, n.prototype.moveElementToChild = function (e, t) { e.appendChild(t) }, e.exports = n }, function (e, t) { e.exports = function (text, e, t, r, n, o) { var c; this.rows = [], e && this.rows.push({ move: e }); var l = t.calc("textfont", "defined-text"); if ("" === text) this.rows.push({ move: 2 * l.attr["font-size"] }); else if ("string" == typeof text) this.rows.push({ move: l.attr["font-size"] / 2 }), this.rows.push({ left: r, text: text, font: "textfont", klass: "defined-text", anchor: "start", absElemType: "freeText" }), c = o.calc(text, "textfont", "defined-text"), this.rows.push({ move: c.height }); else for (var h = "textfont", d = !1, i = 0; i < text.length; i++) { h = text[i].font ? text[i].font : "textfont", text[i].center && (d = !0); var f = d ? "middle" : "start", m = d ? n / 2 : r; this.rows.push({ left: m, text: text[i].text, font: h, klass: "defined-text", anchor: f, absElemType: "freeText" }), c = o.calc(text[i].text, h, "defined-text"), this.rows.push({ move: c.height }) } } }, function (e, t) { e.exports = function (e, t, r) { this.rows = [], e && this.rows.push({ move: e }), this.rows.push({ separator: t }), r && this.rows.push({ move: r }) } }, function (e, t) { e.exports = function (e, t, text, r, n, o) { this.rows = [], e && this.rows.push({ move: e }); var c = t.titleleft ? "start" : "middle", l = t.titleleft ? n : r; this.rows.push({ left: l, text: text, font: "subtitlefont", klass: "text subtitle", anchor: c }); var h = o.calc(text, "subtitlefont", "text subtitle"); this.rows.push({ move: h.height }) } }, function (e, t) { function r(e, t, r, n, o, c, l, h) { if (this.rows = [], e.header && o) { var d = h.calc("X", "headerfont", "abcjs-header abcjs-meta-top").height; this.addTextIf(c, e.header.left, "headerfont", "header meta-top", -d, 0, "start", h), this.addTextIf(c + n / 2, e.header.center, "headerfont", "header meta-top", -d, null, "middle", h), this.addTextIf(c + n, e.header.right, "headerfont", "header meta-top", -d, null, "end", h) } o && this.rows.push({ move: l.top }); var f = t.titleleft ? "start" : "middle", m = t.titleleft ? c : c + n / 2; if (e.title && this.addTextIf(m, e.title, "titlefont", "title meta-top", l.title, 0, f, h, "title"), r[0] && r[0].subtitle && this.addTextIf(m, r[0].subtitle, "subtitlefont", "text meta-top subtitle", l.subtitle, 0, f, h, "subtitle"), e.rhythm || e.origin || e.composer) { if (this.rows.push({ move: l.composer }), e.rhythm && e.rhythm.length > 0) { var v = !(!e.composer && !e.origin); this.addTextIf(c, e.rhythm, "infofont", "meta-top rhythm", 0, null, "start", h, "rhythm", v) } var y = ""; e.composer && (y += e.composer), e.origin && (y += " (" + e.origin + ")"), y.length > 0 && this.addTextIf(c + n, y, "composerfont", "meta-top composer", 0, null, "end", h, "composer") } e.author && e.author.length > 0 && this.addTextIf(c + n, e.author, "composerfont", "meta-top author", 0, 0, "end", h, "author"), e.partOrder && e.partOrder.length > 0 && this.addTextIf(c, e.partOrder, "partsfont", "meta-top part-order", 0, 0, "start", h, "partOrder") } r.prototype.addTextIf = function (e, text, t, r, n, o, c, l, h, d) { if (text && (n && this.rows.push({ move: n }), this.rows.push({ left: e, text: text, font: t, klass: r, anchor: c, absElemType: h }), !d)) { var f = l.calc(text, t, r); this.rows.push({ move: f.height }), o && this.rows.push({ move: o }) } }, e.exports = r }, function (e, t) { function r(e, t, r, n, o, c) { this.rows = [], e.unalignedWords && e.unalignedWords.length > 0 && this.unalignedWords(e.unalignedWords, n, o, c), this.extraText(e, n, o, c), e.footer && r && this.footer(e.footer, t, n, c) } r.prototype.unalignedWords = function (e, t, r, n) { var o = "meta-bottom unaligned-words", c = "wordsfont"; this.rows.push({ startGroup: "unalignedWords", klass: "abcjs-meta-bottom abcjs-unaligned-words" }); var l = n.calc("i", c, o); this.rows.push({ move: r.words }); for (var h = 0; h < e.length; h++)if ("" === e[h]) this.rows.push({ move: l.height }); else if ("string" == typeof e[h]) this.addTextIf(t + 50, e[h], c, o, 0, 0, "start", n, null, !0); else { for (var d = 0, f = 0, m = 0; m < e[h].length; m++) { var v = e[h][m], y = v.font ? v.font : c; this.rows.push({ left: t + 50 + f, text: v.text, font: y, anchor: "start" }); var x = n.calc(v.text, c, o); d = Math.max(d, x.height), f += x.width, " " === v.text[v.text.length - 1] && (f += l.width) } this.rows.push({ move: d }) } this.rows.push({ move: 2 * l.height }), this.rows.push({ endGroup: "unalignedWords", absElemType: "unalignedWords" }) }, r.prototype.extraText = function (e, t, r, n) { var o = ""; e.book && (o += "Book: " + e.book + "\n"), e.source && (o += "Source: " + e.source + "\n"), e.discography && (o += "Discography: " + e.discography + "\n"), e.notes && (o += "Notes: " + e.notes + "\n"), e.transcription && (o += "Transcription: " + e.transcription + "\n"), e.history && (o += "History: " + e.history + "\n"), e["abc-copyright"] && (o += "Copyright: " + e["abc-copyright"] + "\n"), e["abc-creator"] && (o += "Creator: " + e["abc-creator"] + "\n"), e["abc-edited-by"] && (o += "Edited By: " + e["abc-edited-by"] + "\n"), o.length > 0 && this.addTextIf(t, o, "historyfont", "meta-bottom extra-text", r.info, 0, "start", n, "extraText") }, r.prototype.footer = function (footer, e, t, r) { var n = "header meta-bottom", o = "footerfont"; this.rows.push({ startGroup: "footer", klass: n }), this.addTextIf(t, footer.left, o, n, 0, 0, "start", r), this.addTextIf(t + e / 2, footer.center, o, n, 0, 0, "middle", r), this.addTextIf(t + e, footer.right, o, n, 0, 0, "end", r) }, r.prototype.addTextIf = function (e, text, t, r, n, o, c, l, h, d) { if (text) { n && this.rows.push({ move: n }); var f = { left: e, text: text, font: t, anchor: c }; h && (f.absElemType = h), d || (f.klass = r), this.rows.push(f); var m = l.calc("A", t, r), v = text.split("\n").length; "\n" === text[text.length - 1] && v--; var y = 1.1 * m.height * v; this.rows.push({ move: Math.round(y) }), o && this.rows.push({ move: o }) } }, e.exports = r }, function (e, t, r) { var n = r(9); function o(e) { "keyboard" === this.dragMechanism && 0 !== this.dragYStep && this.dragTarget && y.bind(this)(this.dragTarget, this.dragYStep, this.selectables.length, this.dragIndex, e), this.dragYStep = 0 } function c(e) { switch (e.keyCode) { case 38: case 40: e.preventDefault() } } function l(e) { var t = !1, r = e.target.dataset.index; switch (e.keyCode) { case 13: case 32: t = !0, this.dragTarget = this.selectables[r], this.dragIndex = r, this.dragMechanism = "keyboard", m.bind(this)(); break; case 38: t = !0, this.dragTarget = this.selectables[r], this.dragIndex = r, this.dragTarget.isDraggable && (this.dragging && this.dragTarget.isDraggable && this.dragTarget.absEl.highlight(void 0, this.dragColor), this.dragYStep--, this.dragTarget.svgEl.setAttribute("transform", "translate(0," + this.dragYStep * n.STEP + ")")); break; case 40: t = !0, this.dragTarget = this.selectables[r], this.dragIndex = r, this.dragMechanism = "keyboard", this.dragTarget.isDraggable && (this.dragging && this.dragTarget.isDraggable && this.dragTarget.absEl.highlight(void 0, this.dragColor), this.dragYStep++, this.dragTarget.svgEl.setAttribute("transform", "translate(0," + this.dragYStep * n.STEP + ")")); break; case 9: 0 !== this.dragYStep && m.bind(this)() }t && e.preventDefault() } function h(e, t) { var r, n, o, c = function (e, t) { for (var i = 0; i < e.length; i++)if (t === e[i].svgEl) return i; return -1 }(e.selectables, function (e) { if ("svg" === e.tagName) return e; for (var t = e.getAttribute("selectable"); !t;)t = "svg" === (e = e.parentElement).tagName || e.getAttribute("selectable"); return e }(t.target)); return c >= 0 ? (r = (o = function (e, t, r) { return e.x <= t.offsetX && e.x + e.width >= t.offsetX && e.y <= t.offsetY && e.y + e.height >= t.offsetY || Math.abs(t.layerY / r - t.offsetY) < 3 ? [t.offsetX, t.offsetY] : [t.layerX, t.layerY] }(e.selectables[c].svgEl.getBBox(), t, e.scale))[0], n = o[1]) : (o = function (e, svg) { var t, r, n = 1, o = 1; return svg.viewBox.baseVal && (0 !== svg.viewBox.baseVal.width && (n = svg.viewBox.baseVal.width / svg.clientWidth), 0 !== svg.viewBox.baseVal.height && (o = svg.viewBox.baseVal.height / svg.clientHeight)), "svg" === e.target.tagName ? (t = e.offsetX, r = e.offsetY) : (t = e.layerX, r = e.layerY), [t *= n, r *= o] }(t, e.renderer.paper.svg), c = function (e, t, r) { for (var n = 9999999, o = -1, i = 0; i < e.selectables.length && n > 0; i++) { var c = e.selectables[i]; if (e.getDim(c), c.dim.left < t && c.dim.right > t && c.dim.top < r && c.dim.bottom > r) o = i, n = 0; else if (c.dim.top < r && c.dim.bottom > r) { var l = Math.min(Math.abs(c.dim.left - t), Math.abs(c.dim.right - t)); l < n && (n = l, o = i) } else if (c.dim.left < t && c.dim.right > t) { var h = Math.min(Math.abs(c.dim.top - r), Math.abs(c.dim.bottom - r)); h < n && (n = h, o = i) } else { var d = Math.abs(t - c.dim.left) > Math.abs(t - c.dim.right) ? Math.abs(t - c.dim.right) : Math.abs(t - c.dim.left), f = Math.abs(r - c.dim.top) > Math.abs(r - c.dim.bottom) ? Math.abs(r - c.dim.bottom) : Math.abs(r - c.dim.top), m = Math.sqrt(d * d + f * f); m < n && (n = m, o = i) } } return o >= 0 && n <= 12 ? o : -1 }(e, r = o[0], n = o[1])), { x: r, y: n, clickedOn: c } } function d(e) { var t = h(this, e); t.clickedOn >= 0 && 0 === e.button && (this.dragTarget = this.selectables[t.clickedOn], this.dragIndex = t.clickedOn, this.dragMechanism = "mouse", this.dragMouseStart = { x: t.x, y: t.y }, this.dragging && this.dragTarget.isDraggable && (!function (svg, e) { if (svg) { var t = T(svg.svg); t[e] = !0, C(svg.svg, t) } }(this.renderer.paper, "abcjs-dragging-in-progress"), this.dragTarget.absEl.highlight(void 0, this.dragColor))) } function f(e) { if (this.dragTarget && this.dragging && this.dragTarget.isDraggable && "mouse" === this.dragMechanism) { var t = h(this, e), r = Math.round((t.y - this.dragMouseStart.y) / n.STEP); r !== this.dragYStep && (this.dragYStep = r, this.dragTarget.svgEl.setAttribute("transform", "translate(0," + r * n.STEP + ")")) } } function m(e) { this.dragTarget && (w.bind(this)(), this.dragTarget.absEl && this.dragTarget.absEl.highlight && (this.selected = [this.dragTarget.absEl], this.dragTarget.absEl.highlight(void 0, this.selectionColor)), y.bind(this)(this.dragTarget, this.dragYStep, this.selectables.length, this.dragIndex, e), this.dragTarget.svgEl && this.dragTarget.svgEl.focus && (this.dragTarget.svgEl.focus(), this.dragTarget = null, this.dragIndex = -1), function (svg, e) { if (svg) { var t = T(svg.svg); delete t[e], C(svg.svg, t) } }(this.renderer.svg, "abcjs-dragging-in-progress")) } function v(e) { e >= 0 && e < this.selectables.length && (this.dragTarget = this.selectables[e], this.dragIndex = e, this.dragMechanism = "keyboard", m.bind(this)()) } function y(e, t, r, n, o) { var c = []; if (e.absEl.elemset) { for (var l = {}, h = 0; h < e.absEl.elemset.length; h++) { var d = e.absEl.elemset[h]; if (d) for (var f = d.getAttribute("class").split(" "), m = 0; m < f.length; m++)l[f[m]] = !0 } for (var y = 0; y < Object.keys(l).length; y++)c.push(Object.keys(l)[y]) } for (var w = {}, k = 0; k < c.length; k++)x(c[k], "abcjs-v", w, "voice"), x(c[k], "abcjs-l", w, "line"), x(c[k], "abcjs-m", w, "measure"); e.staffPos && (w.staffPos = e.staffPos); for (var i = 0; i < this.listeners.length; i++)this.listeners[i](e.absEl.abcelem, e.absEl.tuneNumber, c.join(" "), w, { step: t, max: r, index: n, setSelection: v.bind(this) }, o) } function x(e, t, r, n) { if (0 === e.indexOf(t)) { var o = e.replace(t, ""), c = parseInt(o, 10); "" + c === o && (r[n] = c) } } function w() { for (var i = 0; i < this.selected.length; i++)this.selected[i].unhighlight(void 0, this.renderer.foregroundColor); this.selected = [] } function k(e, t) { w.bind(this)(); for (var line = 0; line < this.staffgroups.length; line++)for (var r = this.staffgroups[line].voices, n = 0; n < r.length; n++)for (var o = r[n].children, c = 0; c < o.length; c++) { var l = o[c].abcelem.startChar, h = o[c].abcelem.endChar; (t > l && e < h || t === e && t === h) && (this.selected[this.selected.length] = o[c], o[c].highlight(void 0, this.selectionColor)) } } function T(e) { var t = e.getAttribute("class"); t || (t = ""); for (var r = t.split(" "), n = {}, i = 0; i < r.length; i++)n[r[i]] = !0; return n } function C(e, t) { var r = []; for (var n in t) t.hasOwnProperty(n) && r.push(n); e.setAttribute("class", r.join(" ")) } e.exports = function (e) { if (e.rangeHighlight = k, e.dragging) for (var t = 0; t < e.selectables.length; t++) { var r = e.selectables[t]; r.selectable && (r.svgEl.setAttribute("tabindex", 0), r.svgEl.setAttribute("data-index", t), r.svgEl.addEventListener("keydown", c.bind(e)), r.svgEl.addEventListener("keyup", l.bind(e)), r.svgEl.addEventListener("focus", o.bind(e))) } e.renderer.paper.svg.addEventListener("mousedown", d.bind(e)), e.renderer.paper.svg.addEventListener("mousemove", f.bind(e)), e.renderer.paper.svg.addEventListener("mouseup", m.bind(e)) } }, function (e, t, r) { var n = r(243), o = r(246), c = r(247), l = r(249), h = function (e, t, r, n, o, h, f) { for (var m = l(e, n.getTextSize, n.voices, n.brace, n.bracket), v = r, y = 0; y < 8; y++) { var x = c(v, e, f, n, m); if (v = d(h, o.stretchlast, t + e.padding.left, n.w, v, x.spacingUnits, x.minSpace, e.padding.left + e.padding.right), f && console.log("setXSpace", y, n.w, v, n.minspace), null === v) break } !function (e) { for (var i = 0; i < e.length; i++)for (var t = e[i], r = 1; r < t.children.length - 1; r++) { var n = t.children[r]; if (n.abcelem.rest && ("whole" === n.abcelem.rest.type || "multimeasure" === n.abcelem.rest.type)) { var o = t.children[r - 1], c = t.children[r + 1]; n.center(o, c) } } }(n.voices) }; function d(e, t, r, n, o, c, l, h) { if (e) if (void 0 === t) { if (n / r < .66) return null } else if (!(1 - (n + h) / r < t)) return null; return Math.abs(r - n) < 2 ? null : c > 0 ? ((o = (r - (n - c * o)) / c) * l > 50 && (o = 50 / l), o) : null } e.exports = function (e, t, r, c) { var i, l, d = r; for (i = 0; i < t.lines.length; i++)(l = t.lines[i]).staff && (h(e, r, c, l.staffGroup, t.formatting, i === t.lines.length - 1, !1), l.staffGroup.w > d && (d = l.staffGroup.w)); for (i = 0; i < t.lines.length; i++)if ((l = t.lines[i]).staffGroup && l.staffGroup.voices) { for (var f = 0; f < l.staffGroup.voices.length; f++)n(l.staffGroup.voices[f]); o(e, l.staffGroup) } for (i = 0; i < t.lines.length; i++)(l = t.lines[i]).staffGroup && l.staffGroup.setHeight(); return d } }, function (e, t, r) { var n = r(244), o = r(100), c = r(245); function l(e) { for (var t = 0; t < e.elems.length; t++) { var r = e.elems[t]; if (r.top) for (var n = f(r, e), i = 0; i < r.children.length; i++) { var o = r.children[i]; if ("ornament" === o.klass && o.bottom - 1.5 < n) { var c = n - o.bottom + 1.5; o.bottom += c, o.top += c, o.pitch += c, n = r.top = o.top } } } } function h(e, t) { var r = t.getChordDim(); if (r) { for (var i = 0; i < e.length; i++) { if (e[i] < r.left) return i > 0 && t.putChordInLane(i), void (e[i] = r.right) } e.push(r.right), t.putChordInLane(e.length - 1) } } function d(e) { for (var t = 0, r = 0; r < e.children.length; r++) { e.children[r].chordHeightBelow && t++ } return t } function f(element, e) { return e = e.beams[0], o(e.startX, e.startY, e.endX, e.endY, element.x) } e.exports = function (e) { for (var i = 0; i < e.beams.length; i++)if ("BeamElem" === e.beams[i].type) { n(e.beams[i]), l(e.beams[i]); for (var t = 0; t < e.beams[i].elems.length; t++)e.adjustRange(e.beams[i].elems[t]) } for (e.staff.specialY.chordLines = function (e) { var i, t, r, n = [0], o = [0]; for (i = 0; i < e.length; i++) { for (t = 0; t < e[i].children.length; t++)(r = e[i].children[t]).chordHeightAbove && h(n, r); for (t = e[i].children.length - 1; t >= 0; t--)(r = e[i].children[t]).chordHeightBelow && h(o, r) } (n.length > 1 || o.length > 1) && function (e, t, r) { for (var i = 0; i < e.length; i++) { d(e[i]); for (var n = 0; n < e[i].children.length; n++) { var o = e[i].children[n]; o.chordHeightAbove && o.invertLane(t) } } }(e, n.length, o.length); return { above: n.length, below: o.length } }(e.children), i = 0; i < e.otherchildren.length; i++) { var r = e.otherchildren[i]; "TripletElem" === r.type && (c(r), e.adjustRange(r)) } e.staff.top = Math.max(e.staff.top, e.top), e.staff.bottom = Math.min(e.staff.bottom, e.bottom) } }, function (e, t, r) { var n = r(22), o = r(9), c = r(100), l = function (e) { return void 0 === e ? 0 : Math.floor(Math.log(e) / Math.log(2)) }; function h(element, e, t, r) { if (!element.children) return r; for (var i = 0; i < element.children.length; i++) { var n = element.children[i]; e && void 0 !== n.top && "flags.ugrace" === n.c ? r = Math.max(r, n.top - t) : e || void 0 === n.bottom || "flags.ugrace" !== n.c || (r = Math.max(r, t - n.bottom + 7)) } return r } function d(e, t, r) { var n = t.heads[e ? 0 : t.heads.length - 1], o = r.heads[e ? 0 : r.heads.length - 1], c = n.x; e && (c += n.w - .6); var l = o.x; return [c, l += e ? o.w : .6] } e.exports = function (e) { if (0 !== e.elems.length && !e.allrests) { var t = function (e, t) { var r = e ? o.STEP : -o.STEP; t && (r *= .4); return r }(e.stemsUp, e.isgrace), r = e.elems[0], f = e.elems[e.elems.length - 1], m = 0, v = e.stemsUp ? r.abcelem.maxpitch : r.abcelem.minpitch; m = h(r, e.stemsUp, v, m), m = h(f, e.stemsUp, v, m), m = Math.max(e.stemHeight, m + 3); var y = function (e, t, r, n, o, c, l, h, d, f) { var m = r - 2, v = r - 2, y = Math.round(n ? Math.max(e + m, d + v) : Math.min(e - m, h - v)), x = function (e, t, r, n) { if (n) return 0; var o = e - t, c = r / 2; o > c && (o = c); o < -c && (o = -c); return o }(o, c, t, l), w = y + Math.floor(x / 2), k = y + Math.floor(-x / 2); f || (n && y < 6 || !n && y > 6) && (w = 6, k = 6); return [w, k] }(e.average, e.elems.length, m, e.stemsUp, r.abcelem.averagepitch, f.abcelem.averagepitch, e.isflat, e.min, e.max, e.isgrace), x = d(e.stemsUp, r, f); e.addBeam({ startX: x[0], endX: x[1], startY: y[0], endY: y[1], dy: t }); for (var w = function (e, t, r, n, o) { for (var h = [], f = [], i = 0; i < e.length; i++) { var m = e[i]; if (!m.abcelem.rest) { var v = m.heads[t ? 0 : m.heads.length - 1], y = v.x + (t ? v.w : 0), x = c(r.startX, r.startY, r.endX, r.endY, y), w = t ? -1.5 : 1.5; n && (w = 2 * w / 3); var k = m.abcelem.duration; 0 === k && (k = .25); for (var T = l(k); T < -3; T++) { var C = -4 - T; if (f[C] ? f[C].single = !1 : f[C] = { x: y + (t ? -.6 : 0), y: x + w * (C + 1), durlog: T, single: !0 }, i > 0 && m.abcelem.beambr && m.abcelem.beambr <= C + 1) { f[C].split || (f[C].split = [f[C].x]); var A = d(t, e[i - 1], m); f[C].split[f[C].split.length - 1] >= A[0] && (A[0] += m.w), f[C].split.push(A[0]), f[C].split.push(A[1]) } } for (var S = f.length - 1; S >= 0; S--)if (i === e.length - 1 || l(e[i + 1].abcelem.duration) > -S - 4) { var _ = y, E = x + w * (S + 1); f[S].single && (_ = 0 === i ? y + 5 : y - 5, E = c(r.startX, r.startY, r.endX, r.endY, _) + w * (S + 1)); var b = { startX: f[S].x, endX: _, startY: f[S].y, endY: E, dy: o }; if (void 0 !== f[S].split) { var M = f[S].split; b.endX <= M[M.length - 1] && (M[M.length - 1] -= m.w), M.push(b.endX), b.split = f[S].split } h.push(b), f = f.slice(0, S) } } } return h }(e.elems, e.stemsUp, e.beams[0], e.isgrace, t), i = 0; i < w.length; i++)e.addBeam(w[i]); !function (e, t, r, l, h) { for (var i = 0; i < e.length; i++) { var d = e[i]; if (!d.abcelem.rest) { var f = !d.addExtra, m = f ? h : d, v = d.heads[t ? 0 : d.heads.length - 1], y = .2, x = v.pitch + (t ? y : -y), w = t ? v.w : 0, k = v.x + w, T = c(r.startX, r.startY, r.endX, r.endY, k), C = t ? -.6 : .6; t || (T -= l / 2 / o.STEP), f && (w += d.heads[0].dx), "noteheads.slash.quarter" === v.c && (t ? x += 1 : x -= 1); var A = new n(null, w, 0, x, { type: "stem", pitch2: T, linewidth: C }); A.setX(m.x), m.addRight(A) } } }(e.elems, e.stemsUp, e.beams[0], t, e.mainNote) } } }, function (e, t, r) { var n = r(100); function o(e) { return e.stemsUp } e.exports = function (element) { if (element.anchor1 && element.anchor2) { element.hasBeam = !!element.anchor1.parent.beam && element.anchor1.parent.beam === element.anchor2.parent.beam; var e = element.anchor1.parent.beam; if (!element.hasBeam || e.elems[0] === element.anchor1.parent && e.elems[e.elems.length - 1] === element.anchor2.parent || (element.hasBeam = !1), element.hasBeam) { var t = o(e) ? element.anchor1.x + element.anchor1.w : element.anchor1.x; element.yTextPos = function (e, t, r) { if (0 === r.beams.length) return 0; r = r.beams[0]; var o = e + (t - e) / 2; return n(r.startX, r.startY, r.endX, r.endY, o) }(t, element.anchor2.x, e), element.yTextPos += o(e) ? 3 : -2, element.xTextPos = (c = t, l = element.anchor2.x, c + (l - c) / 2), element.top = element.yTextPos + 1, element.bottom = element.yTextPos - 2, o(e) && (element.endingHeightAbove = 4) } else { element.startNote = Math.max(element.anchor1.parent.top, 9) + 4, element.endNote = Math.max(element.anchor2.parent.top, 9) + 4, "rest" === element.anchor1.parent.type && "rest" !== element.anchor2.parent.type ? element.startNote = element.endNote : "rest" === element.anchor2.parent.type && "rest" !== element.anchor1.parent.type && (element.endNote = element.startNote); for (var r = 0, i = 0; i < element.middleElems.length; i++)r = Math.max(r, element.middleElems[i].top); ((r += 4) > element.startNote || r > element.endNote) && (element.startNote = r, element.endNote = r), element.flatBeams && (element.startNote = Math.max(element.startNote, element.endNote), element.endNote = Math.max(element.startNote, element.endNote)), element.yTextPos = element.startNote + (element.endNote - element.startNote) / 2, element.xTextPos = element.anchor1.x + (element.anchor2.x + element.anchor2.w - element.anchor1.x) / 2, element.top = element.yTextPos + 1 } } var c, l; delete element.middleElems, delete element.flatBeams } }, function (e, t, r) { var n = r(9), o = 1; function c(e, t, r, n) { if (e.specialY[r]) { var c = e.specialY[r]; n && (c *= n), e.top += c + o, t[r] = e.top } } function l(e, t, r) { var i, n; for (i = 0; i < t.children.length; i++)h(e, n = t.children[i], r); for (i = 0; i < t.otherchildren.length; i++)switch ((n = t.otherchildren[i]).type) { case "CrescendoElem": d(e, n); break; case "DynamicDecoration": f(e, n); break; case "EndingElem": m(e, n) } } function h(e, element, t) { for (var i = 0; i < element.children.length; i++) { var r = element.children[i]; for (var n in element.specialY) element.specialY.hasOwnProperty(n) && r[n] && (r.pitch = e[n], void 0 === r.top && ("TempoElement" === r.type ? v(e, r) : y(e, r, t), element.pushTop(r.top), element.pushBottom(r.bottom))) } } function d(e, element) { element.dynamicHeightAbove ? element.pitch = e.dynamicHeightAbove : element.pitch = e.dynamicHeightBelow } function f(e, element) { element.volumeHeightAbove ? element.pitch = e.volumeHeightAbove : element.pitch = e.volumeHeightBelow } function m(e, element) { element.pitch = e.endingHeightAbove - 2 } function v(e, element) { if (element.pitch = e.tempoHeightAbove, element.top = e.tempoHeightAbove, element.bottom = e.tempoHeightAbove, element.note) { var t = element.pitch - element.totalHeightInPitches + 1; element.note.top = t, element.note.bottom = t; for (var i = 0; i < element.note.children.length; i++) { var r = element.note.children[i]; r.top += t, r.bottom += t, r.pitch += t, void 0 !== r.pitch2 && (r.pitch2 += t) } } } function y(e, element, t) { switch (element.type) { case "part": element.top = e.partHeightAbove + element.height, element.bottom = e.partHeightAbove; break; case "text": case "chord": element.chordHeightAbove ? (element.top = e.chordHeightAbove, element.bottom = e.chordHeightAbove) : (element.top = e.chordHeightBelow, element.bottom = e.chordHeightBelow); break; case "lyric": element.lyricHeightAbove ? (element.top = e.lyricHeightAbove, element.bottom = e.lyricHeightAbove) : (element.top = e.lyricHeightBelow + t.vocal / n.STEP, element.bottom = e.lyricHeightBelow + t.vocal / n.STEP, element.pitch -= t.vocal / n.STEP); break; case "debug": element.top = e.chordHeightAbove, element.bottom = e.chordHeightAbove }void 0 !== element.pitch && void 0 !== element.top || console.error("RelativeElement position not set.", element.type, element.pitch, element.top, e) } e.exports = function (e, t) { for (var r, i = 0; i < t.staffs.length; i++) { var h = t.staffs[i], d = { tempoHeightAbove: 0, partHeightAbove: 0, volumeHeightAbove: 0, dynamicHeightAbove: 0, endingHeightAbove: 0, chordHeightAbove: 0, lyricHeightAbove: 0, lyricHeightBelow: 0, chordHeightBelow: 0, volumeHeightBelow: 0, dynamicHeightBelow: 0 }; if (e.showDebug && e.showDebug.indexOf("box") >= 0 && (h.originalTop = h.top, h.originalBottom = h.bottom), c(h, d, "lyricHeightAbove"), c(h, d, "chordHeightAbove", h.specialY.chordLines.above), h.specialY.endingHeightAbove && (h.specialY.chordHeightAbove ? h.top += 2 : h.top += h.specialY.endingHeightAbove + o, d.endingHeightAbove = h.top), h.specialY.dynamicHeightAbove && h.specialY.volumeHeightAbove ? (h.top += Math.max(h.specialY.dynamicHeightAbove, h.specialY.volumeHeightAbove) + o, d.dynamicHeightAbove = h.top, d.volumeHeightAbove = h.top) : (c(h, d, "dynamicHeightAbove"), c(h, d, "volumeHeightAbove")), c(h, d, "partHeightAbove"), c(h, d, "tempoHeightAbove"), h.specialY.lyricHeightBelow && (h.specialY.lyricHeightBelow += e.spacing.vocal / n.STEP, d.lyricHeightBelow = h.bottom, h.bottom -= h.specialY.lyricHeightBelow + o), h.specialY.chordHeightBelow) { d.chordHeightBelow = h.bottom; var f = h.specialY.chordHeightBelow; h.specialY.chordLines.below && (f *= h.specialY.chordLines.below), h.bottom -= f + o } h.specialY.volumeHeightBelow && h.specialY.dynamicHeightBelow ? (d.volumeHeightBelow = h.bottom, d.dynamicHeightBelow = h.bottom, h.bottom -= Math.max(h.specialY.volumeHeightBelow, h.specialY.dynamicHeightBelow) + o) : h.specialY.volumeHeightBelow ? (d.volumeHeightBelow = h.bottom, h.bottom -= h.specialY.volumeHeightBelow + o) : h.specialY.dynamicHeightBelow && (d.dynamicHeightBelow = h.bottom, h.bottom -= h.specialY.dynamicHeightBelow + o), e.showDebug && e.showDebug.indexOf("box") >= 0 && (h.positionY = d); for (var m = 0; m < h.voices.length; m++) { l(d, t.voices[h.voices[m]], e.spacing) } if (void 0 !== r) { var v = r + (h.top - 10), y = e.spacing.systemStaffSeparation / n.STEP - v; y > 0 && (h.top += y) } r = 2 - h.bottom } } }, function (e, t, r) { var n = r(248); function o(e) { for (var i = 0; i < e.length; i++)if (!n.layoutEnded(e[i])) return !1; return !0 } function c(element) { return element.durationindex - (element.children[element.i] && element.children[element.i].duration > 0 ? 0 : 5e-7) } e.exports = function (e, t, r, l, h) { var i, d = 0, f = 1e3, m = h; l.startx = m; var v = 0; for (r && console.log("init layout", e), i = 0; i < l.voices.length; i++)n.beginLayout(m, l.voices[i]); for (var y = 0; !o(l.voices);) { for (v = null, i = 0; i < l.voices.length; i++)n.layoutEnded(l.voices[i]) || v && !(c(l.voices[i]) < v) || (v = c(l.voices[i])); var x = [], w = []; for (i = 0; i < l.voices.length; i++) { c(l.voices[i]) - v > 1e-7 ? w.push(l.voices[i]) : x.push(l.voices[i]) } y = 0; var k = 0; for (i = 0; i < x.length; i++)n.getNextX(x[i]) > m && (m = n.getNextX(x[i]), y = n.getSpacingUnits(x[i]), k = x[i].spacingduration); for (d += y, f = Math.min(f, y), r && console.log("currentduration: ", v, d, f), i = 0; i < x.length; i++) { var T = n.layoutOneItem(m, e, x[i], t.minPadding), C = T - m; if (C > 0) { m = T; for (var A = 0; A < i; A++)n.shiftRight(C, x[A]) } } for (i = 0; i < w.length; i++)w[i].spacingduration -= k, n.updateNextX(m, e, w[i]); for (i = 0; i < x.length; i++) { var S = x[i]; n.updateIndices(S) } } for (i = 0; i < l.voices.length; i++)n.getNextX(l.voices[i]) > m && (m = n.getNextX(l.voices[i]), y = n.getSpacingUnits(l.voices[i])); return d += y, l.setWidth(m), { spacingUnits: d, minSpace: f } } }, function (e, t) { var r = function () { }; r.beginLayout = function (e, t) { t.i = 0, t.durationindex = 0, t.startx = e, t.minx = e, t.nextx = e, t.spacingduration = 0 }, r.layoutEnded = function (e) { return e.i >= e.children.length }, r.getNextX = function (e) { return Math.max(e.minx, e.nextx) }, r.getSpacingUnits = function (e) { return Math.sqrt(8 * e.spacingduration) }, r.layoutOneItem = function (e, t, r, n) { var o = r.children[r.i]; if (!o) return 0; var c = e - r.minx, l = function (e, t) { var r = 0; "note" !== e.type && "bar" !== e.type || (r = t); return -e.extraw + r }(o, r.durationindex + o.duration > 0 ? n : 0); return c < l && (0 === r.i || "bar" !== o.type || "part" !== r.children[r.i - 1].type && "tempo" !== r.children[r.i - 1].type) && (e += l - c), o.setX(e), r.spacingduration = o.duration, r.minx = e + function (e) { return e.w }(o), r.i !== r.children.length - 1 && (r.minx += o.minspacing), this.updateNextX(e, t, r), e }, r.shiftRight = function (e, t) { var r = t.children[t.i]; r && (r.setX(r.x + e), t.minx += e, t.nextx += e) }, r.updateNextX = function (e, t, r) { r.nextx = e + t * Math.sqrt(8 * r.spacingduration) }, r.updateIndices = function (e) { this.layoutEnded(e) || (e.durationindex += e.children[e.i].duration, "bar" === e.children[e.i].type && (e.durationindex = Math.round(64 * e.durationindex) / 64), e.i++) }, e.exports = r }, function (e, t) { function r(e, t, r) { if (t) for (var i = 0; i < t.length; i++)if (t[i].header) { var n = r.calc(t[i].header, "voicefont", ""); e = Math.max(e, n.width) } return e } function n(e, t, r) { if (e) for (var i = 0; i < e.length; i++)o(t, e[i]), r = Math.max(r, e[i].getWidth()); return r } function o(e, element) { element.x = e } e.exports = function (e, t, o, c, l) { var i, h, d = e.padding.left, f = 0; for (i = 0; i < o.length; i++)o[i].header && (h = t.calc(o[i].header, "voicefont", ""), f = Math.max(f, h.width)); f = r(f, c, t), (f = r(f, l, t)) && (f += t.calc("A", "voicefont", "").width); var m = 0; return m = n(c, d += f, m), d + (m = n(l, d, m)) } }, function (e, t) { var r = function (e) { this.shouldAddClasses = e.shouldAddClasses, this.reset() }; r.prototype.reset = function () { this.lineNumber = null, this.voiceNumber = null, this.measureNumber = null, this.measureTotalPerLine = [], this.noteNumber = null }, r.prototype.incrLine = function () { null === this.lineNumber ? this.lineNumber = 0 : this.lineNumber++, this.voiceNumber = null, this.measureNumber = null, this.noteNumber = null }, r.prototype.incrVoice = function () { null === this.voiceNumber ? this.voiceNumber = 0 : this.voiceNumber++, this.measureNumber = null, this.noteNumber = null }, r.prototype.isInMeasure = function () { return null !== this.measureNumber }, r.prototype.newMeasure = function () { this.measureNumber && (this.measureTotalPerLine[this.lineNumber] = this.measureNumber), this.measureNumber = null, this.noteNumber = null }, r.prototype.startMeasure = function () { this.measureNumber = 0, this.noteNumber = 0 }, r.prototype.incrMeasure = function () { this.measureNumber++, this.noteNumber = 0 }, r.prototype.incrNote = function () { this.noteNumber++ }, r.prototype.measureTotal = function () { for (var e = 0, i = 0; i < this.lineNumber; i++)e += this.measureTotalPerLine[i] ? this.measureTotalPerLine[i] : 0; return this.measureNumber && (e += this.measureNumber), e }, r.prototype.getCurrent = function (e) { return { line: this.lineNumber, measure: this.measureNumber, measureTotal: this.measureTotal(), voice: this.voiceNumber, note: this.noteNumber } }, r.prototype.generate = function (e) { if (!this.shouldAddClasses) return ""; var t = []; if (e && e.length > 0 && t.push(e), null !== this.lineNumber && t.push("l" + this.lineNumber), null !== this.measureNumber && t.push("m" + this.measureNumber), null !== this.measureNumber && t.push("mm" + this.measureTotal()), null !== this.voiceNumber && t.push("v" + this.voiceNumber), e && (e.indexOf("note") >= 0 || e.indexOf("rest") >= 0 || e.indexOf("lyric") >= 0) && null !== this.noteNumber && t.push("n" + this.noteNumber), t.length > 0) { t = (t = t.join(" ")).split(" "); for (var i = 0; i < t.length; i++)0 !== t[i].indexOf("abcjs-") && t[i].length > 0 && (t[i] = "abcjs-" + t[i]) } return t.join(" ") }, e.exports = r }, function (e, t) { var r = function (e, t) { this.formatting = e, this.classes = t }; r.prototype.updateFonts = function (e) { e.gchordfont && (this.formatting.gchordfont = e.gchordfont), e.tripletfont && (this.formatting.tripletfont = e.tripletfont), e.annotationfont && (this.formatting.annotationfont = e.annotationfont), e.vocalfont && (this.formatting.vocalfont = e.vocalfont) }, r.prototype.calc = function (e, t) { var r; r = "string" == typeof e ? (r = this.formatting[e]) ? { face: r.face, size: Math.round(4 * r.size / 3), decoration: r.decoration, style: r.style, weight: r.weight, box: r.box } : { face: "Arial", size: Math.round(16), decoration: "underline", style: "normal", weight: "normal" } : { face: e.face, size: Math.round(4 * e.size / 3), decoration: e.decoration, style: e.style, weight: e.weight, box: e.box }; var n = this.formatting.fontboxpadding ? this.formatting.fontboxpadding : .1; return r.padding = r.size * n, { font: r, attr: { "font-size": r.size, "font-style": r.style, "font-family": r.face, "font-weight": r.weight, "text-decoration": r.decoration, class: this.classes.generate(t) } } }, e.exports = r }, function (e, t) { var r = function (e, svg) { this.getFontAndAttr = e, this.svg = svg }; r.prototype.updateFonts = function (e) { this.getFontAndAttr.updateFonts(e) }, r.prototype.attr = function (e, t) { return this.getFontAndAttr.calc(e, t) }, r.prototype.calc = function (text, e, t, r) { var n; n = "string" == typeof e ? this.attr(e, t) : { font: { face: e.face, size: e.size, decoration: e.decoration, style: e.style, weight: e.weight }, attr: { "font-size": e.size, "font-style": e.style, "font-family": e.face, "font-weight": e.weight, "text-decoration": e.decoration, class: this.getFontAndAttr.classes.generate(t) } }; var o = this.svg.getTextSize(text, n.attr, r); return n.font.box ? { height: o.height + 4 * n.font.padding, width: o.width + 4 * n.font.padding } : o }, r.prototype.baselineToCenter = function (text, e, t, r, n) { return .5 * this.calc(text, e, t).height + (n - r - 2) * this.attr(e, t).font.size }, e.exports = r }, function (e, t, r) { var n = r(254), o = r(267), c = r(268), l = r(9), h = r(270); function d(e, t, r) { n(e, t, r); var o = t.height * l.STEP; return e.y += o, t } function f(e, t, r, n) { var o = -(r.staffs[r.staffs.length - 1].bottom - 2), c = (n.staffs[0].top - 10 + o) * l.STEP; c < t && e.moveY(t - c) } e.exports = function (e, t, r, n, l, m, v, y, x) { var w = new h(e.paper, y, x); e.moveY(e.padding.top), c(e, r.topText, w), e.moveY(e.spacing.music); for (var k = [], line = 0; line < r.lines.length; line++) { t.incrLine(); var T = r.lines[line]; if (T.staff) { T.vskip && e.moveY(T.vskip), k.length >= 1 && f(e, e.spacing.staffSeparation, k[k.length - 1], T.staffGroup); var C = d(e, T.staffGroup, w); C.line = line, k.push(C) } else T.nonMusic && c(e, T.nonMusic, w) } return t.reset(), e.moveY(24), c(e, r.bottomText, w), o(e, l, v, m), { staffgroups: k, selectables: w.getElements() } } }, function (e, t, r) { var n = r(9), o = r(255), c = r(256), l = r(265), h = r(266), d = r(150); function f(e, t, r, c, l) { if (r) for (var i = 0; i < r.length; i++)r[i].isStartVoice(c) && (r[i].startY = t - 10 * n.STEP, r[i].elemset = o(e, r[i], l)) } function m(e, t, r) { for (var i = 0; i < r.length; i++)for (var o = t[r[i]].children, c = 0; c < o.length; c++) { var l = o[c], d = l.getFixedCoords(); if (!l.invisible && void 0 !== d.t && void 0 !== d.b) { var f = (d.t - d.b) * n.STEP; h(e, { x: d.x, y: e.calcY(d.t), width: d.w, height: f, fill: "#88e888", "fill-opacity": .4, stroke: "#4aa93d", "stroke-opacity": .8 }); for (var m = 0; m < l.children.length; m++) { var v = l.children[m], y = v.getChordDim(); if (y) { var x = e.calcY(v.pitch); x += v.dim.font.size * v.getLane(), h(e, { x: y.left, y: x, width: y.right - y.left, height: v.dim.font.size, fill: "none", stroke: "#4aa93d", "stroke-opacity": .8 }) } } } } } e.exports = function (e, t, r) { var o; !function (e, t) { var r = Math.round(e.y); e.paper.pathToBack({ path: "M 0 " + r + " L 0 0", stroke: "none", fill: "none", "stroke-opacity": 0, "fill-opacity": 0, class: e.controller.classes.generate(t), "data-vertical": r }) }(e, "abcjs-top-of-system"); for (var v, y, x = e.y, w = 0; w < t.staffs.length; w++) { var k = t.staffs[w]; e.moveY(n.STEP, k.top), k.absoluteY = e.y, e.showDebug && (e.showDebug.indexOf("box") >= 0 && m(e, t.voices, k.voices), e.showDebug.indexOf("grid") >= 0 && (e.paper.dottedLine({ x1: e.padding.left, x2: e.padding.left + e.controller.width, y1: x, y2: x, stroke: "#0000ff" }), h(e, { x: e.padding.left, y: e.calcY(k.originalTop), width: e.controller.width, height: e.calcY(k.originalBottom) - e.calcY(k.originalTop), fill: e.foregroundColor, stroke: e.foregroundColor, "fill-opacity": .1, "stroke-opacity": .1 }), o = 0, A(k, "chordHeightAbove"), A(k, "chordHeightBelow"), A(k, "dynamicHeightAbove"), A(k, "dynamicHeightBelow"), A(k, "endingHeightAbove"), A(k, "lyricHeightAbove"), A(k, "lyricHeightBelow"), A(k, "partHeightAbove"), A(k, "tempoHeightAbove"), A(k, "volumeHeightAbove"), A(k, "volumeHeightBelow"))), e.moveY(n.STEP, -k.bottom), e.showDebug && e.showDebug.indexOf("grid") >= 0 && e.paper.dottedLine({ x1: e.padding.left, x2: e.padding.left + e.controller.width, y1: e.y, y2: e.y, stroke: "#0000aa" }) } for (var T = 0, i = 0; i < t.voices.length; i++) { var C = t.voices[i].staff; e.y = C.absoluteY, e.controller.classes.incrVoice(), t.voices[i].duplicate || (v || (v = e.calcY(10)), y = e.calcY(2), 0 !== C.lines && (e.controller.classes.newMeasure(), l(e, t.startx, t.w, C.lines)), f(e, C.absoluteY, t.brace, i, r), f(e, C.absoluteY, t.bracket, i, r)), c(e, t.voices[i], T, r, { top: x, zero: e.y, height: t.height * n.STEP }), e.controller.classes.newMeasure(), t.voices[i].duplicate || (T = e.calcY(2)) } function A(t, r) { var c = ["rgb(207,27,36)", "rgb(168,214,80)", "rgb(110,161,224)", "rgb(191,119,218)", "rgb(195,30,151)", "rgb(31,170,177)", "rgb(220,166,142)"]; if (t.positionY[r]) { var l = t.specialY[r] * n.STEP; "chordHeightAbove" === r && t.specialY.chordLines && t.specialY.chordLines.above && (l *= t.specialY.chordLines.above), "chordHeightBelow" === r && t.specialY.chordLines && t.specialY.chordLines.below && (l *= t.specialY.chordLines.below), h(e, { x: e.padding.left, y: e.calcY(t.positionY[r]), width: e.controller.width, height: l, fill: c[o], stroke: c[o], "fill-opacity": .4, "stroke-opacity": .4 }, r.substr(0, 4)), (o += 1) > 6 && (o = 0) } } e.controller.classes.newMeasure(), t.staffs.length > 1 && d(e, t.startx, .6, v, y), e.y = x } }, function (e, t, r) { var n = r(50), o = r(9), c = r(30); function l(e, t, r, o) { return n("M %f %f C %f %f %f %f %f %f C %f %f %f %f %f %f z", e + r[0], t + o[0], e + r[1], t + o[1], e + r[2], t + o[2], e + r[3], t + o[3], e + r[4], t + o[4], e + r[5], t + o[5], e + r[6], t + o[6]) } var h = function (e, t, r, h, d, header, f) { var m; if (header) { e.paper.openGroup({ klass: e.controller.classes.generate("staff-extra voice-name") }); var v = r + (h - r) / 2; v -= e.controller.getTextSize.baselineToCenter(header, "voicefont", "staff-extra voice-name", 0, 1), c(e, { x: e.padding.left, y: v, text: header, type: "voicefont", klass: "staff-extra voice-name", anchor: "start", centerVertically: !0 }) } return "brace" === d ? m = function (e, t, r, n, o) { var c = n - r, h = l(t, r, [7.5, -8, 21, 0, 18.5, -10.5, 7.5], [0, c / 5.5, c / 3.14, c / 2, c / 2.93, c / 4.88, 0]); return h += l(t, r, [0, 17.5, -7.5, 6.6, -5, 20, 0], [c / 2, c / 1.46, c / 1.22, c, c / 1.19, c / 1.42, c / 2]), e.paper.path({ path: h, stroke: e.foregroundColor, fill: e.foregroundColor, class: e.controller.classes.generate(o) }) }(e, t, r, h, d) : "bracket" === d && (m = function (e, t, r, c, l) { t += o.STEP; var h = .75 * o.STEP, d = .75 * o.STEP, f = c - r, m = n("M %f %f l %f %f l %f %f l %f %f z", t, r - d, 0, f + 2 * d, h, 0, 0, -(f + 2 * d)), v = 2 * o.STEP, y = o.STEP; return m += n("M %f %f q %f %f %f %f q %f %f %f %f z", t + h, r - d, .6 * v, .2 * y, v, -y, .1 * -v, .3 * y, -v, y + o.STEP), m += n("M %f %f q %f %f %f %f q %f %f %f %f z", t + h, r + d + f, .6 * v, .2 * -y, v, y, .1 * -v, .3 * -y, -v, -y - o.STEP), e.paper.path({ path: m, stroke: e.foregroundColor, fill: e.foregroundColor, class: e.controller.classes.generate(l) }) }(e, t, r, h, d)), header && (m = e.paper.closeGroup()), f.wrapSvgEl({ el_type: d, startChar: -1, endChar: -1 }, m), m }; e.exports = function (e, t, r) { var n = t.startVoice.staff.absoluteY - 10 * o.STEP; return t.endVoice && t.endVoice.staff ? t.endY = t.endVoice.staff.absoluteY - 2 * o.STEP : t.lastContinuedVoice && t.lastContinuedVoice.staff ? t.endY = t.lastContinuedVoice.staff.absoluteY - 2 * o.STEP : t.endY = t.startVoice.staff.absoluteY - 2 * o.STEP, h(e, t.x, n, t.endY, t.type, t.header, r) } }, function (e, t, r) { var n = r(257), o = r(258), c = r(259), l = r(260), h = r(261), d = r(262), f = r(30), m = r(263); function v(e) { return "rest" === e.type && !(!e.abcelem || !e.abcelem.rest || "spacer" === e.abcelem.rest.type) } e.exports = function (e, t, r, y, x) { var i, w, k = t.w - 1; if (e.staffbottom = t.staff.bottom, t.header) { var T = f(e, { x: e.padding.left, y: e.calcY(t.headerPosition), text: t.header, type: "voicefont", klass: "staff-extra voice-name", anchor: "start", centerVertically: !0 }); y.wrapSvgEl({ el_type: "voiceName", startChar: -1, endChar: -1, text: t.header }, T) } var C = !1; for (i = 0; i < t.children.length; i++) { "note" !== (w = t.children[i]).type && "rest" !== w.type || (C = !0); var A = !1; "staff-extra" === w.type || e.controller.classes.isInMeasure() || (e.controller.classes.startMeasure(), A = !0), w.type, m(e, w, t.barto || i === t.children.length - 1 ? r : 0, y, x), ("note" === w.type || v(w)) && e.controller.classes.incrNote(), "bar" === w.type && !A && C && e.controller.classes.incrMeasure() } for (e.controller.classes.startMeasure(), i = 0; i < t.beams.length; i++) { var S = t.beams[i]; "bar" === S ? e.controller.classes.incrMeasure() : d(e, S, y) } for (e.controller.classes.startMeasure(), i = 0; i < t.otherchildren.length; i++)if ("bar" === (w = t.otherchildren[i])) e.controller.classes.incrMeasure(); else switch (w.type) { case "CrescendoElem": w.elemset = n(e, w, y); break; case "DynamicDecoration": w.elemset = o(e, w, y); break; case "TripletElem": c(e, w, y); break; case "EndingElem": w.elemset = l(e, w, t.startx + 10, k, y); break; case "TieElem": w.elemset = h(e, w, t.startx + 10, k, y); break; default: console.log(w), m(e, w, t.startx + 10, k, y, x) } } }, function (e, t, r) { var n = r(50), o = r(75); const c = r(23); var l = function (e, t, r, l, h, d, f) { t = c(t), r = c(r), l = c(l), h = c(h), d = c(d), f = c(f); var m = n("M %f %f L %f %f M %f %f L %f %f", d, t, f, r, d, l, f, h); return o(e, { path: m, highlight: "stroke", stroke: e.foregroundColor, class: e.controller.classes.generate("dynamics decoration") }) }; e.exports = function (e, t, r) { void 0 === t.pitch && window.console.error("Crescendo Element y-coordinate not set."); var n, o = e.calcY(t.pitch) + 4, c = t.anchor1 ? t.anchor1.x : 0, h = t.anchor2 ? t.anchor2.x : 800; return n = "<" === t.dir ? l(e, o + 4, o, o + 4, o + 8, c, h) : l(e, o, o + 4, o + 8, o + 4, c, h), r.wrapSvgEl({ el_type: "dynamicDecoration", startChar: -1, endChar: -1 }, n), [n] } }, function (e, t, r) { var n = r(148); e.exports = function (e, t, r) { void 0 === t.pitch && window.console.error("Dynamic Element y-coordinate not set."); var o = n(e, t.anchor.x, t.pitch, t.dec, 1, 1, e.controller.classes.generate("decoration dynamics")); return r.wrapSvgEl({ el_type: "dynamicDecoration", startChar: -1, endChar: -1, decoration: t.dec }, o), [o] } }, function (e, t, r) { var n = r(50), o = r(30), c = r(75); const l = r(23); function h(e, t, r, b) { return n("M %f %f L %f %f", l(e), l(t), l(r), l(b)) } e.exports = function (e, t, r) { e.paper.openGroup({ klass: e.controller.classes.generate("triplet " + t.durationClass) }), t.hasBeam || function (e, t, r, n, o) { r = e.calcY(r), o = e.calcY(o); var l = 5, d = ""; d += h(t, r, t, r + l), d += h(n, o, n, o + l); var f = t + (n - t) / 2, m = 8, v = (o - r) / (n - t), y = f - m; d += h(t, r, y, r + (y - t) * v); var x = f + m; d += h(x, r + (x - t) * v, n, o), c(e, { path: d, stroke: e.foregroundColor }) }(e, t.anchor1.x, t.startNote, t.anchor2.x + t.anchor2.w, t.endNote), o(e, { x: t.xTextPos, y: e.calcY(t.yTextPos - 1), text: "" + t.number, type: "tripletfont", anchor: "middle", centerVertically: !0, noClass: !0 }); var g = e.paper.closeGroup(); return r.wrapSvgEl({ el_type: "triplet", startChar: -1, endChar: -1 }, g), g } }, function (e, t, r) { var n = r(50), o = r(30), c = r(75); const l = r(23); e.exports = function (e, t, r, h, d) { void 0 === t.pitch && window.console.error("Ending Element y-coordinate not set."); var f = l(e.calcY(t.pitch)), m = ""; t.anchor1 && (r = l(t.anchor1.x + t.anchor1.w), m += n("M %f %f L %f %f ", r, f, r, l(f + 20))), t.anchor2 && (h = l(t.anchor2.x), m += n("M %f %f L %f %f ", h, f, h, l(f + 20))), m += n("M %f %f L %f %f ", r, f, h, f), e.paper.openGroup({ klass: e.controller.classes.generate("ending") }), c(e, { path: m, stroke: e.foregroundColor, fill: e.foregroundColor }), t.anchor1 && o(e, { x: l(r + 5), y: l(e.calcY(t.pitch - .5)), text: t.text, type: "repeatfont", klass: "ending", anchor: "start", noClass: !0 }); var g = e.paper.closeGroup(); return d.wrapSvgEl({ el_type: "ending", startChar: -1, endChar: -1 }, g), [g] } }, function (e, t, r) { var n = r(50); const o = r(23); var c = function (e, t, r) { e.anchor1 && e.anchor2 ? e.anchor1.pitch === e.anchor2.pitch && 0 === e.internalNotes.length ? e.isTie = !0 : e.isTie = !1 : e.isTie = !0, e.isTie ? (e.calcTieDirection(), e.calcX(t, r), e.calcTieY()) : (e.calcSlurDirection(), e.calcX(t, r), e.calcSlurY()), e.avoidCollisionAbove() }, l = function (e, t, r, c, l, h, d, f, m) { var v = f ? 1.2 : 1.5; t = o(t + 6), r = o(r + 4), c += h ? v : -v, l += h ? v : -v; var y, x = o(e.calcY(c)), w = o(e.calcY(l)), k = r - t, T = w - x, C = Math.sqrt(k * k + T * T), A = k / C, S = T / C, _ = C / 3.5, E = f ? 10 : 25, M = (h ? -1 : 1) * Math.min(E, Math.max(4, _)), N = o(t + _ * A - M * S), B = o(x + _ * S + M * A), P = o(r - _ * A - M * S), L = o(w - _ * S + M * A); if (d ? d += " slur" : d = "slur", d += f ? " tie" : " legato", m) { d += " dotted"; var H = n("M %f %f C %f %f %f %f %f %f", t, x, N, B, P, L, r, w); y = e.paper.path({ path: H, stroke: e.foregroundColor, fill: "none", "stroke-dasharray": "5 5", class: e.controller.classes.generate(d) }) } else { var O = n("M %f %f C %f %f %f %f %f %f C %f %f %f %f %f %f z", t, x, N, B, P, L, r, w, o(P - 2 * S), o(L + 2 * A), o(N - 2 * S), o(B + 2 * A), t, x); y = e.paper.path({ path: O, stroke: "none", fill: e.foregroundColor, class: e.controller.classes.generate(d) }) } return y }; e.exports = function (e, t, r, n, o) { c(t, r, n); var h = ""; t.anchor1 ? h += "abcjs-start-m" + t.anchor1.parent.counters.measure + "-n" + t.anchor1.parent.counters.note : h += "abcjs-start-edge", t.anchor2 ? h += " abcjs-end-m" + t.anchor2.parent.counters.measure + "-n" + t.anchor2.parent.counters.note : h += " abcjs-end-edge", t.hint && (h = "abcjs-hint"); var d = t.fixedY ? 1.5 : 0, f = l(e, t.startX, t.endX, t.startY + d, t.endY + d, t.above, h, t.isTie, t.dotted); return o.wrapSvgEl({ el_type: "slur", startChar: -1, endChar: -1 }, f), [f] } }, function (e, t, r) { var n = r(75); const o = r(23); function c(e, t, r, n, c, l) { r = o(e.calcY(r)), c = o(e.calcY(c)), t = o(t), n = o(n); var h = o(r + l); return "M" + t + " " + r + " L" + n + " " + c + "L" + n + " " + o(c + l) + " L" + t + " " + h + "z" } function l(e, t, r, n, o) { return (o - r) / (n - t) } function h(e, t, r, n) { return t + (n - e) * r } e.exports = function (e, t) { if (0 !== t.beams.length) { for (var r = "", i = 0; i < t.beams.length; i++) { var o = t.beams[i]; if (o.split) { for (var d = l(e, o.startX, o.startY, o.endX, o.endY), f = [], m = 0; m < o.split.length; m += 2)f.push([o.split[m], o.split[m + 1]]); for (m = 0; m < f.length; m++) { var v = h(o.startX, o.startY, d, f[m][0]), y = h(o.startX, o.startY, d, f[m][1]); r += c(e, f[m][0], v, f[m][1], y, o.dy) } } else r += c(e, o.startX, o.startY, o.endX, o.endY, o.dy) } var x = ("abcjs-d" + t.duration).replace(/\./g, "-"), w = e.controller.classes.generate("beam-elem " + x); return [n(e, { path: r, stroke: "none", fill: e.foregroundColor, class: w })] } } }, function (e, t, r) { var n = r(264), o = r(149), c = r(9), l = r(74), h = r(101); e.exports = function (e, t, r, d, f) { if (!t.invisible) { var m = t.children.length > 0 && "TempoElement" === t.children[0].type; t.elemset = [], h.beginGroup(e.paper, e.controller); for (var i = 0; i < t.children.length; i++) { var v, y = t.children[i]; switch (y.type) { case "TempoElement": (v = n(e, y)) && (t.elemset = t.elemset.concat(v)); break; default: (v = o(e, y, r)) && t.elemset.push(v) } } var x = t.type; if (("note" === t.type || "rest" === t.type) && (t.counters = e.controller.classes.getCurrent(), x = (x += " d" + Math.round(1e3 * t.durationClass) / 1e3).replace(/\./g, "-"), t.abcelem.pitches)) for (var w = 0; w < t.abcelem.pitches.length; w++)x += " p" + t.abcelem.pitches[w].pitch; var g = h.endGroup(x); if (g ? m && t.elemset.length > 0 ? (e.paper.moveElementToChild(t.elemset[0], g), d.add(t, t.elemset[0], !1, f)) : (t.elemset.push(g), d.add(t, g, "note" === t.type, f)) : t.elemset.length > 0 && d.add(t, t.elemset[0], "note" === t.type, f), t.klass && l(t.elemset, "mark", "", "#00ff00"), t.hint && l(t.elemset, "abcjs-hint", "", null), t.abcelem.abselem = t, t.heads && t.heads.length > 0) { t.notePositions = []; for (var k = 0; k < t.heads.length; k++)t.notePositions.push({ x: t.heads[k].x + t.heads[k].w / 2, y: f.zero - t.heads[k].pitch * c.STEP }) } } } }, function (e, t, r) { var n = r(149), o = r(30); e.exports = function (e, t) { var r = t.x; void 0 === t.pitch && window.console.error("Tempo Element y-coordinate not set."), t.tempo.el_type = "tempo", e.paper.openGroup({ klass: e.controller.classes.generate("tempo") }); var text, c = e.calcY(t.pitch) + 2; if (t.tempo.preString) { text = o(e, { x: r, y: c, text: t.tempo.preString, type: "tempofont", klass: "abcjs-tempo", anchor: "start", noClass: !0, "dominant-baseline": "ideographic" }); var l = e.controller.getTextSize.calc(t.tempo.preString, "tempofont", "tempo", text).width; r += l + l / t.tempo.preString.length } if (t.note) { t.note.setX(r); for (var i = 0; i < t.note.children.length; i++)n(e, t.note.children[i], r); r += t.note.w + 5; var h = "= " + t.tempo.bpm; text = o(e, { x: r, y: c, text: h, type: "tempofont", klass: "abcjs-tempo", anchor: "start", noClass: !0 }); var d = e.controller.getTextSize.calc(h, "tempofont", "tempo", text).width; r += d + d / h.length } return t.tempo.postString && o(e, { x: r, y: c, text: t.tempo.postString, type: "tempofont", klass: "abcjs-tempo", anchor: "start", noClass: !0 }), [e.paper.closeGroup()] } }, function (e, t, r) { var n = r(151); e.exports = function (e, t, r, o) { var c = "abcjs-top-line"; if (e.paper.openGroup({ prepend: !0, klass: e.controller.classes.generate("abcjs-staff") }), 1 === o) n(e, t, r, 6, c); else for (var i = o - 1; i >= 0; i--)n(e, t, r, 2 * (i + 1), c), c = void 0; e.paper.closeGroup() } }, function (e, t) { e.exports = function (e, t, r) { var n = e.paper.rectBeneath(t); return r && e.paper.text(r, { x: 0, y: t.y + 7, "text-anchor": "start", "font-size": "14px", fill: "rgba(0,0,255,.4)", stroke: "rgba(0,0,255,.4)" }), n } }, function (e, t) { e.exports = function (e, t, r, n) { var o = (t + e.padding.right) * r, c = (e.y + e.padding.bottom) * r; e.isPrint && (c = Math.max(c, 1056)); var text = "Sheet Music"; e.abctune && e.abctune.metaText && e.abctune.metaText.title && (text += ' for "' + e.abctune.metaText.title + '"'), e.paper.setTitle(text); var label = e.ariaLabel ? e.ariaLabel : text; e.paper.setAttribute("aria-label", label), e.paper.insertStyles(".abcjs-dragging-in-progress text, .abcjs-dragging-in-progress tspan {" + ["-webkit-touch-callout: none;", "-webkit-user-select: none;", "-khtml-user-select: none;", "-moz-user-select: none;", "-ms-user-select: none;", "user-select: none;"].join(" ") + "}"); var l = { overflow: "hidden" }; "resize" === n ? e.paper.setResponsiveWidth(o, c) : (l.width = "", l.height = c + "px", r < 1 ? (l.width = o + "px", e.paper.setSize(o / r, c / r)) : e.paper.setSize(o, c)), e.paper.setScale(r), e.paper.setParentStyles(l) } }, function (e, t, r) { var n = r(269), o = r(30); e.exports = function (e, t, r) { for (var i = 0; i < t.rows.length; i++) { var c = t.rows[i]; if (c.move) e.moveY(c.move); else if (c.text) { var l = c.left ? c.left : 0, h = o(e, { x: l, y: e.y, text: c.text, type: c.font, klass: c.klass, anchor: c.anchor }); c.absElemType && r.wrapSvgEl({ el_type: c.absElemType, startChar: -1, endChar: -1, text: c.text }, h) } else if (c.separator) n(e, c.separator); else if (c.startGroup) e.paper.openGroup({ klass: c.klass }); else if (c.endGroup) { var g = e.paper.closeGroup(); c.absElemType && r.wrapSvgEl({ el_type: c.absElemType, startChar: -1, endChar: -1, text: "" }, g) } } } }, function (e, t) { e.exports = function (e, t) { var r = Math.round(e.y), n = (e.controller.width - t) / 2, o = n + t, c = "M " + n + " " + r + " L " + o + " " + r + " L " + o + " " + (r + 1) + " L " + n + " " + (r + 1) + " L " + n + " " + r + " z"; e.paper.pathToBack({ path: c, stroke: "rgba(0,0,0,0)", fill: "rgba(0,0,0,255)", class: e.controller.classes.generate("defined-text") }) } }, function (e, t, r) { var n = r(144), o = r(145); function c(e, t, r) { this.elements = [], this.paper = e, this.tuneNumber = r, this.selectTypes = t } c.prototype.getElements = function () { return this.elements }, c.prototype.add = function (e, t, r, n) { if (this.canSelect(e)) { var o; o = void 0 === this.selectTypes ? { selectable: !1, "data-index": this.elements.length } : { selectable: !0, tabindex: 0, "data-index": this.elements.length }, this.paper.setAttributeOnElement(t, o); var c = { absEl: e, svgEl: t, isDraggable: r }; void 0 !== n && (c.staffPos = n), this.elements.push(c) } }, c.prototype.canSelect = function (e) { return !1 !== this.selectTypes && (!(!e || !e.abcelem) && (!0 === this.selectTypes || (void 0 === this.selectTypes ? "note" === e.abcelem.el_type : this.selectTypes.indexOf(e.abcelem.el_type) >= 0))) }, c.prototype.wrapSvgEl = function (e, t) { var r = { tuneNumber: this.tuneNumber, abcelem: e, elemset: [t], highlight: n, unhighlight: o }; this.add(r, t, !1) }, e.exports = c }, function (e, t, r) { var n = r(103); e.exports = function (e, t, r, o) { return new Promise((function (c, l) { n[t] || (n[t] = {}); var h = n[t]; if ("error" === h[r]) return c({ instrument: t, name: r, status: "error", message: "Unable to load sound font " + e + " " + t + " " + r }); if ("pending" === h[r]) return c({ instrument: t, name: r, status: "pending" }); if (h[r]) return c({ instrument: t, name: r, status: "cached" }); h[r] = "pending"; var d = new XMLHttpRequest; d.open("GET", e + t + "-mp3/" + r + ".mp3", !0), d.responseType = "arraybuffer"; var f = this; function m(e) { h[r] = e, c({ instrument: t, name: r, status: "loaded" }) } function v(n) { return n = "Can't decode sound. " + e + " " + t + " " + r + " " + n, f.debugCallback && f.debugCallback(n), c({ instrument: t, name: r, status: "error", message: n }) } d.onload = function (n) { if (200 !== this.status) { h[r] = "error"; var d = "Onload error loading sound: " + r + " " + e + " " + n.currentTarget.status + " " + n.currentTarget.statusText; return f.debugCallback && f.debugCallback(d), c({ instrument: t, name: r, status: "error", message: d }) } try { var y = o.decodeAudioData(this.response, m, v); y && y.catch && y.catch((function () { })) } catch (e) { l(e) } }, d.addEventListener("error", (function () { h[r] = "error"; var n = "Error in loading sound:  " + e; return f.debugCallback && f.debugCallback(n), c({ instrument: t, name: r, status: "error", message: n }) }), !1), d.send() })) } }, function (e, t, r) { var n = r(104); e.exports = function (e) { for (var map = [], i = 0; i < e.tracks.length; i++)map.push([]); var t = n[0]; return e.tracks.forEach((function (track, i) { track.forEach((function (e) { switch (e.cmd) { case "note": if (e.duration > 0) { var r = e.gap ? e.gap : 0, o = e.duration; r = Math.min(r, 2 * o / 3); var c = { pitch: e.pitch, instrument: t, start: Math.round(1e6 * e.start) / 1e6, end: Math.round(1e6 * (e.start + o - r)) / 1e6, volume: e.volume }; e.style && (c.style = e.style), map[i].push(c) } break; case "program": t = n[e.instrument]; break; case "text": break; default: console.log("Unhandled midi event", e) } })) })), map } }, function (e, t) { e.exports = function (e) { return window.URL.createObjectURL(function (e) { var i, t, r = e[0], n = r.numberOfChannels, o = r.length * n * 2 + 44, c = new ArrayBuffer(o), view = new DataView(c), l = [], h = 0, d = 0; for (m(1179011410), m(o - 8), m(1163280727), m(544501094), m(16), f(1), f(n), m(r.sampleRate), m(2 * r.sampleRate * n), f(2 * n), f(16), m(1635017060), m(o - d - 4), i = 0; i < n; i++)l.push(r.getChannelData(i)); for (; d < o;) { for (i = 0; i < l.length; i++)t = 0 | (.5 + (t = Math.max(-1, Math.min(1, l[i][h]))) < 0 ? 32768 * t : 32767 * t), view.setInt16(d, t, !0), d += 2; h++ } return new Blob([c], { type: "audio/wav" }); function f(data) { view.setUint16(d, data, !0), d += 2 } function m(data) { view.setUint32(d, data, !0), d += 4 } }(e.audioBuffers)) } }, function (e, t, r) { var n = r(103), o = r(105); var c = function (e, t, r) { for (var n = 0; n < 2; n++)for (var o = t.getChannelData(n), c = e.getChannelData(n), l = 0; l < o.length; l++)c[l + r] += o[l] }; e.exports = function (e, t, r, l, h, d, f, m) { var v = window.OfflineAudioContext || window.webkitOfflineAudioContext, y = r.len * r.tempoMultiplier; d && (y += d / 1e3), (y -= m) < 0 && (y = .005); var x = new v(2, Math.floor((y + f) * t * 2), t), w = o[r.pitch], k = n[r.instrument][w]; if ("error" !== k && "pending" !== k) { var source = x.createBufferSource(); source.buffer = k; var T, C = r.volume / 96 * h; return source.gainNode = x.createGain(), r.pan && x.createStereoPanner && (source.panNode = x.createStereoPanner(), source.panNode.pan.setValueAtTime(r.pan, 0)), source.gainNode.gain.value = C, source.gainNode.gain.linearRampToValueAtTime(source.gainNode.gain.value, y), source.gainNode.gain.linearRampToValueAtTime(0, y + f), source.panNode ? (source.panNode.connect(x.destination), source.gainNode.connect(source.panNode)) : source.gainNode.connect(x.destination), source.connect(source.gainNode), source.start(0), source.noteOff ? source.noteOff(y + f) : source.stop(y + f), x.oncomplete = function (n) { if (n.renderedBuffer) for (var i = 0; i < l.length; i++) { var o = l[i] * r.tempoMultiplier; d && (o -= d / 1e3), o < 0 && (o = 0), o = Math.floor(o * t), c(e, n.renderedBuffer, o) } T() }, x.startRendering(), new Promise((function (e, t) { T = e })) } console.log("Didn't load note", r.instrument, w, k) } }, function (e, t) { e.exports = '\n<svg version="1.0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 700 700" preserveAspectRatio="xMidYMid meet">\n\t<g transform="translate(0,700) scale(0.1,-0.1)" >\n\t<path d="M3111 6981 c-20 -37 -90 -55 -364 -96 -120 -18 -190 -33 -244 -55\n\t-42 -17 -124 -42 -182 -56 -78 -18 -119 -34 -157 -60 -28 -19 -86 -46 -128\n\t-60 -43 -13 -107 -42 -144 -64 -37 -23 -84 -46 -106 -52 -21 -7 -56 -29 -79\n\t-50 -22 -22 -61 -50 -86 -63 -26 -13 -67 -40 -91 -60 -24 -20 -65 -47 -90 -60\n\t-25 -13 -53 -31 -61 -41 -8 -9 -32 -30 -54 -46 -75 -54 -486 -460 -512 -507\n\t-15 -25 -48 -69 -75 -98 -26 -28 -48 -57 -48 -63 0 -6 -18 -29 -39 -53 -21\n\t-23 -56 -71 -77 -107 -20 -36 -50 -80 -65 -97 -16 -18 -33 -52 -40 -75 -12\n\t-47 -47 -115 -84 -166 -13 -18 -30 -56 -38 -83 -8 -27 -34 -80 -56 -118 -33\n\t-53 -46 -91 -62 -167 -12 -63 -34 -127 -59 -179 -42 -84 -60 -166 -60 -270 0\n\t-90 26 -122 125 -154 54 -17 96 -19 430 -20 305 -1 381 2 430 14 82 22 140 51\n\t153 78 6 12 22 47 37 77 14 30 38 77 54 103 15 27 34 73 40 103 7 30 28 78 48\n\t107 19 28 44 74 55 101 10 28 34 67 53 87 18 20 49 61 68 90 19 30 44 63 57\n\t74 13 11 36 40 52 65 59 94 232 270 306 313 20 11 57 37 82 58 25 20 70 52\n\t100 72 30 19 66 47 79 61 13 14 49 35 80 46 30 12 80 37 111 56 31 19 95 45\n\t143 58 48 12 110 37 139 55 63 40 127 55 323 76 83 9 208 28 279 41 156 29\n\t165 29 330 4 453 -71 514 -84 606 -130 31 -16 83 -36 116 -45 32 -9 84 -34\n\t115 -56 31 -21 82 -48 113 -60 32 -11 72 -33 89 -48 18 -16 59 -45 92 -65 33\n\t-21 74 -51 90 -66 17 -15 49 -40 73 -54 52 -32 65 -61 50 -113 -8 -31 -61 -90\n\t-277 -308 -300 -303 -361 -382 -369 -481 -2 -29 0 -66 6 -81 13 -40 88 -138\n\t115 -151 12 -6 54 -26 92 -44 l70 -33 945 -2 c520 -1 975 2 1012 7 64 8 191\n\t50 231 76 11 7 33 34 50 60 22 34 42 51 65 58 l32 9 0 1101 0 1102 -32 9 c-21\n\t7 -44 26 -64 55 -60 84 -77 97 -140 110 -44 9 -76 10 -127 2 -59 -9 -77 -17\n\t-134 -62 -37 -28 -172 -155 -301 -281 -129 -127 -249 -237 -267 -245 -25 -10\n\t-41 -11 -71 -2 -58 15 -112 45 -124 69 -6 11 -35 35 -64 54 -28 18 -58 41 -66\n\t50 -8 9 -41 35 -75 58 -33 22 -77 56 -99 75 -21 18 -64 46 -95 61 -31 14 -73\n\t39 -93 55 -20 15 -70 40 -110 55 -40 15 -97 44 -127 64 -29 21 -78 44 -107 53\n\t-30 8 -77 31 -105 51 -42 28 -73 39 -173 60 -68 14 -154 39 -196 58 -95 43\n\t-131 51 -343 76 -209 24 -242 32 -279 70 l-30 29 -328 0 c-312 0 -330 -1 -339\n\t-19z"></path>\n\t<path d="M254 2875 c-89 -16 -107 -26 -145 -78 -32 -44 -62 -66 -91 -67 -17 0\n\t-18 -61 -18 -1140 l0 -1140 24 0 c16 0 41 -17 72 -50 40 -42 61 -55 117 -72\n\tl69 -21 82 23 c44 12 96 30 114 39 18 9 148 132 290 272 141 141 267 261 279\n\t268 51 26 86 14 176 -61 32 -26 62 -48 66 -48 5 0 36 -25 70 -55 34 -30 74\n\t-61 89 -69 15 -8 37 -28 50 -45 12 -17 50 -45 84 -62 34 -17 78 -44 98 -60 19\n\t-16 61 -37 93 -48 32 -11 81 -37 107 -56 27 -20 76 -45 109 -56 33 -12 75 -31\n\t93 -44 62 -45 93 -58 191 -82 54 -12 130 -37 168 -54 68 -29 180 -58 226 -59\n\t62 0 183 -64 183 -96 0 -12 88 -14 639 -14 l639 0 12 30 c18 44 76 66 233 89\n\t89 14 160 30 200 47 34 15 106 42 159 60 54 18 112 44 130 57 47 35 85 52 146\n\t67 29 7 76 28 105 48 29 20 77 48 107 63 30 15 66 39 80 54 14 15 50 40 81 56\n\t31 15 78 46 104 69 26 22 61 46 79 54 17 7 43 26 56 42 14 16 41 41 60 56 64\n\t48 380 362 408 405 15 23 40 51 55 63 15 12 36 38 46 58 11 21 37 57 58 82 22\n\t25 49 62 62 83 13 20 38 56 57 78 19 23 50 74 69 113 19 39 46 86 59 104 14\n\t18 34 62 46 98 12 36 32 77 45 92 31 38 60 97 80 167 9 33 26 76 37 95 29 50\n\t47 103 68 206 10 52 32 117 51 155 29 56 33 74 34 140 0 94 -10 108 -101 138\n\t-61 20 -83 21 -463 21 -226 0 -421 -4 -451 -10 -63 -12 -86 -30 -110 -85 -10\n\t-22 -33 -63 -52 -92 -21 -31 -42 -80 -53 -123 -11 -44 -32 -93 -56 -128 -20\n\t-32 -47 -83 -59 -115 -12 -32 -37 -77 -56 -100 -19 -23 -50 -65 -69 -94 -19\n\t-29 -44 -57 -54 -63 -11 -5 -29 -27 -42 -47 -52 -85 -234 -277 -300 -315 -25\n\t-15 -53 -38 -62 -51 -9 -14 -42 -39 -74 -57 -32 -18 -75 -48 -95 -66 -21 -18\n\t-59 -44 -85 -58 -26 -13 -72 -40 -100 -59 -35 -24 -78 -41 -128 -52 -47 -11\n\t-99 -31 -139 -56 -69 -42 -94 -49 -391 -110 -245 -51 -425 -66 -595 -50 -168\n\t16 -230 27 -330 61 -47 16 -123 35 -170 44 -98 17 -123 25 -172 58 -20 14 -71\n\t37 -114 53 -44 15 -95 40 -115 56 -20 16 -70 42 -110 59 -40 16 -88 45 -108\n\t63 -20 19 -55 46 -78 61 -24 14 -49 35 -55 47 -7 11 -34 33 -60 49 -50 31 -65\n\t61 -53 102 4 13 130 147 281 298 236 238 277 283 299 335 15 32 35 71 46 86\n\t12 18 19 44 19 76 0 42 -8 63 -53 138 -92 151 11 139 -1207 141 -798 2 -1030\n\t0 -1086 -11z"></path>\n\t</g>\n</svg>\n' }, function (e, t) { e.exports = '\n<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" class="abcjs-play-svg">\n    <g>\n    <polygon points="4 0 23 12.5 4 25"/>\n    </g>\n</svg>\n' }, function (e, t) { e.exports = '\n<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" class="abcjs-pause-svg">\n  <g>\n    <rect width="8.23" height="25"/>\n    <rect width="8.23" height="25" x="17"/>\n  </g>\n</svg>\n' }, function (e, t) { e.exports = '\n<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" class="abcjs-loading-svg">\n    <circle cx="50" cy="50" fill="none" stroke-width="20" r="35" stroke-dasharray="160 55"></circle>\n</svg>\n' }, function (e, t) { e.exports = '\n<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25">\n  <g>\n    <polygon points="5 12.5 24 0 24 25"/>\n    <rect width="3" height="25" x="0" y="0"/>\n  </g>\n</svg>\n' }, function (e, t, r) { var n = r(152), o = r(102); e.exports = function (e, t, r) { for (var c = new n, i = 0; i < e.length; i++) { var l = e[i], h = c.addTrack(); if (c.setInstrument(h, l.instrument), 0 === i && t) for (var d = 0; d < t.length; d++) { var f = t[d]; c.appendNote(h, f.pitch, 1 / 64, f.volume) } c.appendNote(h, l.pitch, l.duration, l.volume) } var m = new o; return m.init({ sequence: c, millisecondsPerMeasure: r }).then((function () { return m.prime() })).then((function () { return m.start() })) } }, function (e, t, r) { var n = r(97), o = r(282); var c = function (e, t, r, n) { var o = ["abcjs-download-midi", "abcjs-midi-" + n]; t.downloadClass && o.push(t.downloadClass); var html = '<div class="' + o.join(" ") + '">'; t.preTextDownload && (html += t.preTextDownload); var label, c, title = e.metaText && e.metaText.title ? e.metaText.title : "Untitled"; return label = t.downloadLabel && ((c = t.downloadLabel) && "[object Function]" === {}.toString.call(c)) ? t.downloadLabel(e, n) : t.downloadLabel ? t.downloadLabel.replace(/%T/, title) : 'Download MIDI for "' + title + '"', html += '<a download="' + (title = title.toLowerCase().replace(/'/g, "").replace(/\W/g, "_").replace(/__/g, "_")) + '.midi" href="' + r + '">' + label + "</a>", t.postTextDownload && (html += t.postTextDownload), html + "</div>" }; e.exports = function (e, t) { var r = {}; if (t) for (var l in t) t.hasOwnProperty(l) && (r[l] = t[l]); return r.generateInline = !1, n.renderEngine((function (div, e, t, n) { var l = o(e, r); switch (r.midiOutputType) { case "encoded": return l; case "binary": var h = l.replace("data:audio/midi,", ""); h = (h = h.replace(/MThd/g, "%4d%54%68%64")).replace(/MTrk/g, "%4d%54%72%6b"); for (var d = new ArrayBuffer(h.length / 3), output = new Uint8Array(d), i = 0; i < h.length / 3; i++) { var p = 3 * i + 1, f = parseInt(h.substring(p, p + 2), 16); output[i] = f } return output; case "link": default: return c(e, r, l, t) } }), "*", e, r) } }, function (e, t, r) { var n, o = r(283), c = r(284); !function () { "use strict"; function e(e, t, r, n) { for (var o = Object.keys(r), c = 0; c < o.length; c++)o[c] = parseFloat(o[c]); o.sort((function (a, b) { return a - b })); for (var l = 0, i = 0; i < o.length; i++) { var h = r[o[i]]; if (o[i] > l) { var d = (o[i] - l) * n; e.addRest(d), t.addRest(d), l = o[i] } for (var f = 0; f < h.length; f++) { var m = h[f]; m.volume ? (e.startNote(m.pitch, m.volume), t.startNote(m.pitch, m.volume)) : (e.endNote(m.pitch), t.endNote(m.pitch)) } } } n = function (t, r) { void 0 === r && (r = {}); var n = t.setUpAudio(r), l = c(), h = new o, title = t.metaText ? t.metaText.title : void 0; title && title.length > 128 && (title = title.substring(0, 124) + "..."); var d = t.getKeySignature(), time = t.getMeterFraction(); l.setGlobalInfo(n.tempo, title, d, time), h.setGlobalInfo(n.tempo, title); for (var i = 0; i < n.tracks.length; i++) { l.startTrack(), h.startTrack(); for (var f = {}, m = 0; m < n.tracks[i].length; m++) { var v = n.tracks[i][m]; switch (v.cmd) { case "text": l.setText(v.type, v.text); break; case "program": var y = 0; r.pan && r.pan.length > i && (y = r.pan[i]), l.setChannel(v.channel, y), l.setInstrument(v.instrument), h.setChannel(v.channel), h.setInstrument(v.instrument); break; case "note": var x = v.start, w = x + v.duration; f[x] || (f[x] = []), f[x].push({ pitch: v.pitch, volume: v.volume }), f[w] || (f[w] = []), f[w].push({ pitch: v.pitch, volume: 0 }); break; default: console.log("MIDI create Unknown: " + v.cmd) } } e(l, h, f, 1920), l.endTrack(), h.endTrack() } var k = l.getData(), T = h.getData(); return void 0 === r.generateInline && (r.generateInline = !0), r.generateInline && r.generateDownload ? { download: k, inline: T } : r.generateInline ? T : k } }(), e.exports = n }, function (e, t) { var r; !function () { "use strict"; (r = function () { this.tempo = 0, this.timeFactor = 0, this.output = [], this.currentChannel = 0, this.currentInstrument = 0, this.track = 0, this.nextDuration = 0, this.tracks = [[]] }).prototype.setInstrument = function (e) { this.currentInstrument = e; var t = [{ ticksToEvent: 0, track: this.track, event: { channel: this.currentChannel, deltaTime: 0, programNumber: this.currentInstrument, subtype: "programChange", type: "channel" } }, this.nextDuration * this.timeFactor]; this.tracks[this.track].push(t) }, r.prototype.setChannel = function (e) { this.currentChannel = e }, r.prototype.startTrack = function () { this.track++, this.tracks[this.track] = [], this.nextDuration = 0 }, r.prototype.setGlobalInfo = function (e, title) { this.tempo = e; var t = Math.round(1 / e * 6e7); this.timeFactor = t / 48e4; this.track, this.nextDuration, this.timeFactor; this.track, this.nextDuration, this.timeFactor, this.track, this.nextDuration, this.timeFactor }, r.prototype.startNote = function (e, t) { var r = 5 * Math.floor(this.nextDuration / 5), n = [{ ticksToEvent: r, track: this.track, event: { deltaTime: r, channel: this.currentChannel, type: "channel", noteNumber: e, velocity: t, subtype: "noteOn" } }, this.nextDuration * this.timeFactor]; this.tracks[this.track].push(n), this.nextDuration = 0 }, r.prototype.endNote = function (e) { var t = 5 * Math.floor(this.nextDuration / 5), r = [{ ticksToEvent: t, track: this.track, event: { deltaTime: t, channel: this.currentChannel, type: "channel", noteNumber: e, velocity: 0, subtype: "noteOff" } }, this.nextDuration * this.timeFactor]; this.tracks[this.track].push(r), this.nextDuration = 0 }, r.prototype.addRest = function (e) { this.nextDuration += e }, r.prototype.endTrack = function () { this.track }, r.prototype.getData = function () { return function (e) { !function (e) { for (var i = 0; i < e.length; i++)for (var t = 0, r = 0; r < e[i].length; r++)t += e[i][r][1], e[i][r].absTime = t }(e); var output = function (e) { for (var output = [], i = 0; i < e.length; i++)for (var t = 0; t < e[i].length; t++)output.push(e[i][t]); return output }(e); return function (output) { for (var e = 0, i = 0; i < output.length; i++) { var t = output[i].absTime; output[i][1] = t - e, e = t } }(output = function (output) { return output.sort((function (a, b) { if (a.absTime > b.absTime) return 1; if (a.absTime === b.absTime && a.length > 0 && b.length > 0 && a[0].event && b[0].event) { var e = a[0].event.channel, t = b[0].event.channel; if (e > t) return 1; if (e < t) return -1; if ("programChange" === b[0].event.subtype) return 1 } return -1 })) }(output)), output }(this.tracks) } }(), e.exports = r }, function (e, t) { var r; !function () { "use strict"; function e(e, t) { for (var r in t) t.hasOwnProperty(r) && e.setAttribute(r, t[r]); return e } function t() { this.trackstrings = "", this.trackcount = 0, this.noteOnAndChannel = "%90", this.noteOffAndChannel = "%80" } function n(e, t) { for (var r = "", i = 0; i < e.length; i++)r += o(e.charCodeAt(i), 2); return "%00%FF" + t + o(r.length / 3, 2) + r } function o(e, t) { for (var s = e.toString(16); s.length < t;)s = "0" + s; return function (s) { for (var e = "", i = 0; i < s.length; i += 2)e += "%", e += s.substr(i, 2); return e }(s) } function c(e) { var t = 0, a = []; for (e = Math.round(e); 0 !== e;)a.push(127 & e), e >>= 7; for (var i = a.length - 1; i >= 0; i--) { t <<= 8; var r = a[i]; 0 !== i && (r |= 128), t |= r } var n = t.toString(16).length; return o(t, n += n % 2) } t.prototype.setTempo = function (e) { 0 === this.trackcount && (this.startTrack(), this.track += "%00%FF%51%03" + o(Math.round(6e7 / e), 6), this.endTrack()) }, t.prototype.setGlobalInfo = function (e, t, r, time) { if (0 === this.trackcount) { this.startTrack(); var c = Math.round(6e7 / e); this.track += "%00%FF%51%03" + o(c, 6), r && (this.track += function (e) { if (!e || !e.accidentals) return ""; for (var t = "%00%FF%59%02", r = 0, n = 256, i = 0; i < e.accidentals.length; i++)"sharp" === e.accidentals[i].acc ? r++ : "flat" === e.accidentals[i].acc && n--; var c = o(256 !== n ? n : r, 2), l = "m" === e.mode ? "%01" : "%00"; return t + c + l }(r)), time && (this.track += function (time) { var e, t = "%00%FF%58%04" + o(time.num, 2), r = { 1: 0, 2: 1, 4: 2, 8: 3, 16: 4, 32: 5 }[time.den]; if (!r) return ""; switch (t += o(r, 2), time.num + "/" + time.den) { case "2/4": case "3/4": case "4/4": case "5/4": e = 24; break; case "6/4": e = 72; break; case "2/2": case "3/2": case "4/2": e = 48; break; case "3/8": case "6/8": case "9/8": case "12/8": e = 36 }return e ? (t += o(e, 2)) + "%08" : "" }(time)), t && (this.track += n(t, "%01")), this.endTrack() } }, t.prototype.startTrack = function () { this.track = "", this.trackName = "", this.trackInstrument = "", this.silencelength = 0, this.trackcount++, this.instrument && this.setInstrument(this.instrument) }, t.prototype.endTrack = function () { this.track = this.trackName + this.trackInstrument + this.track; var e = o(this.track.length / 3 + 4, 8); this.track = "MTrk" + e + this.track + "%00%FF%2F%00", this.trackstrings += this.track }, t.prototype.setText = function (e, text) { switch (e) { case "name": this.trackName = n(text, "%03") } }, t.prototype.setInstrument = function (e) { this.trackInstrument = "%00%C0" + o(e, 2), this.instrument = e }, t.prototype.setChannel = function (e, t) { this.channel = e; var r = "%00%B" + this.channel.toString(16); this.track += r + "%79%00", this.track += r + "%40%00", this.track += r + "%5B%30", t || (t = 0), t = Math.round(64 * (t + 1)), this.track += r + "%0A" + o(t, 2), this.track += r + "%07%64", this.noteOnAndChannel = "%9" + this.channel.toString(16), this.noteOffAndChannel = "%8" + this.channel.toString(16) }, t.prototype.startNote = function (e, t) { this.track += c(this.silencelength), this.silencelength = 0, this.track += this.noteOnAndChannel, this.track += "%" + e.toString(16) + o(t, 2) }, t.prototype.endNote = function (e) { this.track += c(this.silencelength), this.silencelength = 0, this.track += this.noteOffAndChannel, this.track += "%" + e.toString(16) + "%00" }, t.prototype.addRest = function (e) { this.silencelength += e, this.silencelength < 0 && (this.silencelength = 0) }, t.prototype.getData = function () { return "data:audio/midi,MThd%00%00%00%06%00%01" + o(this.trackcount, 4) + "%01%e0" + this.trackstrings }, t.prototype.embed = function (t, r) { var data = this.getData(), link = e(document.createElement("a"), { href: data }); if (link.innerHTML = "download midi", t.insertBefore(link, t.firstChild), !r) { var embed = e(document.createElement("embed"), { src: data, type: "video/quicktime", controller: "true", autoplay: "false", loop: "false", enablejavascript: "true", style: "display:block; height: 20px;" }); t.insertBefore(embed, t.firstChild) } }, r = function () { return new t } }(), e.exports = r }, function (e, t, r) { var n = r(7), o = r(154), c = r(77), l = r(143), h = r(155); var d = function (e, t) { this.abcjsParams = function (e) { var t, r = {}; if (e.abcjsParams) for (t in e.abcjsParams) e.abcjsParams.hasOwnProperty(t) && (r[t] = e.abcjsParams[t]); if (e.midi_options) for (t in e.midi_options) e.midi_options.hasOwnProperty(t) && (r[t] = e.midi_options[t]); if (e.parser_options) for (t in e.parser_options) e.parser_options.hasOwnProperty(t) && (r[t] = e.parser_options[t]); if (e.render_options) for (t in e.render_options) e.render_options.hasOwnProperty(t) && (r[t] = e.render_options[t]); return r }(t), t.indicate_changed && (this.indicate_changed = !0), this.editarea = "string" == typeof e ? new h(e) : e, this.editarea.addSelectionListener(this), this.editarea.addChangeListener(this), t.canvas_id ? this.div = t.canvas_id : t.paper_id ? this.div = t.paper_id : (this.div = document.createElement("DIV"), this.editarea.getElem().parentNode.insertBefore(this.div, this.editarea.getElem())), "string" == typeof this.div && (this.div = document.getElementById(this.div)), t.selectionChangeCallback && (this.selectionChangeCallback = t.selectionChangeCallback), this.clientClickListener = this.abcjsParams.clickListener, this.abcjsParams.clickListener = this.highlight.bind(this), t.synth && c() && (this.synth = { el: t.synth.el, cursorControl: t.synth.cursorControl, options: t.synth.options }), t.generate_midi && (this.generate_midi = t.generate_midi, this.abcjsParams.generateDownload && ("string" == typeof t.midi_download_id ? this.downloadMidi = document.getElementById(t.midi_download_id) : t.midi_download_id && (this.downloadMidi = t.midi_download_id)), !1 !== this.abcjsParams.generateInline && ("string" == typeof t.midi_id ? this.inlineMidi = document.getElementById(t.midi_id) : t.midi_id && (this.inlineMidi = t.midi_id))), t.warnings_id ? "string" == typeof t.warnings_id ? this.warningsdiv = document.getElementById(t.warnings_id) : this.warningsdiv = t.warnings_id : t.generate_warnings && (this.warningsdiv = document.createElement("div"), this.div.parentNode.insertBefore(this.warningsdiv, this.div)), this.onchangeCallback = t.onchange, this.currentAbc = "", this.tunes = [], this.bReentry = !1, this.parseABC(), this.modelChanged(), this.addClassName = function (element, e) { return function (element, e) { var t = element.className; return t.length > 0 && (t === e || new RegExp("(^|\\s)" + e + "(\\s|$)").test(t)) }(element, e) || (element.className += (element.className ? " " : "") + e), element }, this.removeClassName = function (element, e) { return element.className = n.strip(element.className.replace(new RegExp("(^|\\s+)" + e + "(\\s+|$)"), " ")), element }, this.setReadOnly = function (e) { var t = "abc_textarea_readonly", r = this.editarea.getElem(); e ? (r.setAttribute("readonly", "yes"), this.addClassName(r, t)) : (r.removeAttribute("readonly"), this.removeClassName(r, t)) } }; d.prototype.redrawMidi = function () { if (this.generate_midi && !this.midiPause) { var e = new window.CustomEvent("generateMidi", { detail: { tunes: this.tunes, abcjsParams: this.abcjsParams, downloadMidiEl: this.downloadMidi, inlineMidiEl: this.inlineMidi, engravingEl: this.div } }); window.dispatchEvent(e) } if (this.synth) { var t = this.synth.synthControl; this.synth.synthControl || (this.synth.synthControl = new o, this.synth.synthControl.load(this.synth.el, this.synth.cursorControl, this.synth.options)), this.synth.synthControl.setTune(this.tunes[0], t, this.synth.options) } }, d.prototype.modelChanged = function () { this.bReentry || (this.bReentry = !0, this.timerId = null, this.synth && this.synth.synthControl && this.synth.synthControl.disable(!0), this.tunes = l(this.div, this.currentAbc, this.abcjsParams), this.tunes.length > 0 && (this.warnings = this.tunes[0].warnings), this.redrawMidi(), this.warningsdiv && (this.warningsdiv.innerHTML = this.warnings ? this.warnings.join("<br />") : "No errors"), this.updateSelection(), this.bReentry = !1) }, d.prototype.paramChanged = function (e) { if (e) for (var t in e) e.hasOwnProperty(t) && (this.abcjsParams[t] = e[t]); this.currentAbc = "", this.fireChanged() }, d.prototype.synthParamChanged = function (e) { if (this.synth.options = {}, e) for (var t in e) e.hasOwnProperty(t) && (this.synth.options[t] = e[t]); this.currentAbc = "", this.fireChanged() }, d.prototype.parseABC = function () { var e = this.editarea.getString(); return e === this.currentAbc ? (this.updateSelection(), !1) : (this.currentAbc = e, !0) }, d.prototype.updateSelection = function () { var e = this.editarea.getSelection(); try { this.tunes.length > 0 && this.tunes[0].engraver && this.tunes[0].engraver.rangeHighlight(e.start, e.end) } catch (e) { } this.selectionChangeCallback && this.selectionChangeCallback(e.start, e.end) }, d.prototype.fireSelectionChanged = function () { this.updateSelection() }, d.prototype.setDirtyStyle = function (e) { if (void 0 !== this.indicate_changed) { var element, t, r = "abc_textarea_dirty", o = this.editarea.getElem(); e ? function (element, e) { var t = element.className; return t.length > 0 && (t === e || new RegExp("(^|\\s)" + e + "(\\s|$)").test(t)) }(element = o, t = r) || (element.className += (element.className ? " " : "") + t) : function (element, e) { element.className = n.strip(element.className.replace(new RegExp("(^|\\s+)" + e + "(\\s+|$)"), " ")) }(o, r) } }, d.prototype.fireChanged = function () { if (!this.bIsPaused && this.parseABC()) { var e = this; this.timerId && clearTimeout(this.timerId), this.timerId = setTimeout((function () { e.modelChanged() }), 300); var t = this.isDirty(); this.wasDirty !== t && (this.wasDirty = t, this.setDirtyStyle(t)), this.onchangeCallback && this.onchangeCallback(this) } }, d.prototype.setNotDirty = function () { this.editarea.initialText = this.editarea.getString(), this.wasDirty = !1, this.setDirtyStyle(!1) }, d.prototype.isDirty = function () { return void 0 !== this.indicate_changed && this.editarea.initialText !== this.editarea.getString() }, d.prototype.highlight = function (e, t, r, n, o, c) { this.editarea.setSelection(e.startChar, e.endChar), this.selectionChangeCallback && this.selectionChangeCallback(e.startChar, e.endChar), this.clientClickListener && this.clientClickListener(e, t, r, n, o, c) }, d.prototype.pause = function (e) { this.bIsPaused = e, e || this.fireChanged() }, d.prototype.millisecondsPerMeasure = function () { return this.synth.synthControl.visualObj.millisecondsPerMeasure() }, d.prototype.pauseMidi = function (e) { this.midiPause = e, e || this.redrawMidi() }, e.exports = d }]]);